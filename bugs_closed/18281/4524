diff -r 09f0768a7ec1 web/default/jquery.tooltip.css
--- a/web/default/jquery.tooltip.css	Fri May 06 21:41:59 2011 +0200
+++ b/web/default/jquery.tooltip.css	Sat May 07 06:44:23 2011 +0200
@@ -2,8 +2,7 @@
 	position: absolute;
 	z-index: 3000;
 	border: 1px solid #111;
-	background-color: #eee;
+	background-color: rgba(238,238,238,0.75);
 	padding: 5px;
-        opacity: 0.90;
 }
 #tooltip h3, #tooltip div { margin: 0; font-size: small; }
diff -r 09f0768a7ec1 web/default/print.css
--- a/web/default/print.css	Fri May 06 21:41:59 2011 +0200
+++ b/web/default/print.css	Sat May 07 06:44:23 2011 +0200
@@ -1,237 +1,476 @@
+/* common stuff */
 body {
-	background-color: #ffffff;
-/*	font-size: 100.01%;*/
-	color: black;
-	font-family: arial, sans-serif;
-/*	padding: 1em;
-	margin: 0em;*/
+	font-family: "Liberation Sans", sans-serif;
+	margin: 1ex 1ex 0 1ex;
 }
 
-#Masthead {
-	background: none;
-	display:block;
-	border: none;
-	border-bottom: 1px solid #000;
-	/*padding-bottom:3px;
-	margin-bottom: 3px;*/
-}
-
-#header {
-min-height:44px;
-}
-
-#content {
-  position:absolute;  
-  bottom:0px;
-  left:0px;
-  right:0px;
-  padding-left: 1em;
-  padding-top:7px;
-  overflow:auto;
-  top:6em;
-  }
-
-#whole_header {
-  height:6em;
-  padding-left: 1em;
-  padding-right: 1em;
-  position:absolute;
-  top:0;
-  right:0px;
-  left:0px;
-  /*width:98%;*/
-  overflow:auto;
-  }
-
-#MastheadLogo h1 {
-	display:inline;
-	font-size:medium;
-}
-
-#MastheadLogo {
-	background-color: white;
-	background-image: none;
-/*	background-image: url(./img/header-bw.png);*/
-	background-position: 0px 8px;
-	background-repeat: no-repeat;
-	float: left;
-	height: 48px;
-	width: 270px;
-	border: none;
+a {
 	text-decoration: none;
 }
 
-#pagetitle {
-	float: right;
-	font-size: large;
-	text-align:right;
-	color:#000;
+a:link {
+	color: #2030A2;
 }
 
-#filename {
-	font-size: x-large;
-	text-align:right;
-	color:#000;
+a:visited, a:active, a:hover {
+	color: #202062;
 }
 
-#bar {
-	padding-left: 0.5em;
-	margin-bottom:1em;
+a:active, a:hover {
+	text-decoration: underline;
+}
+
+img, tt, form, pre {
+	border: 0;
+}
+
+del {
+	text-decoration: line-through;
+}
+
+caption {
+	caption-side:top;
+	margin: 1ex 0;
+	text-align: left;
+}
+
+thead {
+	color: white;
+	background-color: #616ca7;
+}
+
+tbody tr:nth-child(EVEN) { /* alternate color for odd rows */
+	background-color: #e5e5e5;
+}
+
+input, button {
+	border: 1px solid #bbbbff;
+	border-radius: 0.75ex;
+	-moz-border-radius: 0.75ex;
+	background-color: #a3b8cb;
+}
+
+label {
+	font-weight: bold;
+}
+
+.pre { /* the diff content */
+	white-space: pre-wrap;
+	font-family: "Liberation Mono", monospace;
+	margin: 0;
+}
+
+#page { }
+
+.error { /* error messages */
+	color: #a52a2a;
+}
+
+/* ############### start of header ############## */
+#whole_header {
 	display: none;
 }
 
-input.q {
-	color: #000;
-	border: 1px solid #000;
-	font-weight: normal;
-	padding:2px;
+#pagetitle { /* short verbal summary/description of the shown content */
 }
 
-input.submit {
-	background-color: #ccc;
-	color: #000;
-	border: 1px solid #000;
-	padding: 0px;
-	font-weight: bold;
-	min-width:4em;
-	text-align:center;
+/* required for help page, only */
+#sbar { /* full search navbar */
+	border-top: 1px solid ffc726;
+	background-color: #FFFFE5;
+	margin: 0;
+	clear: both;
 }
 
-input.submit:hover, input.submit:active {
-	background-color: #ddd;
-	color: #000;
-	border: 1px solid #000;
-	padding: 0px;
-	font-weight: bold;
-	min-width:4em;
-	text-align:center;
+/* *** full search navbar *** */
+#qtbl, #ptbl {
+	display: inline-block;
+	vertical-align: top;
+} 
+
+#qtbl tr {
+	background: none; /* remove alternating colors */
 }
 
-.thead {
-background-color:#ddd;
-border-bottom:1px solid #000;
-font-weight:bold;
+#ptbl > p {
+	text-align: center;
+	white-space: nowrap;
+	margin: 0.5ex 1ex;
 }
 
-.alt {
-background-color:#fff;
+#qtbl td:first-child {
+    width: 10ex;
+    text-align: right;
 }
 
-a:link			{color:#000;text-decoration:none;}
-a:visited		{color:#000;text-decoration:none;}
-a:active, a:hover	{color:#000;text-decoration:underline;}
-img {border:0;}
+#qtbl td:nth-child(2) {
+	width: 45ex;
+}
 
-tt {margin:0;}
+#qtbl input.q {
+	width: 100%;
+}
 
+#ptbl {
+	margin-left: 2em;
+}
 
-form, pre {padding:0px;margin:0px;}
-#src {font-size:75%;}
-#src .l  {color:#000;border-right: 1px solid #000;background-color:#fff;margin-right:.5em;padding-right:.5em;text-decoration:none;}
-#src .hl {color:#000;border-right: 1px solid #000;background-color:#fff;margin-right:.5em;padding-right:.5em;text-decoration:none;font-weight:bold;}
-#src .l-hide  {display: none}
-#src .hl-hide {display: none}
-#src tt{padding-left:1em; padding-right:1em;}
-.sl {color:#999;text-decoration:underline;}
-td.a{color:#000}
-.n  {color:#000;}
-.s  {color:#000;}
-.c  {color:#000; font-style:italic;}
+#ptbl button {
+	font-size: small;
+}	
 
-a.s {color:#000;}  /* matched lines */
-a.f {color:#000;}
-div.a{color:#000}
+#ptbl button:first-of-type {
+	margin-left: 1em;
+}
 
-a.d {color:#000; font-weight:bold; text-decoration:none;} /* definitions */
+#ptbl select {
+	width: 100%;
+}
 
-a.xm {color:#c66; font-weight:bold; text-decoration:none;} /* macro */
+#ptbl option {
+	padding: 0 1ex;
+}
 
-a.xa {color:#60c; font-weight:bold; text-decoration:none;} /* argument */
-a.xl {color:#963; font-weight:bold; text-decoration:none;} /* local */
-a.xv {color:#c30; font-weight:bold; text-decoration:none;} /* variable */
+#sbox > p:last-of-type {
+	white-space: nowrap;
+	/* 11ex = width(#qtbl td:first-child) + margin-left(body) */
+	margin: 1ex 0 0.5ex 11ex;
+}
 
-a.xp {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* package */
-a.xc {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* class */
-a.xi {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* interface */
-a.xn {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* namespace */
+#sbox > p:last-of-type > :nth-child(n+2) {
+	margin-left: 1ex;
+}
 
-a.xe {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* enum */
-a.xer {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* enumerator */
-a.xs {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* struct */
-a.xt {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* typedef */
-a.xts {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* typedefs */
-a.xu {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* union */
+input.q { /* text input fields */
+	background-color: #ffffff;
+	border: 1px solid #bbbbff;
+}
 
-a.xfld {color:#090; font-weight:bold; text-decoration:none;} /* field */
-a.xmb {color:#090; font-weight:bold; text-decoration:none;} /* member */
+input.submit { /* start search button */
+	font-weight: bold;
+}
+/* ############### end of header ############## */
 
-a.xf {color:#00f; font-weight:bold; text-decoration:none;} /* function */
-a.xmt {color:#00f; font-weight:bold; text-decoration:none;} /* method */
-a.xsr {color:#00f; font-weight:bold; text-decoration:none;} /* subroutine */
 
-#results .con{font-size:small;color:#000;}
-#more .l, #results .l { color:#888; }
-#results .m {background-color:#ffb;}
-#results i {color: #000; font-weight:bold;}
-#results tr.dir{background-color:#fff;border-top:3px solid #000;}
-#results td.q {visibility: hidden;}
-#results td.f{width:3em;padding-left:2em;padding-right:.5em;}
+/* ############### start of content ############## */
+#content {
+}
 
-#more { line-height:1.25em;}
-#more b { background-color:transparent;}
 
-#diffbar {border-bottom: 1px solid #000; padding-left:2em;font-size:medium; margin-top:1em;}
-#difftable {border:#000; border-collapse:collapse;font-size:small;}
-span.tab    { padding: 5px; padding-top:3px; padding-bottom: 0px; margin-left: 2px; margin-right: 2px; margin-bottom:0px ;background-color:#eee; border:1px solid #000;border-bottom:1px none;}
-span.tabsel { padding: 6px; padding-top:5px; padding-bottom: 1px; margin-left: 2px; margin-right: 2px; background-color:#fff; border:1px solid #000; border-bottom:2px solid #fff;}
-#difftable .d { background-color:#FFCC40;font-weight:bold;}
-#difftable .a { background-color:#8BD98B;font-weight:bold;}
-tr.k {border-bottom:1px dashed #000;}
-#difftable i  {color:#666;background-color:#ddd;margin-right:.2em;padding-left:1em;padding-right:.5em;text-decoration:none;}
-#difftable i.a  {background-color:#FFDD80;color:#666; font-weight:bold;}
-strike.d{background-color:#bbddbb; margin-right:.2em;padding-left:1em;padding-right:.5em;}
-#difftable td.d { background-color:#eeeeee;}
-.grey{background-color:#eee;}
+/* *** help page *** */
+#help dfn { /* definitions */
+	text-decoration: underline;
+}
 
-#badge img { display:none; }
+#help .fields, #help .example {
+	margin-left: 3em;
+}
 
-#Footer {
-	background-color: white;
-	color: #000;
-	font-size: 75%;
-	margin-top: 1em;
+#help dt {
+	font-weight: bold;
 }
-#Footer p {
-	margin: 0.6em 0 1em 0;
-	text-align:center;
+
+
+/* *** more page ***/
+#more {
+	line-height: 1.25em;
 }
-#Footer a {
+
+#more b { /* highlight matches */ 
+	background-color: #e5e5e5;
+}
+
+
+/* *** history page *** */
+table#revisions {
+	/* width: 100%; */ /* table with the history info for a file */
+	/* border-collapse: collapse; */ /* looks better with a small divider */
+}
+
+#revisions a.h	{ /* modified file list content */
+	font-size: small;
+	margin-left: 2em;
+}
+
+#revisions .filelist { /* "Show modified files" */
+	display: inline;
+}
+
+#revisions .filelist-hidden { /* "Hide modified files" */
+	display: none;
+}
+
+#revisions tbody td:first-child {
+	/* rev number - git/mercurial revs numbers look bad with prop. fonts */
+	font-family: "Liberation Mono", monospace;
+	text-align: right;
+}
+
+#revisions tbody td:nth-child(2), #revisions tbody td:nth-child(3) {
+	/* Compare and Date column */
+	text-align: center;
+}
+
+#revisions tbody td:nth-child(4) { /* author column */
+	padding: 0 1ex;
+	text-align: center;
+}
+
+.rssbadge { /* RSS/XML Feed on history page */
+	text-align: right;
+	margin: 1ex 0;
+}
+
+
+/* *** diff page *** */
+#diffbar { /* diff navbar: contains the tabs to select diff format */
+	display: none;
+}
+
+#difftable .d {
+	/* "Deleted" heading + highlight of deleted text in diff lines */
+	background-color: #ffcc40;
+}
+
+#difftable .a {
+	/* "Added" heading + highlight of added text in diff lines */
+	background-color: #8bd98b;
+}
+
+#difftable {
+	font-size: small;
+}
+
+#difftable table { /* left side == prev. rev; right side "current" rev */
+	table-layout: fixed;
+	border-collapse: collapse;
+}
+
+#difftable table th { /* usually both rev. have changes: eq. space for both */
+	padding-top: 1ex;
+	width: 50%;
+}
+
+#difftable th:last-child, #difftable td:last-child {
+	border-left: 1px solid black;
+}
+
+#difftable .plain td {
+	padding: 2px;
+}
+
+#difftable .image td {
+	padding: 5px;
+}
+
+#difftable .k { /* border between the context and real diff lines */
+	border-bottom: 1px dashed #ccc;
+}
+
+
+/* *** list aka xref stuff *** */
+
+/* directory listing */
+table#dirlist { /* the "Name" column */
+	font-family:	"Liberation Mono", monospace;
+	border-style: none;
+	border-collapse: collapse;
+}
+
+#dirlist .r, #dirlist .p {
+	padding: 0;
+	margin: 0 0 0 1em;
+}
+
+#dirlist td:nth-child(n+2) { /* all but the first column */
+	padding-right: 1em;
+}
+
+#dirlist tbody td:nth-child(4) {
+	text-align: right; /* CSS3 may allow " " (single space char) */
+}
+
+
+/* file display */
+#src {
+}
+
+#src pre {
+	margin: 0;
+	font-size: small;
+}
+
+#src .l-hide, #src .hl-hide, .blame-hidden { /* hidden line number/annotation block */
+	display: none
+}
+
+#src .l, #src .hl, .blame .r, .blame .a,
+#results .l, #more .l,
+#difftable i, del.d { /* line number/annotation block */
+	display: inline-block;
+	width: 6ex;
+	text-align: right;
+	padding: 0 1ex;
+	margin-right: .5ex;
+	background-color: #dddddd;
+	border-right: 1px solid #ddd;
+	color: #666;
+}
+
+#src .hl { /* highlighted line number */
 	color: #000;
 }
 
-.more {background-color:transparent;border: 1px #ccc solid;padding:.3em;margin:1px;}
-.sel {background-color:#ddd;border: 1px #000 solid;padding:.5em;margin:1px;}
+.blame .r { /* revision number "column" (annotation) */
+	text-align: right;
+}
 
-span.blame { }
-span.blame-hidden { display: none }
+.blame .a { /* author name "column" (annotation) */
+	text-align: center;
+}
 
-.sym_list_style {
-    position:absolute;
-    top:100px;
-    left:100px;
-    width:100px;
-    height:100px;
-    overflow:auto;
-    z-index: 10;
-    border:solid 1px #c0c0c0;
-    background-color:#ffffcc;
-    color:#000;
-    font-size:12px;
-    font-family:monospace;
-    padding:5px;
-    opacity:0.9;
-    filter:alpha(opacity=90)
+/* source code highlighting - see org/opengrok/analysis/$lang/*Xref.lex */
+#src .n		{ /* numbers/label */	color: #a52a2a; } 
+#src .s		{ /* strings */			color: green; } 
+#src .c		{ /* comment */			color: #666; }
+#src .b		{ /* heading/title/bold */	color: #000; font-weight: bold; }
+#src .k		{ /* block display */ 	color: #000; font-family: "Liberation Mono", monospace; }
+#src a.d	{ /* symbol definition */	color: #909; font-weight: bold; }
+
+a.xm	{ /* macro */			color: #c66; font-weight: bold; }
+a.xa	{ /* argument */		color: #60c; font-weight: bold; }
+a.xl	{ /* local */			color: #963; font-weight: bold; }
+a.xv	{ /* variable */		color: #c30; font-weight: bold; }
+a.xc	{ /* class */			color: #909; font-weight: bold; font-style: italic; }
+a.xp	{ /* package */			color: #909; font-weight: bold; font-style: italic; }
+a.xi	{ /* interface */		color: #909; font-weight: bold; font-style: italic; }
+a.xn	{ /* namespace */		color: #909; font-weight: bold; font-style: italic; }
+a.xe	{ /* enum */			color: #909; font-weight: bold; font-style: italic; }
+a.xer	{ /* enumerator */		color: #909; font-weight: bold; font-style: italic; }
+a.xs	{ /* struct */			color: #909; font-weight: bold; font-style: italic; }
+a.xt	{ /* typedef */			color: #909; font-weight: bold; font-style: italic; }
+a.xts	{ /* typedefs */		color: #909; font-weight: bold; font-style: italic; }
+a.xu	{ /* union */			color: #909; font-weight: bold; font-style: italic; }
+a.xfld	{ /* field */			color: #090; font-weight: bold; }
+a.xmb	{ /* member */			color: #090; font-weight: bold; }
+a.xf	{ /* function */		color: #00f; font-weight: bold; }
+a.xmt	{ /* method */			color: #00f; font-weight: bold; }
+a.xsr	{ /* subroutine */		color: #00f; font-weight: bold; }
+
+#man table, #man td  { /* #man == troff src */
+	background-color: #e5e5e5;
+	border: 1px;
+	padding: 2px;
 }
-.sym_list_style_hide {
-    display: none;
+
+#man p { /* a troff paragraph */
+	margin-top: 0.5em;
+	margin-bottom: 0;
 }
+
+#man div.b { /* man section headings etc. */
+	margin-top: 2em;
+}
+
+#man div.rs { /* a right-shifted block */
+	margin-left: 3em;
+	margin-bottom: 1em;
+}
+
+/* "Navigate" Popup */
+.sym_list_style_hide, .sym_list_style {
+	display: none;
+}
+
+/* search result page */
+#results {
+}
+
+#results p { /* pagetitle and slider */
+	padding: 0.1em;
+}
+
+#results .dir { /* directory row above matched files */
+	background-color: #cccccc;
+}
+
+#results .dir td { /* directory link */
+	padding-left: 1em;
+}
+
+#results td.q { /* 1st column: H A D */
+	white-space: nowrap;
+	font-size: xx-small;
+	padding: 3px;
+	width: 3em;
+}
+
+#results td.f { /* 2nd column: filename */
+	width: 3em;
+	padding: 3px 0.5em 3px 2em;
+}
+
+#results .con { /* 3rd column: line number + matched line contents */
+	font-size: small;
+}
+
+#results .con .all {
+    margin-left: 6ex; /* width(#src .l) + 1ex */ 
+}
+
+#results .s, #more .s { /* matched line contents */
+	color: #000;
+}
+
+#results i { /* match type description (method, interface etc.) */ 
+	color: green;
+	font-weight: bold;
+	padding-left: 1ex;
+}
+
+#results .sel { /* slider item for the shown search result page */
+	background-color: #e5e5e5;
+	border: 1px #998 solid;
+	padding: .5em;
+	margin: 1px;
+}
+
+#results .more { /* slider item for the n-th search result page */
+	border: 1px #bba solid;
+	padding: .3em;
+	margin: 1px;
+}
+
+/* ############### start of footer ############## */
+#footer {
+	color: #777777;
+	font-size: small;
+	margin: 1ex 0;
+	border-top: 1px solid #bba;
+}
+
+#footer p { /* footer text */
+	padding: 0;
+	margin: 0.2em;
+	text-align: center;
+}
+
+#fti { /* servedby.png */
+	display: inline-block;
+	width: 208px;
+	height: 45px;
+	vertical-align: middle;
+	background-image: url(./img/combined.png);
+	background-repeat: no-repeat;
+	background-position: -171px 0;
+}
+#rssi { /* rss.png */
+	display: inline-block;
+	width: 80px;
+	height: 15px;
+	vertical-align: middle;
+	background-image: url(./img/combined.png);
+	background-repeat: no-repeat;
+	background-position: -459px 0;
+}
+/* ############### end of footer ############## */
\ No newline at end of file
diff -r 09f0768a7ec1 web/default/style.css
--- a/web/default/style.css	Fri May 06 21:41:59 2011 +0200
+++ b/web/default/style.css	Sat May 07 06:44:23 2011 +0200
@@ -1,250 +1,633 @@
+/* common stuff */
 body {
-background-color: #ffffff;
-/*font-size: 100.01%; /* 12px [1] */
-color: black;
-font-family: arial, sans-serif;
-/*padding: 1em;
-margin: 0em;*/
+	background-color: #ffffff;
+	color: black;
+	font-family: "Liberation Sans", sans-serif;
+	margin: 1ex 1ex 0 1ex;
+}
+
+a {
+	text-decoration: none;
+}
+
+a:link {
+	color: #2030A2;
+}
+
+a:visited, a:active, a:hover {
+	color: #202062;
+}
+
+a:active, a:hover {
+	text-decoration: underline;
+}
+
+img, tt, form, pre {
+	border: 0;
+}
+
+del {
+	text-decoration: line-through;
+}
+
+caption {
+	caption-side:top;
+	margin: 1ex 0;
+	text-align: left;
+}
+
+thead {
+	background-color: #c5d5a9;
+}
+
+tbody tr:nth-child(EVEN) { /* alternate color for odd rows */
+	background-color: #e8e8f0;
+}
+
+input, button {
+	border: 1px #bbbbff #755;
+	border-radius: 0.75ex;
+	-moz-border-radius: 0.75ex;
+	background-color: #a3b8cb;
+}
+
+input:hover, input:active, button:hover, button:active {
+	color: #ffffff;
+}
+
+label {
+}
+
+.pre { /* the diff content */
+	white-space: pre-wrap;
+	font-family: "Liberation Mono", monospace;
+	margin: 0;
+}
+
+#page { }
+
+.error { /* error messages */
+	color: #a52a2a;
+}
+
+.active {
+	font-weight: bold;
+	/* color: #c20097; */
+}
+
+/* ############### start of header ############## */
+#whole_header { }
+
+/* *** banner/deco above navbar *** */
+#header { }
+
+#MastheadLogo {
+	width: 171px;
+	height: 40px;
+	float: left;
+	background-image: url(./img/combined.png);
+	background-repeat: no-repeat;
+	background-position: 0 0;
+	margin: 0 0 0.5ex 0;
+}
+
+#pagetitle { /* short verbal summary/description of the shown content */
+}
+
+#filename { /* "Cross Reference: ..." */
+	font-size: x-large;
+	font-weight: bold;
+	margin-right: 1em;
+	float: right;
 }
 
 #Masthead {
-	background: none;
-	border: none;
-	display:block;
-	border-bottom: 4px solid #FFC726;
-/*	padding-bottom:3px;
-	margin-bottom: 3px;*/
-}
-#header {
-min-height:44px;
-height:44px;
-display: block;
-/*width: 98%;*/
+	clear: left;
 }
 
+#Masthead tt { /* slashes in the xref: line */
+}
+
+#sbar, #bar { /* full search and default navbar */
+	border-top: 4px solid #ffc726;
+	margin: 0;
+	padding-top: 1ex;
+	clear: both;
+}
+
+/* *** full search navbar *** */
+#qtbl, #ptbl {
+	display: inline-block;
+	vertical-align: top;
+} 
+
+#qtbl tr {
+	background: none; /* remove alternating colors */
+}
+
+#ptbl > p {
+	text-align: center;
+	white-space: nowrap;
+	margin: 0.5ex 1ex;
+}
+
+#qtbl td:first-child {
+    width: 10ex;
+    text-align: right;
+}
+
+#qtbl td:nth-child(2) {
+	width: 45ex;
+}
+
+#qtbl input.q {
+	width: 100%;
+}
+
+#ptbl {
+	margin-left: 2em;
+}
+
+#ptbl button {
+	font-size: small;
+}	
+
+#ptbl button:first-of-type {
+	margin-left: 1em;
+}
+
+#ptbl select {
+	width: 100%;
+}
+
+#ptbl option {
+	padding: 0 1ex;
+}
+
+#sbox > p:last-of-type {
+	white-space: nowrap;
+	/* 11ex = width(#qtbl td:first-child) + margin-left(body) */
+	margin: 1ex 0 0.5ex 11ex;
+}
+
+#sbox > p:last-of-type > :nth-child(n+2) {
+	margin-left: 1ex;
+}
+
+/* *** default navbar *** */
+#bar {
+	padding: 0.2em 0.5em;
+}
+
+#bar ul { /* every list item is displayed as a "menu" item */
+	display: inline-block;
+	list-style: none outside none;
+	margin: 0;
+	padding: 0;
+	/* white-space: nowrap; */ /* hmm, sometimes good, sometimes not ;-) */
+}
+
+#bar li { /* menu items */
+	display: inline-block;
+}
+
+#history::before, #bar .annotate::before, #line::before, #defbox::before, #download::before {
+	content: "|";
+	padding: 0.5ex;
+	color: black;
+	font-size: large;
+	font-weight: normal;
+}
+
+#search {
+	margin-left: 0.5ex;
+}
+
+#annotate.c, #history.c { /* indicate annotation/history available */
+	color: #666;
+}
+
+input.q { /* text input fields */
+	background-color: #ffffff;
+	border: 1px solid #bbbbff;
+}
+
+input.submit { /* start search button */
+	font-weight: bold;
+}
+
+#sortfield {
+	display: inline-block;
+	margin-left: 6ex;
+}
+
+#sortfield label {
+	margin-right: 1ex;
+}
+
+#sortfield label:after {
+	content: ": ";
+}
+
+#sortby li:nth-child(n+2) :first-child::before {
+    content: "|";
+    padding: 0 1ex;
+	font-size: large;
+	font-weight: normal;
+}
+
+/* ############### end of header ############## */
+
+
+/* ############### start of content ############## */
 #content {
-  position:absolute;    
-  bottom:0px;
-  left:0px;
-  right:0px;
-  padding-left: 1em;
-  padding-top:7px;
-  overflow:auto;
-  top:6em;
-  }
+	position: fixed;
+	left: 0;
+	right: 0;
+	overflow: auto;
+	padding: 1ex; /* should be the same as body's margin */
+}
 
-#whole_header {  
-  height:6em;
-  padding-left: 1em;
-  padding-right: 1em;
-  position:absolute;
-  top:0;
-  right:0px;
-  left:0px;
-  /*width:98%;*/
-  overflow:auto;  
-  }
 
-#MastheadLogo h1 {
+/* *** help page *** */
+#help dfn { /* definitions */
+	text-decoration: underline;
+}
+
+#help .fields, #help .example {
+	margin-left: 3em;
+}
+
+#help dt {
+	font-weight: bold;
+}
+
+
+/* *** more page ***/
+#more {
+	line-height: 1.25em;
+}
+
+#more b { /* highlight matches */ 
+	background-color: #ffff99;
+}
+
+
+/* *** history page *** */
+table#revisions {
+	/* width: 100%; */ /* table with the history info for a file */
+	/* border-collapse: collapse; */ /* looks better with a small divider */
+}
+
+#revisions a.h	{ /* modified file list content */
+	font-size: small;
+	margin-left: 2em;
+}
+
+#revisions .filelist { /* "Show modified files" */
+	display: inline;
+}
+
+#revisions .filelist-hidden { /* "Hide modified files" */
 	display: none;
 }
 
-#MastheadLogo {
-	background-color: white;
-	background-image: url(./img/Logo.png);
-	background-position: 0px 2px;
-	background-repeat: no-repeat;
-	float: left;
-	height: 43px;
-	width: 172px;
-	border: none;
-	text-decoration: none;
+#revisions tbody td:first-child {
+	/* rev number - git/mercurial revs numbers look bad with prop. fonts */
+	font-family: "Liberation Mono", monospace;
+	text-align: right;
 }
 
-#pagetitle {
-	float: right;
-	font-size: large;
-	color:#5382a1;
-	text-align:right;
+#revisions tbody td:nth-child(2), #revisions tbody td:nth-child(3) {
+	/* Compare and Date column */
+	text-align: center;
 }
 
-#filename {
-	font-size: x-large;
-	color:#000;
-	text-align:right;
+#revisions tbody td:nth-child(4) { /* author column */
+	padding: 0 1ex;
+	text-align: center;
 }
 
-#bar {
-	padding-left: 0.5em;
-	margin-bottom:0.2em;
+.rssbadge { /* RSS/XML Feed on history page */
+	text-align: right;
+	margin: 1ex 0;
 }
 
-input.q {
-	background-color: #ffffff;
-	color: #000;
-	border-left: 1px solid #bbbbff;
-	border-top: 1px solid #bbbbff;
-	border-right: 1px solid #93a8bb;
-	border-bottom: 1px solid #93a8bb;
-	font-weight: normal;
-	padding:2px;
+
+/* *** diff page *** */
+#diffbar { /* diff navbar: contains the tabs to select diff format */
+	margin-top: 1.5ex;
+	border-bottom: 1px solid #999;
+	white-space: nowrap;
 }
 
-input.submit {
-	background-color: #A3B8CB;
-	color: #000;
-	padding: 0px;
-	border-left: 1px solid #bbbbff;
-	border-top: 1px solid #bbbbff;
-	border-right: 1px solid #93a8bb;
-	border-bottom: 1px solid #93a8bb;
-	font-weight: bold;
-	min-width:4em;
-	text-align:center;
+#diffbar .d, #difftable .d {
+	/* "Deleted" heading + highlight of deleted text in diff lines */
+	background-color: #ffcc40;
 }
 
-input.submit:hover, input.submit:active {
-	background-color: #A3B8CB;
-	color: #fff;
-	padding: 0px;
-	border-left: 1px solid #bbbbff;
-	border-top: 1px solid #bbbbff;
-	border-right: 1px solid #93a8bb;
-	border-bottom: 1px solid #93a8bb;
-	font-weight: bold;
-	min-width:4em;
-	text-align:center;
+#diffbar .a, #difftable .a {
+	/* "Added" heading + highlight of added text in diff lines */
+	background-color: #8bd98b;
 }
 
-.thead {
-	background-color:#C5D5A9;
-	font-weight:bold;
+#diffbar .legend, #diffbar .tabs, #diffbar .ctype {
+	display: inline-block;
 }
 
-.alt {
-	background-color:#e8e8f0;
+#diffbar .legend {
+	/* bottom must be the same as .tabs span(padding-bottom) */
+	margin: 0 3ex 0.75ex 1ex;
 }
 
-a:link			{color:#2030A2;text-decoration:none;}
-a:visited		{color:#202062;text-decoration:none;}
-a:active, a:hover	{color:#202062;text-decoration:underline;}
-img {border:0;}
-tt {margin:0;}
-form, pre {padding:0px;margin:0px;}
-
-#src .l  {color:#888;background-color:#ddd;padding-right:.1em;margin-right:.2em;text-align:right;}
-#src .hl {color:#000;background-color:#ddd;padding-right:.1em;margin-right:.2em;text-align:right;}
-#src .l-hide  {display: none}
-#src .hl-hide {display: none}
-#src tt{padding-left:1em; padding-right:1em;}
-
-.sl {color:#999;text-decoration:underline;}
-td.a{color:#000}
-.n  {color:brown;} /* numbers */
-.s  {color:green;} /* strings */
-.c  {color:#666;} /* comments */
-.b  {color:#000; font-weight:bold;} /* comments */
-.k  {color:#000; font-family:monospace;} /* comments */
-a.s {color:#000;}  /* matched lines */
-a.f {color:#909;} /* file locals */
-div.a {color:#000}
-a.h {font-size:small; margin-left:2em;}
-
-a.d {color:#936; font-weight:bold; text-decoration:none;} /* definitions */
-
-a.xm {color:#c66; font-weight:bold; text-decoration:none;} /* macro */
-
-a.xa {color:#60c; font-weight:bold; text-decoration:none;} /* argument */
-a.xl {color:#963; font-weight:bold; text-decoration:none;} /* local */
-a.xv {color:#c30; font-weight:bold; text-decoration:none;} /* variable */
-
-a.xp {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* package */
-a.xc {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* class */
-a.xi {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* interface */
-a.xn {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* namespace */
-
-a.xe {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* enum */
-a.xer {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* enumerator */
-a.xs {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* struct */
-a.xt {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* typedef */
-a.xts {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* typedefs */
-a.xu {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* union */
-
-a.xfld {color:#090; font-weight:bold; text-decoration:none;} /* field */
-a.xmb {color:#090; font-weight:bold; text-decoration:none;} /* member */
-
-a.xf {color:#00f; font-weight:bold; text-decoration:none;} /* function */
-a.xmt {color:#00f; font-weight:bold; text-decoration:none;} /* method */
-a.xsr {color:#00f; font-weight:bold; text-decoration:none;} /* subroutine */
-
-
-#results {margin-top:.5em;}
-#results .con{font-size:small;color:#000;}
-#more .l, #results .l { color:#666; }
-#results .m {background-color:#ffb;}
-#results i {color: green; font-weight:bold;}
-#results tr.dir{background-color:#C5D5A9;}
-#results td.q {white-space: nowrap;font-size: xx-small;width:3em;}
-#results td.f{width:3em;padding-left:2em;padding-right:.5em;}
-
-#more { line-height:1.25em;}
-#more b { background-color:#ffff99;}
-
-#diffbar {border-bottom: 2px solid #c5d5a9; padding-left:2em;font-size:medium; }
-#difftable {border:#C5D5A9; border-collapse:collapse;font-size:small;}
-span.tab { padding: 5px; padding-top:3px; padding-bottom: 0px;  margin-left: 2px; margin-right: 2px; margin-bottom:0px ;background-color:#eee; border:2px solid #c5d5a9;border-bottom:2px none #eee;}
-span.tabsel {  padding: 6px ; padding-top:5px; padding-bottom: 1px; margin-left: 2px; margin-right: 2px; background-color:#fff; border:2px solid #c5d5a9; border-bottom:2px solid #fff;}
-#difftable .d { background-color:#FFCC40;}
-#difftable .a { background-color:#8BD98B;}
-tr.k{border-bottom:1px dashed #ccc;}
-#difftable i  {color:#666;background-color:#ddd;margin-right:.2em;padding-left:1em;padding-right:.5em;text-decoration:none; font-weight:normal;}
-#difftable i.a  {background-color:#FFDD80;color:#666;}
-strike.d{background-color:#bbddbb; margin-right:.2em;padding-left:1em;padding-right:.5em;}
-#difftable td.d { background-color:#eeeeee;}
-.grey{background-color:#eee;}
-
-#badge { padding:3px; }
-
-.rssbadge { padding:3px; text-align:right; border:0px;}
-
-#Footer {
-	background-color: white;
-	color: #777;
-	font-size: 95%;
-	margin-top: 1em;
-}
-#Footer p {
-	margin: 0.6em 0 1em 0;
-	text-align:center;
-}
-#Footer a {
-	color: #555;
+#diffbar .legend span, #diffbar .ctype span {
+	padding: 0.2ex 1ex; /* bottom must be less than margin-bottom(.legend) */
 }
 
-.more {background-color:#fff;border: 1px #ccc solid;padding:.3em;margin:1px;}
-.sel {background-color:#A3B8CB;border: 1px #336 solid;padding:.5em;margin:1px;}
-.error {color: brown;}
+#diffbar .tabs span {
+	padding: 0.75ex 1ex;
+	margin-left: 1ex;
+	border: 1px solid #999; /* should be the same as for #diffbar above */
+	border-radius: 0.75ex 0.75ex 0 00;
+	-moz-border-radius: 0.75ex 0.75ex 0 00;
+	background-color: #fafae0; /* navbar like */
+}
 
-span.blame { }
-span.blame-hidden { display: none }
+#diffbar .tabs span.active, #diffbar .ctype span.active {
+	background-color: #c5d5a9; /* same as for table thead */
+}
 
+#diffbar .tabs span.active {
+	border-bottom-style: dashed;
+}
+
+#diffbar .ctype {
+	margin-left: 3ex; /* see margin-left .legend */
+}
+
+#diffbar .ctype span {
+	border: 1px solid #755; /* same as for input */
+	border-radius: 0.75ex;
+	-moz-border-radius: 0.75ex;
+	background-color: #fafae0; /* navbar like */
+	margin-left: 1ex;
+}
+
+#difftable {
+	font-size: small;
+}
+
+#difftable table { /* left side == prev. rev; right side "current" rev */
+	table-layout: fixed;
+	border-collapse: collapse;
+}
+
+#difftable table th { /* usually both rev. have changes: eq. space for both */
+	padding-top: 1ex;
+	width: 50%;
+}
+
+#difftable th:last-child, #difftable td:last-child {
+	border-left: 1px solid black;
+}
+
+#difftable .plain td {
+	padding: 2px;
+}
+
+#difftable .image td {
+	padding: 5px;
+}
+
+#difftable .k { /* border between the context and real diff lines */
+	border-bottom: 1px dashed #ccc;
+}
+
+
+/* *** list aka xref stuff *** */
+
+/* directory listing */
+table#dirlist { /* the "Name" column */
+	font-family:	"Liberation Mono", monospace;
+	border-style: none;
+	border-collapse: collapse;
+}
+
+#dirlist .r, #dirlist .p {
+	padding: 0;
+	margin: 0 0 0 1em;
+}
+
+#dirlist td:nth-child(n+2) { /* all but the first column */
+	padding-right: 1em;
+}
+
+#dirlist tbody td:nth-child(4) {
+	text-align: right; /* CSS3 may allow " " (single space char) */
+}
+
+
+/* file display */
+#src {
+}
+
+#src pre {
+	margin: 0;
+}
+
+#src .l-hide, #src .hl-hide, .blame-hidden { /* hidden line number/annotation block */
+	display: none
+}
+
+#src .l, #src .hl, .blame .r, .blame .a,
+#results .l, #more .l,
+#difftable i, del.d { /* line number/annotation block */
+	display: inline-block;
+	width: 5ex;
+	text-align: right;
+	padding-right: 1ex;
+	margin-right: 0.2em;
+	background-color: #dddddd;
+	color: #666;
+}
+
+#src .hl { /* highlighted line number */
+	color: #000;
+}
+
+.blame .r { /* revision number "column" (annotation) */
+	text-align: right;
+}
+
+.blame .a { /* author name "column" (annotation) */
+	text-align: center;
+}
+
+/* source code highlighting - see org/opengrok/analysis/$lang/*Xref.lex */
+#src .n		{ /* numbers/label */	color: #a52a2a; } 
+#src .s		{ /* strings */			color: green; } 
+#src .c		{ /* comment */			color: #666; }
+#src .b		{ /* heading/title/bold */	color: #000; font-weight: bold; }
+#src .k		{ /* block display */ 	color: #000; font-family: "Liberation Mono", monospace; }
+#src a.d	{ /* symbol definition */	color: #909; font-weight: bold; }
+
+a.xm	{ /* macro */			color: #c66; font-weight: bold; }
+a.xa	{ /* argument */		color: #60c; font-weight: bold; }
+a.xl	{ /* local */			color: #963; font-weight: bold; }
+a.xv	{ /* variable */		color: #c30; font-weight: bold; }
+a.xc	{ /* class */			color: #909; font-weight: bold; font-style: italic; }
+a.xp	{ /* package */			color: #909; font-weight: bold; font-style: italic; }
+a.xi	{ /* interface */		color: #909; font-weight: bold; font-style: italic; }
+a.xn	{ /* namespace */		color: #909; font-weight: bold; font-style: italic; }
+a.xe	{ /* enum */			color: #909; font-weight: bold; font-style: italic; }
+a.xer	{ /* enumerator */		color: #909; font-weight: bold; font-style: italic; }
+a.xs	{ /* struct */			color: #909; font-weight: bold; font-style: italic; }
+a.xt	{ /* typedef */			color: #909; font-weight: bold; font-style: italic; }
+a.xts	{ /* typedefs */		color: #909; font-weight: bold; font-style: italic; }
+a.xu	{ /* union */			color: #909; font-weight: bold; font-style: italic; }
+a.xfld	{ /* field */			color: #090; font-weight: bold; }
+a.xmb	{ /* member */			color: #090; font-weight: bold; }
+a.xf	{ /* function */		color: #00f; font-weight: bold; }
+a.xmt	{ /* method */			color: #00f; font-weight: bold; }
+a.xsr	{ /* subroutine */		color: #00f; font-weight: bold; }
+
+#man table, #man td  { /* #man == troff src */
+	background-color: #ddddcc;
+	border: 1px;
+	padding: 2px;
+}
+
+#man p { /* a troff paragraph */
+	margin-top: 0.5em;
+	margin-bottom: 0;
+}
+
+#man div.b { /* man section headings etc. */
+	margin-top: 2em;
+}
+
+#man div.rs { /* a right-shifted block */
+	margin-left: 3em;
+	margin-bottom: 1em;
+}
+
+/* "Navigate" Popup */
 .sym_list_style {
-    position:absolute;
-    top:100px;
-    left:100px;
-    width:100px;
-    height:100px;
-    overflow:auto;
-    z-index: 10;
-    border:solid 1px #c0c0c0;
-    background-color:#ffffcc;
-    color:#000;
-    font-size:12px;
-    font-family:monospace;
-    padding:5px;
-    opacity:0.9;
-    filter:alpha(opacity=90)
+	position: absolute;
+	top: 100px;
+	left: 100px;
+	width: 100px;
+	height: 100px;
+	overflow: auto;
+	z-index: 10;
+	border: solid 1px #c0c0c0;
+	background-color: rgba(255,255,204,0.75);
+	color: #000;
+	font-size: 12px;
+	font-family: "Liberation Mono", monospace;
+	padding: 5px;
 }
+
 .sym_list_style_hide {
-    display: none;
+	display: none;
 }
+
+/* search result page */
+#results {
+}
+
+#results p { /* pagetitle and slider */
+	padding: 0.1em;
+}
+
+#results table {
+	border-collapse: collapse;
+	width: 100%;
+} 
+
+#results .dir { /* directory row above matched files */
+	background-color: #c5d5a9;
+}
+
+#results .dir td { /* directory link */
+	padding-left: 1em;
+}
+
+#results .l {
+}
+
+#results td.q { /* 1st column: H A D */
+	white-space: nowrap;
+	font-size: xx-small;
+	padding: 3px;
+	width: 3em;
+}
+
+#results td.f { /* 2nd column: filename */
+	width: 3em;
+	padding: 3px 0.5em 3px 2em;
+}
+
+#results .con { /* 3rd column: line number + matched line contents */
+	font-size: small;
+}
+
+#results .con .all {
+	margin-left: 6ex; /* width(#src .l) + 1ex */ 
+}
+
+#results .s, #more .s { /* matched line contents */
+	color: #000;
+}
+
+#results i { /* match type description (method, interface etc.) */ 
+	color: green;
+	font-weight: bold;
+	padding-left: 1ex;
+}
+
+#results .sel { /* slider item for the shown search result page */
+	background-color: #a3b8cb;
+	border: 1px #333366 solid;
+	padding: .5em;
+	margin: 1px;
+}
+
+#results .more { /* slider item for the n-th search result page */
+	border: 1px #bba solid;
+	padding: .3em;
+	margin: 1px;
+}
+
+/* ############### start of footer ############## */
+#footer {
+	color: #777777;
+	font-size: small;
+	margin: 1ex 0;
+}
+
+#footer p { /* footer text */
+	padding: 0;
+	margin: 0.2em;
+	text-align: center;
+}
+
+#fti { /* servedby.png */
+	display: inline-block;
+	width: 208px;
+	height: 45px;
+	vertical-align: middle;
+	background-image: url(./img/combined.png);
+	background-repeat: no-repeat;
+	background-position: -171px 0;
+}
+#rssi { /* rss.png */
+	display: inline-block;
+	width: 80px;
+	height: 15px;
+	vertical-align: middle;
+	background-image: url(./img/combined.png);
+	background-repeat: no-repeat;
+	background-position: -459px 0;
+}
+/* ############### end of footer ############## */
\ No newline at end of file
diff -r 09f0768a7ec1 web/diff.jsp
--- a/web/diff.jsp	Fri May 06 21:41:59 2011 +0200
+++ b/web/diff.jsp	Sat May 07 06:44:23 2011 +0200
@@ -1,4 +1,6 @@
 <%-- 
+$Id$
+
 CDDL HEADER START
 
 The contents of this file are subject to the terms of the
@@ -19,437 +21,471 @@
 Copyright 2009 Sun Microsystems, Inc.  All rights reserved.
 Use is subject to license terms.
 
-ident	"@(#)diff.jsp 1.2     05/12/01 SMI"
+Portions Copyright 2011 Jens Elkner.
+--%><%@page import="
+java.io.BufferedReader,
+java.io.FileNotFoundException,
+java.io.InputStream,
+java.io.InputStreamReader,
+java.io.UnsupportedEncodingException,
+java.net.URLDecoder,
+java.util.ArrayList,
 
---%><%@ page import = "javax.servlet.*,
-java.lang.*,
-javax.servlet.http.*,
-java.util.*,
-java.io.*,
-java.text.*,
-java.net.URLDecoder,
-org.opensolaris.opengrok.analysis.*,
+org.apache.commons.jrcs.diff.Chunk,
+org.apache.commons.jrcs.diff.Delta,
+org.apache.commons.jrcs.diff.Diff,
+org.apache.commons.jrcs.diff.Revision,
+org.opensolaris.opengrok.analysis.AnalyzerGuru,
 org.opensolaris.opengrok.analysis.FileAnalyzer.Genre,
-org.opensolaris.opengrok.web.*,
-org.opensolaris.opengrok.history.*,
-org.apache.commons.jrcs.diff.*"
-%><%@include file="mast.jsp"%><%!
+org.opensolaris.opengrok.web.DiffData,
+org.opensolaris.opengrok.web.DiffType"
+%><%!
+private String getAnnotateRevision(DiffData data) {
+	if (data.type == DiffType.OLD || data.type == DiffType.NEW) {
+		return "<script type=\"text/javascript\">/* <![CDATA[ */ "
+			+ "document.rev = 'r=" + data.rev[data.type == DiffType.NEW ? 1 : 0] 
+			+ "'; /* ]]> */</script>";
+	}
+	return "";
+}
+%><%@
 
-String readableLine(int n) {
-    if (n < 10) {
-        return " " + n;
-    } else {
-        return String.valueOf(n);
-    }
-}
+include file="mast.jsp"
 
 %><%
+/* ---------------------- diff.jsp start --------------------- */
+{
+	cfg = PageConfig.get(request);
+	DiffData data = cfg.getDiffData();
+	
+	if (data.errorMsg != null)  {
 
-if (valid) {
-    final String rp1 = request.getParameter("r1");
-    final String rp2 = request.getParameter("r2");
-    String srcRoot = environment.getSourceRootFile().getAbsolutePath();
+%>
+<div class="src">
+	<h3 class="error">Error:</h3>
+	<p><%= data.errorMsg %></p>
+</div><%
 
-    String r1 = null;
-    String r2 = null;
-    File rpath1 = null;
-    File rpath2 = null;
-    String[] tmp=null;
-    try {
-        if (rp1!=null) tmp = rp1.split("@");
-        if (tmp != null && tmp.length == 2) {
-	    rpath1 = new File(srcRoot+URLDecoder.decode(tmp[0], "UTF-8"));
-	    r1 = URLDecoder.decode(tmp[1], "UTF-8");
+	} else if (data.genre == Genre.IMAGE) {
+
+		String link = request.getContextPath() + Prefix.RAW_P 
+			+ Util.htmlize(cfg.getPath());
+%>
+<div id="difftable">
+	<table class="image">
+		<thead>
+		<tr><th><%= data.filename %> (revision <%= data.rev[0] %>)</th>
+			<th><%= data.filename %> (revision <%= data.rev[1] %>)</th>
+		</tr>
+		</thead>
+		<tbody>
+		<tr><td><img src="<%= link %>?r=<%= data.rev[0] %>"/></td>
+			<td><img src="<%= link %>?r=<%= data.rev[1] %>"/></td>
+		</tr>
+		</tbody>
+	</table>
+</div><%
+
+	} else if (data.genre != Genre.PLAIN && data.genre != Genre.HTML) {
+
+		String link = request.getContextPath() + Prefix.RAW_P 
+			+ Util.htmlize(cfg.getPath());
+%>
+<div id="src">Diffs for binary files cannot be displayed! Files are <a 
+	href="<%= link %>?r=<%= data.rev[0] %>"><%= 
+		data.filename %>(revision <%= data.rev[0] %>)</a> and <a 
+	href="<%= link %>?r=<%= data.rev[1] %>"><%=
+		data.filename %>(revision <%= data.rev[1] %>)</a>.
+</div><%
+
+	} else if (data.revision.size() == 0) {
+		%>
+		<%= getAnnotateRevision(data) %>
+		<b>No differences found!</b><%
+	
+	} else {
+		//-------- Do THE DIFFS ------------
+		int ln1 = 0;
+		int ln2 = 0;
+		String rp1 = data.param[0];
+		String rp2 = data.param[1];
+		String reqURI = request.getRequestURI();
+		String[] file1 = data.file[0];
+		String[] file2 = data.file[1];
+		
+		DiffType type = data.type;
+		boolean full = data.full;
+%>
+<%= getAnnotateRevision(data) %>
+<div id="diffbar">
+	<div class="legend">
+		<span class="d">Deleted</span>
+		<span class="a">Added</span>
+	</div>
+	<div class="tabs"><%
+		for (DiffType t : DiffType.values()) {
+			if (type == t) {
+		%> <span class="active"><%= t.toString() %><%
+				if (t == DiffType.OLD) {
+			%>  ( <%= data.rev[0] %> )<%
+				} else if (t == DiffType.NEW) {
+			%>  ( <%= data.rev[1] %> )<%
+				}
+			%></span><%
+			} else {
+		%> <span><a href="<%= reqURI %>?r1=<%= rp1 %>&amp;r2=<%= rp2
+			%>&amp;format=<%= t.getAbbrev() %>&amp;full=<%= full ? '1' : '0' 
+			%>"><%= t.toString() %><%
+				if (t == DiffType.OLD) {
+			%>  ( <%= data.rev[0] %> )<%
+				} else if (t == DiffType.NEW) {
+			%>  ( <%= data.rev[1] %> )<%
+				}
+			%></a></span><%
+			}
+		}
+	%></div>
+	<div class="ctype"><%
+		if (!full) {
+		%>
+		<span><a href="<%= reqURI %>?r1=<%= rp1 %>&amp;r2=<%= rp2 
+			%>&amp;format=<%= type.getAbbrev() %>&amp;full=1">full</a></span>
+		<span class="active">compact</span><%
+		} else {
+		%>
+		<span class="active">full</span>
+		<span> <a href="<%= reqURI %>?r1=<%= rp1 %>&amp;r2=<%= rp2 
+			%>&amp;format=<%= type.getAbbrev() %>&amp;full=0">compact</a></span><%
+		}
+	%></div>
+</div>
+
+<div id="difftable">
+	<div class="pre"><%
+		if (type == DiffType.SIDEBYSIDE || type == DiffType.UNIFIED) {
+		%><table class="plain"><%
+			if (type == DiffType.SIDEBYSIDE) {
+			%>
+			<thead><tr>
+				<th><%= data.filename %> (<%= data.rev[0] %>)</th>
+				<th><%= data.filename %> (<%= data.rev[1] %>)</th>
+			</tr></thead><%
+			}
+		 	%>
+		 	<tbody><%
+		}
+
+		for (int i=0; i < data.revision.size(); i++) {
+			Delta d = data.revision.getDelta(i);
+			if (type == DiffType.TEXT) {
+		%><%= Util.htmlize(d.toString()) %><%
+			} else {
+				Chunk c1 = d.getOriginal();
+				Chunk c2 = d.getRevised();
+				int cn1 = c1.first();
+				int cl1 = c1.last();
+				int cn2 = c2.first();
+				int cl2 = c2.last();
+				
+				int i1 = cn1, i2 = cn2;
+				StringBuilder bl1 = new StringBuilder(80);
+				StringBuilder bl2 = new StringBuilder(80);
+				for (; i1 <= cl1 && i2 <= cl2; i1++, i2++) {
+					Util.htmlize(file1[i1], bl1);
+					Util.htmlize(file2[i2], bl2);
+					String[] ss = Util.diffline(bl1, bl2);
+					file1[i1] = ss[0];
+					file2[i2] = ss[1];
+					bl1.setLength(0);
+					bl2.setLength(0);
+				}
+				// deleted
+				for (; i1 <= cl1; i1++) {
+					bl1.setLength(0);
+					bl1.append("<span class=\"d\">");
+					Util.htmlize(file1[i1], bl1);
+					file1[i1] = bl1.append("</span>").toString();
+				}
+				// added
+				for (; i2 <= cl2; i2++) {
+					bl2.setLength(0);
+					bl2.append("<span class=\"a\">");
+					Util.htmlize(file2[i2], bl2);
+					file2[i2] = bl2.append("</span>").toString();
+				}
+				
+				if (type == DiffType.UNIFIED) {
+// UDIFF
+					if (cn1 > ln1 || cn2 > ln2) {
+			%>
+			<tr class="k"><td><%
+						if (full || (cn2 - ln2 < 20)) {
+							for (int j = ln2; j < cn2; j++) {
+				%><i><%= ++ln2 %></i><%= 
+					Util.htmlize(file2[j]) %><br/><%
+							}
+						} else {
+							for (int j = ln2; j < ln2 + 8; j++) {
+				%><i><%= j+1 %></i><%=
+					Util.htmlize(file2[j]) %><br/><%
+							}
+				%><br/>--- <b><%= cn2 - ln2 - 16 
+					%> unchanged lines hidden</b> (<a href="<%= reqURI 
+					%>?r1=<%= rp1 %>&amp;r2=<%= rp2 
+					%>&amp;format=<%= type.getAbbrev() 
+					%>&amp;full=1#<%= ln2 %>">view full</a>) --- <br/><br/><%
+							ln2 = cn2 - 8;
+							for (int j = ln2; j < cn2; j++) {
+				%><i><%= ++ln2 %></i><%= Util.htmlize(file2[j]) %><br/><%
+							}
+						}
+				%></td>
+			</tr><%
+						ln1 = cn1;
+					}
+					if (cn1 <= cl1) {
+			%>
+			<tr><td><%
+						for (int j = cn1; j  <= cl1 ; j++) {
+				%><del class="d"><%= ++ln1 %></del><%= file1[j]
+				%><br/><%
+						}
+				%></td>
+			</tr><%
+					}
+					if (cn2 <= cl2) {
+			%>
+			<tr class="k"><td><%
+						for (int j = cn2; j  < cl2; j++) {
+				%><i class="a"><%= ++ln2 %></i><%= file2[j]
+				%><br/><%
+						}
+				%><i class="a"><%= ++ln2 %></i><%= file2[cl2] %><%
+						if(full) {
+				%><a name="<%= ln2 %>" /><%
+						}
+				%></td>
+			</tr><%
+					}
+				} else if (type == DiffType.SIDEBYSIDE) {
+// SDIFF
+					if (cn1 > ln1 || cn2 > ln2) {
+			%>
+			<tr class="k"><td><%
+						if (full || cn2 - ln2 < 20) {
+							for (int j = ln1; j < cn1; j++) {
+				%><i><%= ++ln1 %></i><%= 
+					Util.htmlize(file1[j]) %><br/><%
+							}
+				%></td><td><%
+							for (int j = ln2; j  < cn2 ; j++) {
+				%><i><%= ++ln2 %></i><%=
+					Util.htmlize(file2[j]) %><br/><%
+							}
+						} else {
+							for (int j = ln1; j < ln1 + 8; j++) {
+				%><i><%= j+1 %></i><%=
+					Util.htmlize(file1[j]) %><br/><%
+							}
+				%><br/>--- <b><%= cn1 - ln1 - 16 
+					%> unchanged lines hidden</b> (<a href="<%= reqURI 
+					%>?r1=<%= rp1 %>&amp;r2=<%= rp2 
+					%>&amp;format=<%= type.getAbbrev()
+					%>&amp;full=1#<%= ln2 %>">view full</a>) --- <br/><br/><%
+							ln1 = cn1 - 8;
+							for (int j = ln1; j < cn1; j++) {
+				%><i><%= ++ln1 %></i><%=
+					Util.htmlize(file1[j]) %><br/><%
+							}
+				%></td><td><%
+							for (int j = ln2; j < ln2 + 8; j++) {
+				%><i><%= j+1 %></i><%=
+					Util.htmlize(file2[j]) %><br/><%
+							}
+				%><br/>--- <b><%= cn2 - ln2 - 16 
+					%> unchanged lines hidden</b> (<a href="<%= reqURI
+					%>?r1=<%= rp1 %>&amp;r2=<%= rp2 
+					%>&amp;format=<%= type.getAbbrev()
+					%>&amp;full=1#<%= ln2 %>">view full</a>) --- <br/><br/><%
+							ln2 = cn2 - 8;
+							for (int j = ln2; j < cn2; j++) {
+				%><i><%= ++ln2 %></i><%= 
+					Util.htmlize(file2[j]) %><br/><%
+							}
+						}
+				%></td>
+			</tr><%
+					}
+			%>
+			<tr class="k"><td><%
+					for (int j = cn1; j  <= cl1; j++) {
+				%><i><%= ++ln1 %></i><%= file1[j] %><br/><%
+					}
+				%></td><td><%
+					for (int j = cn2; j  <= cl2; j++) {
+				%><i><%= ++ln2 %></i><a name="<%= ln2 %>"></a><%=
+					file2[j] %><br/><%
+					}
+				%></td>
+			</tr><%
+// OLD
+				} else if (type == DiffType.OLD) {
+					// OLD
+					if (cn1 > ln1) {
+						if (full || cn1 - ln1 < 20) {
+							for (int j = ln1; j < cn1; j++) {
+		%><i><%= ++ln1 %></i><%= 
+			Util.htmlize(file1[j]) %><br/><%
+							}
+						} else {
+							for (int j = ln1; j < ln1 + 8; j++) {
+		%><i><%= j+1 %></i><%=
+			Util.htmlize(file1[j]) %><br/><%
+							}
+		%><br/>--- <b><%= cn1 - ln1 - 16
+			%> unchanged lines hidden</b> (<a href="<%= reqURI 
+			%>?r1=<%= rp1 %>&amp;r2=<%= rp2 
+			%>&amp;format=<%= type.getAbbrev()
+			%>&amp;full=1#<%=ln1%>">view full</a>) --- <br/><br/><%
+							ln1 = cn1 - 8;
+							for (int j = ln1; j < cn1; j++) {
+		%><i><%= ++ln1 %></i><%=
+			Util.htmlize(file1[j]) %><br/><%
+							}
+						}
+					}
+					for (int j = cn1; j  <= cl1 ; j++) {
+		%><i><%= ++ln1 %></i><%= file1[j] %><br/><%
+					}
+					if (full) {
+		%><a name="<%=ln1%>" ></a><%
+					}
+// NEW
+				} else if (type == DiffType.NEW) {
+					if (cn2 > ln2) {
+						if (full || cn2 - ln2 < 20) {
+							for (int j = ln2; j  < cn2 ; j++) {
+		%><i><%= ++ln2 %></i><%= 
+			Util.htmlize(file2[j]) %><br/><%
+							}
+						} else {
+							for (int j = ln2; j < ln2 + 8; j++) {
+		%><i><%= j+1 %></i><%=
+			Util.htmlize(file2[j]) %><br/><%
+							}
+		%><br/>--- <b><%= cn2 - ln2 - 16
+			%> unchanged lines hidden</b> (<a href="<%= reqURI 
+			%>?r1=<%= rp1 %>&amp;r2=<%= rp2 
+			%>&amp;format=<%= type.getAbbrev()
+			%>&amp;full=1#<%= ln2 %>">view full</a>) --- <br/><br/><%
+							ln2 = cn2 - 8;
+							for (int j = ln2; j < cn2; j++) {
+			%><i><%= ++ln2 %></i><%=
+				Util.htmlize(file2[j]) %><br/><%
+							}
+						}
+					}
+					for (int j = cn2; j  <= cl2 ; j++) {
+		%><i><%= ++ln2 %></i><%= file2[j] %><br/><%
+					}
+					if (full) {
+		%><a name="<%= ln2 %>"></a><%
+					}
+				}
+			} // else
+		} // for
+// deltas done, dump the remaining
+		if (file1.length >= ln1) {
+			if (type == DiffType.SIDEBYSIDE) {
+				if (full || file1.length - ln1 < 20) {
+			%>
+			<tr><td><%
+					for (int j = ln1; j < file1.length ; j++) {
+				%><i><%= j+1 %></i><%= Util.htmlize(file1[j]) %><br/><%
+					}
+				%></td><td><%
+					for (int j = ln2; j < file2.length ; j++) {
+				%><i><%= j+1 %></i><%= Util.htmlize(file2[j]) %><br/><%
+					}
+				%></td>
+			</tr>
+			</tbody>
+		</table><%
+				} else {
+			%>
+			<tr><td><%
+					for (int j = ln1; j < ln1 + 8 ; j++) {
+				%><i><%= j+1 %></i><%= Util.htmlize(file1[j]) %><br/><%
+					}
+				%><br/> --- <b><%= file1.length - ln1 - 8
+				%> unchanged lines hidden</b> --- </td><td><%
+					for (int j = ln2; j < ln2 + 8 ; j++) {
+				%><i><%= j+1 %></i><%= Util.htmlize(file2[j]) %><br/><%
+					}
+				%><br/>--- <b><%= file1.length - ln1 - 8 
+				%> unchanged lines hidden</b> ---</td>
+			</tr>
+			</tbody>
+		</table><%
+				}
+			} else if (type == DiffType.UNIFIED) {
+				if (full || file2.length - ln2 < 20) {
+			%>
+			<tr><td><%
+					for (int j = ln2; j < file2.length ; j++) {
+				%><i><%= j+1 %></i><%= Util.htmlize(file2[j]) %><br/><%
+					}
+				%></td>
+			</tr>
+			</tbody>
+		</table><%
+				} else {
+			%>
+			<tr><td><%
+					for (int j = ln2; j < ln2 + 8 ; j++) {
+				%><i><%= j+1 %></i><%= Util.htmlize(file2[j]) %><br/><%
+					}
+				%><br/>--- <b><%= file2.length - ln2 - 8
+				%> unchanged lines hidden</b> ---</td>
+			</tr>
+			</tbody>
+		</table><%
+				}
+			} else if (type == DiffType.OLD) {
+				if (full || file1.length - ln1 < 20) {
+					for (int j = ln1; j < file1.length ; j++) {
+		%><i><%= j+1 %></i><%= Util.htmlize(file1[j]) %><br/><%
+					}
+				} else {
+					for (int j = ln1; j < ln1 + 8 ; j++) {
+		%><i><%= j+1 %></i><%= Util.htmlize(file1[j]) %><br/><%
+					}
+		%><br/> --- <b><%= file1.length - ln1 - 8
+		%> unchanged lines hidden</b> ---<br/><%
+				}
+			} else if (type == DiffType.NEW) {
+				if (full || file2.length - ln2 < 20) {
+					for (int j = ln2; j < file2.length ; j++) {
+		%><i><%= j+1 %></i><%=Util.htmlize(file2[j])%><br/><%
+					}
+				} else {
+					for (int j = ln2; j < ln2 + 8 ; j++) {
+		%><i><%= j+1 %></i><%= Util.htmlize(file2[j]) %><br/><%
+					}
+		%><br/> --- <b><%= file2.length - ln2 - 8
+		%> unchanged lines hidden</b> ---<br/><%
+				}
+			}
+		}
+
+//----DIFFS Done--------
+	%></div>
+</div><%
 	}
-    } catch (UnsupportedEncodingException e) {
-    }
+}
+/* ---------------------- diff.jsp end --------------------- */
+%><%@
 
-    try {
-        if (rp2!=null) tmp = rp2.split("@");
-        if (tmp != null && tmp.length == 2) {
-	    if (tmp != null && tmp.length == 2) {
-		rpath2 = new File(srcRoot+URLDecoder.decode(tmp[0], "UTF-8"));
-		r2 = URLDecoder.decode(tmp[1], "UTF-8");
-	    }
-	}
-    } catch (UnsupportedEncodingException e) {
-    }
+include file="foot.jspf"
 
-    if (r1 == null || r2 == null || r1.equals("") || r2.equals("") || r1.equals(r2)) {
-%><div class="src"><h3 class="error">Error:</h3>
-    Please pick two revisions to compare the changed from the <a href="<%=context+Constants.histL+uriEncodedName%>">history</a>
-</div><%
-// Error message ask to choose two versions from History log page with link to it
-    } else {
-        Genre g = AnalyzerGuru.getGenre(basename);
-        if (g == Genre.PLAIN || g == null || g == Genre.DATA || g == Genre.HTML) {
-            InputStream in1 = null;
-            InputStream in2 = null;
-            try{
-                in1 = HistoryGuru.getInstance().getRevision(rpath1.getParent(), rpath1.getName(), r1);
-                in2 = HistoryGuru.getInstance().getRevision(rpath2.getParent(), rpath2.getName(), r2);
-            } catch (Exception e) {
-		%> <h3 class="error">Error opening revisions!</h3> <%
-            }
-            try {
-                if (in1 != null && in2 != null) {
-                    g = AnalyzerGuru.getGenre(basename);
-                    if (g == null) {
-                        g = AnalyzerGuru.getGenre(in1);
-                    }
-                    if (g == Genre.IMAGE) {
-				%> <div id="difftable">
-				<table rules="cols" cellpadding="5"><tr><th><%=basename%> (revision <%=r1%>)</th><th><%=basename%> (revision <%=r2%>)</th></tr>
-				<tr><td><img src="<%=context+Constants.rawP+path%>?r=<%=r1%>"/></td><td><img src="<%=context+Constants.rawP+path%>?r=<%=r2%>"/></td></tr></table></div><%
-                    } else if (g == Genre.PLAIN || g == Genre.HTML) {
-//--------Do THE DIFFS------------
-                        ArrayList<String> l1 = new ArrayList<String>();
-                        String line;
-                        BufferedReader reader1 = new BufferedReader(new InputStreamReader(in1));
-                        BufferedReader reader2 = new BufferedReader(new InputStreamReader(in2));
-                        
-                        while ((line = reader1.readLine()) != null) {
-                            l1.add(line);
-                        }
-                        
-                        ArrayList<String> l2 = new ArrayList<String>();
-                        while ((line = reader2.readLine()) != null) {
-                            l2.add(line);
-                        }
-                        Object[] file1 = l1.toArray();
-                        Object[] file2 = l2.toArray();
-                        
-                        Revision rev = Diff.diff(file1, file2);
-                        
-                        if(rev.size() == 0) {
-	%><b>No differences found!</b><%
-                        } else {
-                            
-                            int ln1 = 0;
-                            int ln2 = 0;
-                            
-                            String format = request.getParameter("format");
-                            if(format == null || (!format.equals("o") && !format.equals("n") && !format.equals("u") && !format.equals("t")))
-                                format = "s";
-                            String pfull = request.getParameter("full");
-                            boolean full = pfull != null && pfull.equals("1");
-                            pfull = full ? "1" : "0";
-                            
-
-%><div id="difftable"><div id="diffbar"><span class="tabsel">&nbsp;<span class="d"> Deleted </span>&nbsp;<span class="a">&nbsp;Added&nbsp;</span>&nbsp;</span> | <%
-
-if(format.equals("s")) {
-	%><span class="tabsel"><b>sdiff</b></span> <%
-} else {
-	%><span class="tab"><a href="<%=reqURI%>?r1=<%=rp1%>&r2=<%=rp2%>&format=s&full=<%=pfull%>">sdiff</a></span> <%
-}
-                            
-                            if(format.equals("u")) {
-	%><span class="tabsel"><b>udiff</b></span> <%
-                                } else {
-	%><span class="tab"><a href="<%=reqURI%>?r1=<%=rp1%>&r2=<%=rp2%>&format=u&full=<%=pfull%>">udiff</a></span> <%
-                                }
-                            
-                            if(format.equals("t")) {
-	%><span class="tabsel"><b>text</b></span> <%
-                                } else {
-	%><span class="tab"><a href="<%=reqURI%>?r1=<%=rp1%>&r2=<%=rp2%>&format=t&full=<%=pfull%>">text</a></span> <%
-                                }
-                            
-                            if(format.equals("o")) {
-	%><span class="tabsel"><b>old (<%=r1%>)</b></span> <%
-                                } else {
-	%><span class="tab"><a href="<%=reqURI%>?r1=<%=rp1%>&r2=<%=rp2%>&format=o&full=<%=pfull%>">old (<%=r1%>)</a></span> <%
-                                }
-                            
-                            if(format.equals("n")) {
-	%><span class="tabsel"><b>new (<%=r2%>)</b></span>&nbsp;|&nbsp;<%
-                                } else {
-	%><span class="tab"><a href="<%=reqURI%>?r1=<%=rp1%>&r2=<%=rp2%>&format=n&full=<%=pfull%>">new (<%=r2%>)</a></span>&nbsp;|&nbsp;<%
-                                }
-                            
-                            if(!full) {
-	%><span class="tab"><a href="<%=reqURI%>?r1=<%=rp1%>&r2=<%=rp2%>&format=<%=format%>&full=1">&nbsp; &nbsp; full &nbsp; &nbsp;</a></span> <span class="tabsel"><b>compact</b></span><%
-                                } else {
-	%><span class="tabsel"><b>&nbsp; &nbsp; full &nbsp; &nbsp;</b> </span> <span class="tab"> <a href="<%=reqURI%>?r1=<%=rp1%>&r2=<%=rp2%>&format=<%=format%>&full=0">compact</a></span><%
-                                }
-                            
-                            if(format.equals("s") || format.equals("u")) {
-	%></div><pre wrap><table cellpadding="2" cellspacing="1" border="0"  rules="cols"><%
-        if(format.equals("s")) {
-		%><tr><th><%=basename%> (<%=r1%>)</th><th><%=basename%> (<%=r2%>)</th></tr><%
-        }
-                                } else {
-	%></div><pre wrap><%
-                                }
-                            
-                            for (int i=0; i < rev.size(); i++) {
-                                Delta d = rev.getDelta(i);
-                                if(format.equals("t")) {
-	%><%=Util.htmlize(d.toString())%><%
-                                    } else {
-                                        Chunk c1 = d.getOriginal();
-                                        Chunk c2 = d.getRevised();
-                                        int cn1 = c1.first();
-                                        int cl1 = c1.last();
-                                        int cn2 = c2.first();
-                                        int cl2 = c2.last();
-                                        
-                                        int i1 = cn1, i2 = cn2;
-                                        for (; i1 <= cl1 && i2 <= cl2; i1++, i2++) {
-                                            String[] ss = Util.diffline(Util.htmlize((String)file1[i1]), Util.htmlize((String)file2[i2]));
-                                            file1[i1] = ss[0];
-                                            file2[i2] = ss[1];
-                                        }
-
-                                        for (; i1 <= cl1; i1++) {
-                                            file1[i1] = "<span class=\"d\">" + Util.htmlize((String)file1[i1]) + "</span>";
-                                        }
-
-                                        for(; i2 <= cl2; i2++) {
-                                            file2[i2] = "<span class=\"a\">" + Util.htmlize((String)file2[i2]) + "</span>";
-                                        }
-
-                                        if (format.equals("u")) {
-// UDIFF
-                                            if (cn1 > ln1 || cn2 > ln2) {
-	  %><tr class="k"><td><%
-          if (full || (cn2 - ln2 < 20)) {
-              for (int j = ln2; j < cn2; j++) {
-		 	%><i><%=readableLine(++ln2)%></i><%=Util.htmlize((String)file2[j])%><br/><%
-              }
-          } else {
-              for (int j = ln2; j < ln2+8; j++) {
-			%><i><%=readableLine(j+1)%></i><%=Util.htmlize((String)file2[j])%><br/><%
-              }
-		%><br/>--- <b><%=cn2 - ln2 - 16%> unchanged lines hidden</b> (<a href="<%=reqURI%>?r1=<%=rp1%>&r2=<%=rp2%>&format=<%=format%>&full=1#<%=ln2%>">view full</a>) --- <br/><br/><%
-                ln2 = cn2-8;
-                for (int j = cn2 - 8; j < cn2; j++) {
-			%><i><%=readableLine(++ln2)%></i><%=Util.htmlize((String)file2[j])%><br/><%
-                }
-          }
-	  %></td></tr><%
-          ln1 = cn1;
-                                            }
-                                            if(cn1 <= cl1) {
-		%><tr><td class="d"><%
-                for(int j = cn1; j  <= cl1 ; j++) {
-			%><strike class="d"><%=readableLine(++ln1)%></strike><%=file1[j]%><br/><%
-                }
-		%></td></tr><%
-                                            }
-                                            if(cn2 <= cl2) {
-		%><tr class="k"><td><%
-                for(int j = cn2; j  < cl2; j++) {
-			%><i class="a"><%=readableLine(++ln2)%></i><%=file2[j]%><br/><%
-                }
-		%><i class="a"><%=readableLine(++ln2)%></i><%=file2[cl2]%><%
-                if(full) {
-			%><a name="<%=ln2%>" /><%
-                }
-		%></td></tr><%
-                                            }
-// SDIFF by default
-                                        } else if(format.equals("s")) {
-                                            
-                                            if (cn1 > ln1 || cn2 > ln2) {
-	    %><tr class="k"><td><%
-            if(full || cn2 - ln2 < 20) {
-                for(int j = ln1; j < cn1; j++) {
-			%><i><%=readableLine(++ln1)%></i><%=Util.htmlize((String)file1[j])%><br/><%
-                }
-		%></td><td><%
-                for(int j = ln2; j  < cn2 ; j++) {
-			%><i><%=readableLine(++ln2)%></i><%=Util.htmlize((String)file2[j])%><br/><%
-                }
-            } else {
-                for(int j = ln1; j < ln1+8; j++) {
-			%><i><%=readableLine(j+1)%></i><%=Util.htmlize((String)file1[j])%><br/><%
-                }
-		%><br/>--- <b><%=cn1 - ln1 - 16%> unchanged lines hidden</b> (<a href="<%=reqURI%>?r1=<%=rp1%>&r2=<%=rp2%>&format=<%=format%>&full=1#<%=ln2%>">view full</a>) --- <br/><br/><%
-                ln1 = cn1-8;
-                for (int j = cn1 - 8; j < cn1; j++) {
-			%><i><%=readableLine(++ln1)%></i><%=Util.htmlize((String)file1[j])%><br/><%
-                }
-	     %></td><td><%
-             for (int j = ln2; j < ln2+8; j++) {
-			%><i><%=readableLine(j+1)%></i><%=Util.htmlize((String)file2[j])%><br/><%
-             }
-		%><br/>--- <b><%=cn2 - ln2 - 16%> unchanged lines hidden</b> (<a href="<%=reqURI%>?r1=<%=rp1%>&r2=<%=rp2%>&format=<%=format%>&full=1#<%=ln2%>">view full</a>) --- <br/><br/><%
-                ln2 = cn2-8;
-                for (int j = cn2 - 8; j < cn2; j++) {
-			%><i><%=readableLine(++ln2)%></i><%=Util.htmlize((String)file2[j])%><br/><%
-                }
-            }
-	    %></td></tr><%    
-                                            }
-
-	%><tr  valign="top" class="k"><td><%
-        for(int j = cn1; j  <= cl1; j++) {
-		%><i><%=readableLine(++ln1)%></i><%=file1[j]%><br/><%
-        }
-	%></td><td><%
-        for(int j = cn2; j  <= cl2; j++) {
-		%><i><%=readableLine(++ln2)%></i><a name="<%=ln2%>"></a><%=file2[j]%><br/><%
-        }
-	%></td></tr><%
-        
-// OLD -----
-                                        } else if ( format.equals("o")) {
-                                            if (cn1 > ln1) {
-                                                if(full || cn1 - ln1 < 20) {
-                                                    for(int j = ln1; j < cn1; j++) {
-			%><i><%=readableLine(++ln1)%></i><%=Util.htmlize((String)file1[j])%><br/><%
-                                                    }
-                                                } else {
-                                                    for(int j = ln1; j < ln1+8; j++) {
-			%><i><%=readableLine(j+1)%></i><%=Util.htmlize((String)file1[j])%><br/><%
-                                                    }
-		%><br/>--- <b><%=cn1 - ln1 - 16%> unchanged lines hidden</b> (<a href="<%=reqURI%>?r1=<%=rp1%>&r2=<%=rp2%>&format=<%=format%>&full=1#<%=ln1%>">view full</a>) --- <br/><br/><%
-                ln1 = cn1-8;
-                for (int j = cn1 - 8; j < cn1; j++) {
-			%><i><%=readableLine(++ln1)%></i><%=Util.htmlize((String)file1[j])%><br/><%
-                }
-                                                }
-                                            }
-                                            for(int j = cn1; j  <= cl1 ; j++) {
-		%><i><%=readableLine(++ln1)%></i><%=file1[j]%><br/><%
-                                            }
-                                            if(full) {
-			%><a name="<%=ln1%>" ></a><%
-                                            }
-                                            
-// NEW -----------
-                                        } else if ( format.equals("n")) {
-                                            
-                                            if (cn2 > ln2) {
-                                                if(full || cn2 - ln2 < 20) {
-                                                    for(int j = ln2; j  < cn2 ; j++) {
-			%><i><%=readableLine(++ln2)%></i><%=Util.htmlize((String)file2[j])%><br/><%
-                                                    }
-                                                } else {
-                                                    for (int j = ln2; j < ln2+8; j++) {
-				%><i><%=readableLine(j+1)%></i><%=Util.htmlize((String)file2[j])%><br/><%
-                                                    }
-			%><br/>--- <b><%=cn2 - ln2 - 16%> unchanged lines hidden</b> (<a href="<%=reqURI%>?r1=<%=rp1%>&r2=<%=rp2%>&format=<%=format%>&full=1#<%=ln2%>">view full</a>) --- <br/><br/><%
-                        ln2 = cn2-8;
-                        for (int j = cn2 - 8; j < cn2; j++) {
-				%><i><%=readableLine(++ln2)%></i><%=Util.htmlize((String)file2[j])%><br/><%
-                        }
-                                                }
-                                            }
-                                            for(int j = cn2; j  <= cl2 ; j++) {
-		%><i><%=readableLine(++ln2)%></i><%=file2[j]%><br/><%
-                                            }
-                                            if(full) {
-			%><a name="<%=ln2%>"></a><%
-                                            }
-                                            
-            }
-                                    }
-                            }
-                            
-                            
-                            if (file1.length >= ln1) {
-// dump the remaining
-                                if (format.equals("s")) {
-                                    if (full || file1.length - ln1 < 20) {
-		%><tr><td><%
-                for (int j = ln1; j < file1.length ; j++) {
-		 	%><i><%=(j+1)%></i><%=Util.htmlize((String)file1[j])%><br/><%
-                }
-		%></td><td><%
-                for (int j = ln2; j < file2.length ; j++) {
-		 	%><i><%=(j+1)%></i><%=Util.htmlize((String)file2[j])%><br/><%
-                }
-		%></td></tr></table><%
-                                        } else {
-		%><tr><td><%
-                for (int j = ln1; j < ln1 + 8 ; j++) {
-		 	%><i><%=(j+1)%></i><%=Util.htmlize((String)file1[j])%><br/><%
-                }
-
-		%><br/> --- <b><%=file1.length - ln1 - 8%> unchanged lines hidden</b> --- </td><td><%
-                for (int j = ln2; j < ln2 + 8 ; j++) {
-		 	%><i><%=(j+1)%></i><%=Util.htmlize((String)file2[j])%><br/><%
-                }
-		%><br/>--- <b><%=file1.length - ln1 - 8%> unchanged lines hidden</b> ---</td></tr></table><%
-                                        }
-                                    } else if (format.equals("u")) {
-                                        if (full || file2.length - ln2 < 20) {
-		%><tr><td><%
-                for (int j = ln2; j < file2.length ; j++) {
-		 	%><i><%=(j+1)%></i><%=Util.htmlize((String)file2[j])%><br/><%
-                }
-		%></td></tr></table><%
-                                        } else {
-		%><tr><td><%
-                for (int j = ln2; j < ln2 + 8 ; j++) {
-		 	%><i><%=(j+1)%></i><%=Util.htmlize((String)file2[j])%><br/><%
-                }
-		%><br/>--- <b><%=file2.length - ln2 - 8%> unchanged lines hidden</b> ---</td></tr></table><%
-                                        }
-                                    } else if (format.equals("o")) {
-                                    if (full || file1.length - ln1 < 20) {
-                                        for (int j = ln1; j < file1.length ; j++) {
-		 	%><i><%=(j+1)%></i><%=Util.htmlize((String)file1[j])%><br/><%
-                                            }
-                                        } else {
-                                            for (int j = ln1; j < ln1 + 8 ; j++) {
-		 	%><i><%=(j+1)%></i><%=Util.htmlize((String)file1[j])%><br/><%
-                                            }
-
-		%><br/> --- <b><%=file1.length - ln1 - 8%> unchanged lines hidden</b> ---<br/><%
-                                        }
-                                    } else if (format.equals("n")) {
-                                    if (full || file2.length - ln2 < 20) {
-                                        for (int j = ln2; j < file2.length ; j++) {
-		 	%><i><%=(j+1)%></i><%=Util.htmlize((String)file2[j])%><br/><%
-                                            }
-                                        } else {
-                                            for (int j = ln2; j < ln2 + 8 ; j++) {
-		 	%><i><%=(j+1)%></i><%=Util.htmlize((String)file2[j])%><br/><%
-                                            }
-		%><br/> --- <b><%=file2.length - ln2 - 8%> unchanged lines hidden</b> ---<br/><%
-                                        }
-                                    }
-                                
-                            }
-                            
-//----DIFFS Done--------
-%></pre></div><%
-                        }
-                    } else {
-				%> <div id="src">Diffs for binary files cannot be displayed! Files are <a href="<%=context+Constants.rawP+path%>?r=<%=r1%>"><%=basename%>(revision <%=r1%>)</a> and
-                                    <a href="<%=context+Constants.rawP+path%>?r=<%=r2%>"><%=basename%>(revision <%=r2%>)</a>.
-				</div><%
-                    }
-                }
-            } catch (FileNotFoundException e) {
-		 %><div class="src"><h3 class="error">Error Opening files! <%=Util.htmlize(e.getMessage())%></h3></div><%
-            } finally {
-                if(in1 != null)
-                    try {
-                        in1.close();
-                    } catch (IOException ignore) {
-                    }
-                if(in2 != null)
-                    try {
-                        in2.close();
-                    } catch (IOException ignore) {
-                }
-            }
-        } else if (g == Genre.IMAGE) {
-				%> <div class="src">
-				<table rules="cols" cellpadding="5"><tr><th><%=basename%> (revision <%=r1%>)</th><th><%=basename%> (revision <%=r2%>)</th></tr>
-				<tr><td><img src="<%=context+Constants.rawP+path%>?r=<%=r1%>"/></td><td><img src="<%=context+Constants.rawP+path%>?r=<%=r2%>"/></td></tr></table></div><%
-                                
-        } else {
-				%> <div class="src">Diffs for binary files cannot be displayed. Files are <a href="<%=context+Constants.rawP+path%>?r=<%=r1%>"><%=basename%>(revision <%=r1%>)</a> and
-                                    <a href="<%=context+Constants.rawP+path%>?r=<%=r2%>"><%=basename%>(revision <%=r2%>)</a>.
-				</div><%
-        }
-    }
-%><%@include file="foot.jspf"%><%
-}
-%>
+%>
\ No newline at end of file
diff -r 09f0768a7ec1 web/enoent.jsp
--- a/web/enoent.jsp	Fri May 06 21:41:59 2011 +0200
+++ b/web/enoent.jsp	Sat May 07 06:44:23 2011 +0200
@@ -17,36 +17,53 @@
 CDDL HEADER END
 
 Copyright (c) 2005, 2010, Oracle and/or its affiliates. All rights reserved.
+Portions Copyright 2011 Jens Elkner.
 
---%><%@ page import = "javax.servlet.*,
-javax.servlet.http.*,
-java.lang.*,
-java.io.*,
-org.opensolaris.opengrok.configuration.*"
- session="false" %><%@ page isErrorPage="true" %><%
+--%><%@page session="false" isErrorPage="true" import="
+org.opensolaris.opengrok.web.Prefix,
+org.opensolaris.opengrok.configuration.RuntimeEnvironment"
+ %><%
+/* ---------------------- enoent.jsp start --------------------- */
+{
+	cfg = PageConfig.get(request);
+	cfg.setTitle("File not found");
 
-String context = request.getContextPath();
-RuntimeEnvironment environment = RuntimeEnvironment.getInstance();
-environment.setUrlPrefix(context + Constants.searchR+"?");
-environment.register();
-String rawSource = environment.getSourceRootPath();
-String configError = "";
-if (rawSource.equals("")) {
-    configError = "CONFIGURATION parameter has not been configured in web.xml! Please configure your webapp.";
-} else {
-    if (!environment.getSourceRootFile().isDirectory()) {
-        configError = "The source root specified in your configuration does not point to a valid directory! Please configure your webapp.";
-    }
+	String context = request.getContextPath();
+	cfg.getEnv().setUrlPrefix(context + Prefix.SEARCH_R + "?");
+	String configError = "";
+	if (cfg.getSourceRootPath().isEmpty()) {
+		configError = "CONFIGURATION parameter has not been configured in "
+			+ "web.xml! Please configure your webapp.";
+	} else if (!cfg.getEnv().getSourceRootFile().isDirectory()) {
+		configError = "The source root specified in your configuration does "
+			+ "not point to a valid directory! Please configure your webapp.";
+	}
+%><%@
+
+include file="httpheader.jspf"
+
+%><body>
+<div id="page">
+	<div id="whole_header">
+		<div id="header"><%@ 
+
+include file="pageheader.jspf"
+
+		%></div>
+		<div id="Masthead"></div>
+		<div id="sbar"><%@
+
+include file="menu.jspf"
+
+		%></div>
+	</div>
+	<h3 class="error">Error: File not found!</h3>
+	<p>The requested resource is not available. <%= configError %></p>
+<%
 }
-String pageTitle = "File not found";
-%><%@ include file="httpheader.jspf" %>
-<body><div id="page">
-<form action="<%=context+Constants.searchP%>">
-    <div id="header">
-        <%@ include file="pageheader.jspf" %>
-    </div>
-<div id="Masthead"></div>
-<div id="bar"><a id="home" href="<%=context%>/">Home</a> | <input id="search" name="q" class="q"/> <input type="submit" value="Search" class="submit"/> </div>
-<h3 class="error">Error 404: File not found!</h3>
-The requested resource is not available. <%=configError%>
-<div style="display:block;height:10em">&nbsp;</div><%@include file="foot.jspf"%>
+/* ---------------------- enoent.jsp end --------------------- */
+%><%@
+		
+include file="foot.jspf"
+
+%>
\ No newline at end of file
diff -r 09f0768a7ec1 web/error.jsp
--- a/web/error.jsp	Fri May 06 21:41:59 2011 +0200
+++ b/web/error.jsp	Sat May 07 06:44:23 2011 +0200
@@ -17,47 +17,69 @@
 CDDL HEADER END
 
 Copyright (c) 2005, 2010, Oracle and/or its affiliates. All rights reserved.
+Portions Copyright 2011 Jens Elkner.
 
---%><%@ page import = "javax.servlet.*,
-javax.servlet.http.*,
-java.io.*,
-org.opensolaris.opengrok.configuration.*,
+--%><%@ page session="false" isErrorPage="true" import="
+java.io.PrintWriter,
+java.io.StringWriter,
+
 org.opensolaris.opengrok.web.Util"
-%><%@ page session="false" %><%@ page isErrorPage="true" %><%
-String context = request.getContextPath();
-RuntimeEnvironment environment = RuntimeEnvironment.getInstance();
-environment.setUrlPrefix(context + Constants.searchR+"?");
-environment.register();
-String rawSource = environment.getSourceRootPath();
-String configError = "";
-if ("".equals(rawSource)) {
-    configError = "CONFIGURATION parameter has not been configured in web.xml! Please configure your webapp.";
-} else {
-    if (environment.getSourceRootFile() == null || !environment.getSourceRootFile().isDirectory()) {
-        configError = "The source root specified in your configuration does not point to a valid directory! Please configure your webapp.";
-    }
-}
-String pageTitle = "Error!";
-%><%@ include file="httpheader.jspf" %>
+%><%
+/* ---------------------- error.jsp start --------------------- */
+{
+	cfg = PageConfig.get(request);
+	cfg.setTitle("Error!");
+
+	String context = request.getContextPath();
+	String configError = "";
+	if (cfg.getSourceRootPath().isEmpty()) {
+		configError = "CONFIGURATION parameter has not been configured in "
+			+ "web.xml! Please configure your webapp.";
+	} else if (!cfg.getEnv().getSourceRootFile().isDirectory()) {
+		configError = "The source root specified in your configuration does "
+			+ "not point to a valid directory! Please configure your webapp.";
+	}
+%><%@ 
+
+include file="httpheader.jspf" 
+
+%>
 <body>
 <div id="page">
-    <div id="header">
-      <%@ include file="pageheader.jspf" %>
-    </div>
-<div id="Masthead"></div>
-<div id="bar"><a id="home" href="<%=context%>/">Home</a> | <input id="search" name="q" class="q"/> <input type="submit" value="Search" class="submit"/> </div>
-<h3 class="error">There was an error!</h3>
-<p><%=configError%>
-</p><pre><%
-   StringWriter wrt = new StringWriter();
-   PrintWriter prt = new PrintWriter(wrt);
-   exception.printStackTrace(prt);
-   prt.flush();
-   Util.htmlize(wrt.toString(), out);
-   prt.close();
+	<div id="whole_header">
+ 	   <div id="header">
+<%@
+    
+include file="pageheader.jspf"
+
 %>
-</pre>
-<p>
-<%=exception.getMessage()%>
-</p>
-<%@include file="foot.jspf"%>
+    	</div>
+		<div id="Masthead"></div>
+		<div id="sbar"><%@
+
+include file="menu.jspf"
+
+		%></div>
+	</div>
+	<h3 class="error">There was an error!</h3>
+	<p class="error"><%= configError %></p><%
+	if (exception != null) {
+%>
+		<p class="error"><%= exception.getMessage() %></p>
+		<pre><%
+		StringWriter wrt = new StringWriter();
+		PrintWriter prt = new PrintWriter(wrt);
+		exception.printStackTrace(prt);
+		prt.close();
+		out.write(Util.htmlize(wrt.toString()));
+		%></pre><%
+	} else {
+		%><p class="error">Unknown Error</p><%
+	}
+}
+/* ---------------------- error.jsp end --------------------- */
+%><%@
+
+include file="foot.jspf"
+
+%>
\ No newline at end of file
diff -r 09f0768a7ec1 web/foot.jspf
--- a/web/foot.jspf	Fri May 06 21:41:59 2011 +0200
+++ b/web/foot.jspf	Sat May 07 06:44:23 2011 +0200
@@ -19,26 +19,38 @@
 Copyright 2007 Sun Microsystems, Inc.  All rights reserved.
 Use is subject to license terms.
 
---%>
-<%@page import="org.opensolaris.opengrok.web.Constants"%>
-<div id="Footer">
-    <p class="Center">
-        <a href="http://www.opensolaris.org/os/project/opengrok/"><img src="<%=request.getContextPath()%>/<%=environment.getWebappLAF()%>/img/servedby.png" alt="Served by OpenGrok" title="Served by OpenGrok"/></a>
-    </p>
-    <p class="Center">Indexes created <%=org.opensolaris.opengrok.configuration.RuntimeEnvironment.getInstance().getDateForLastIndexRun()%>
-    </p>
-</div><%
-String fservlet = request.getServletPath();
-if ( fservlet.startsWith(Constants.xrefS) || fservlet.startsWith(Constants.histS) || fservlet.startsWith(Constants.diffS) || fservlet.startsWith(Constants.moreS) ) { %>
-</div><% } // just for content from xref / lister / history / diff / more pages %>
-</div><% // from page %>
-<%-- comment out below to disable default lsttoggle of symbols
-<script type="text/javascript">/* <![CDATA[ */
-if (typeof lsttoggle == 'function')
+Portions Copyright 2011 Jens Elkner.
+--%><%@page import="
+java.util.EnumSet,
+
+org.opensolaris.opengrok.web.PageConfig,
+org.opensolaris.opengrok.web.Prefix"
+%><%!
+/* ---------------------- foot.jspf members start --------------------- */
+	private static EnumSet<Prefix> needAddDiv = EnumSet.of(
+		Prefix.HIST_L, Prefix.XREF_P, Prefix.DIFF_P, Prefix.MORE_P, 
+		// could NOT find any mapping/reference to those ones:
+		Prefix.HIST_S, Prefix.XREF_S, Prefix.DIFF_S, Prefix.MORE_S);
+/* ---------------------- foot.jspf members end --------------------- */
+%><%
+/* ---------------------- foot.jspf start --------------------- */
 {
-    lsttoggle();
-}
-/* ]]> */</script>
---%>
+	cfg = PageConfig.get(request);
+
+		%>
+	<div id="footer">
+<p><a href="http://www.opensolaris.org/os/project/opengrok/" 
+ title="Served by OpenGrok"><span id="fti"></span></a></p>
+<p>Indexes created <%= cfg.getEnv().getDateForLastIndexRun() %></p><%
+	if (needAddDiv.contains(cfg.getPrefix())) {
+		%></div><% // #content
+	}
+	// #footer, #page:
+	%></div>
+</div>
 </body>
 </html>
+<%
+}
+/* ---------------------- foot.jspf end --------------------- */
+%>
diff -r 09f0768a7ec1 web/help.jsp
--- a/web/help.jsp	Fri May 06 21:41:59 2011 +0200
+++ b/web/help.jsp	Sat May 07 06:44:23 2011 +0200
@@ -19,102 +19,163 @@
 Copyright 2007 Sun Microsystems, Inc.  All rights reserved.
 Use is subject to license terms.
 
---%><%@ page import = "org.opensolaris.opengrok.configuration.RuntimeEnvironment"
-             session="false" errorPage="error.jsp" %><%
-RuntimeEnvironment environment = RuntimeEnvironment.getInstance();
-environment.register();
-String pageTitle = "OpenGrok Help";
-%><%@ include file="httpheader.jspf" %>
+Portions Copyright 2011 Jens Elkner.
+
+--%><%@ page session="false" errorPage="error.jsp" import="
+org.opensolaris.opengrok.web.PageConfig"
+%><%
+/* ---------------------- help.jsp start --------------------- */
+{
+	cfg = PageConfig.get(request);
+	cfg.setTitle("OpenGrok Help");
+%><%@
+
+include file="httpheader.jspf"
+
+%>
 <body>
-    <div id="page">
-        <div id="header"><%@ include file="pageheader.jspf" %> </div>
-        <div id="Masthead"></div>
-        <div id="bar">
-            <table cellpadding="0" cellspacing="0" border="0" width="100%">
-                <tr><td valign="top"><br /> &nbsp;</td><td align="left" valign="middle"><br/>
-                        <form action="search" name="sbox">
-                            <table cellpadding="2" border="0" cellspacing="0">
-                                <tr><td align="right"> Full&nbsp;Search (q) </td><td><input class="q" name="q" size="45" value=""/></td></tr>
-                                <tr><td align="right"> Definition (defs) </td><td><input class="q" name="defs" size="25" value=""/></td></tr>
-                                <tr><td align="right"> Symbol (refs) </td><td><input class="q" name="refs" size="25" value=""/></td></tr>
-                                <tr><td align="right"> File&nbsp;Path (path) </td><td><input class="q" name="path" size="25" value=""/></td></tr>
-                                <tr><td align="right"> History (hist) </td><td><input class="q" name="hist" size="25" value=""/></td></tr>
-                                <tr><td></td><td>  &nbsp; <input class="submit" type="submit" value=" Search "/> | <input class="submit" onclick="document.sbox.q.value='';document.sbox.defs.value='';document.sbox.refs.value='';document.sbox.path.value='';document.sbox.hist.value='';" type="button" value=" Clear "/></td></tr>
-                            </table>
-                        </form>
-            </td></tr></table>
-        </div>
-        <div id="results"><p>
-                A <u>Query</u> is a series of clauses. A clause may be prefixed by:
-                <ul>
-                    <li>a plus "<b>+</b>" or a minus "<b>-</b>" sign, indicating that the clause is required or prohibited respectively; or</li>
-                    <li>a <u>term</u> followed by a colon "<b>:</b>", indicating the <u>field</u> to be searched. This enables one to construct queries which search multiple <u>fields</u>.</li>
-                </ul>
-                A clause may be either:
-                <ul>
-                    <li> a <u>term</u>, indicating all the documents that contain this term; or</li>
-                    <li> a <u>phrase</u> - group of words surrounded by double quotes <b>" "</b>, e.g. "hello dolly"  </li>
-                    <li> a nested query, enclosed in parentheses "<b>(</b>" "<b>)</b>" (also called query/field <u>grouping</u>) . Note that this may be used with a +/- prefix to require any of a set of terms. </li>
-                    <li> boolean <u>operators</u> which allow terms to be combined through logic operators. Supported are <b>AND</b>(<b>&&</b>), "<b>+</b>", <b>OR</b>(<b>||</b>), <b>NOT</b>(<b>!</b>) and "<b>-</b>" (Note: they must be ALL CAPS).</li>
-                </ul>
-                Wildcard, Fuzzy, Proximity & Range Searches:
-                <ul>
-                    <li> to perform a single character wildcard search use the "<b>?</b>" symbol, e.g.  te?t</li>
-                    <li> to perform a multiple character wildcard search use the "<b>*</b>" symbol, e.g. test* or te*t</li>
-                    <li> you cannot use a * or ? symbol as the first character of a search (unless enabled using indexer option -a).</li>
-                    <li> to do a fuzzy search(find words similar in spelling, based on the Levenshtein Distance, or Edit Distance algorithm) use the tilde, "<b>~</b>", e.g. rcs~ </li>
-                    <li> to do a proximity search use the tilde, "~", symbol at the end of a Phrase. For example to search for a "opengrok" and "help" within 10 words of each other enter: "opengrok help"~10 </li>
-                    <li> range queries allow one to match documents whose field(s) values are between the lower and upper bound specified by the Range Query. Range Queries can be inclusive or exclusive of the upper and lower bounds. Sorting is done lexicographically. Inclusive queries are denoted by square brackets <b>[ ]</b> , exclusive by curly brackets <b>{ }</b>. For example: title:{Aida TO Carmen} - will find all documents between Aida to Carmen, exclusive of Aida and Carmen. </li>
-                </ul>
-                    
-                <a name="escaping"><u>Escaping special characters:</u></a>
-                <p>Opengrok supports escaping special characters that are part of the query syntax. Current special characters are:<br/>
-                    <b>+ - &amp;&amp; || ! ( ) { } [ ] ^ " ~ * ? : \ </b><br/>
-                To escape these character use the \ before the character. For example to search for <b>(1+1):2</b> use the query: <b>\(1\+1\)\:2</b></p> 
-                <p>NOTE on analyzers: Indexed words are made up of Alpha-Numeric and Underscore characters. One letter words are usually not indexed as symbols!<br>
-Most other characters(including single and double quotes) are treated as "spaces/whitespace"(so even if you escape them, they will not be found, since most analyzers ignore them). <br>
-The exceptions are: <b>@ $ % ^ &amp; = ? . :</b> which are mostly indexed as separate words.<br>
-Because some of them are part of the query syntax, they must be escaped with a reverse slash as noted above.<br>
+	<div id="page">
+		<div id="whole_header">
+			<div id="header"><%@
+
+include file="pageheader.jspf"
+
+			%></div>
+			<div id="Masthead"></div>
+		</div>
+		<div id="sbar">
+			<div id="menu"><%@ 
+	
+include file="menu.jspf"
+
+%>
+			</div>
+		</div>
+		<div id="help">
+<p>
+A <dfn>Query</dfn> is a series of clauses. A clause may be prefixed by:</p>
+<ul>
+    <li>a plus "<b>+</b>" or a minus "<b>-</b>" sign, indicating that the clause 
+    	is required or prohibited respectively; or</li>
+    <li>a <dfn>term</dfn> followed by a colon "<b>:</b>", indicating the 
+    	<dfn>field</dfn> to be searched. This enables one to construct queries 
+    	which search multiple <dfn>fields</dfn>.</li>
+</ul>
+<p>A clause may be either:</p>
+<ul>
+    <li>a <dfn>term</dfn>, indicating all the documents that contain this term; 
+    	or</li>
+    <li>a <dfn>phrase</dfn> - group of words surrounded by double quotes 
+    	<b>" "</b>, e.g. "hello dolly"  </li>
+    <li>a nested query, enclosed in parentheses "<b>(</b>" "<b>)</b>" (also 
+    	called query/field <dfn>grouping</dfn>) . Note that this may be used 
+    	with a +/- prefix to require any of a set of terms. </li>
+    <li>boolean <dfn>operators</dfn> which allow terms to be combined through 
+    	logic operators. Supported are <b>AND</b>(<b>&amp;&amp;</b>), "<b>+</b>", 
+    	<b>OR</b>(<b>||</b>), <b>NOT</b>(<b>!</b>) and "<b>-</b>" (Note: they 
+    	must be ALL CAPS).</li>
+</ul>
+<p>Wildcard, Fuzzy, Proximity &amp; Range Searches:</p>
+<ul>
+    <li>to perform a single character wildcard search use the "<b>?</b>" symbol, 
+    	e.g.  te?t</li>
+    <li>to perform a multiple character wildcard search use the "<b>*</b>" 
+    	symbol, e.g. test* or te*t</li>
+    <li>you cannot use a * or ? symbol as the first character of a search 
+    	(unless enabled using indexer option -a).</li>
+    <li>to do a fuzzy search(find words similar in spelling, based on the 
+    	Levenshtein Distance, or Edit Distance algorithm) use the tilde, 
+    	"<b>~</b>", e.g. rcs~ </li>
+    <li>to do a proximity search use the tilde, "~", symbol at the end of a 
+    	Phrase. For example to search for a "opengrok" and "help" within 10 
+    	words of each other enter: "opengrok help"~10 </li>
+    <li>range queries allow one to match documents whose field(s) values are 
+    	between the lower and upper bound specified by the Range Query. Range 
+    	Queries can be inclusive or exclusive of the upper and lower bounds. 
+    	Sorting is done lexicographically. Inclusive queries are denoted by 
+    	square brackets <b>[ ]</b> , exclusive by curly brackets <b>{ }</b>. 
+    	For example: title:{Aida TO Carmen} - will find all documents between 
+    	Aida to Carmen, exclusive of Aida and Carmen. </li>
+</ul>
+    
+<a id="escaping"><dfn>Escaping special characters:</dfn></a>
+<p>Opengrok supports escaping special characters that are part of the query 
+	syntax. Current special characters are:<br/>
+    <b>+ - &amp;&amp; || ! ( ) { } [ ] ^ " ~ * ? : \ </b><br/>
+To escape these character use the \ before the character. For example to search 
+for <b>(1+1):2</b> use the query: <b>\(1\+1\)\:2</b>
+</p> 
+<p>NOTE on analyzers: Indexed words are made up of Alpha-Numeric and Underscore 
+characters. One letter words are usually not indexed as symbols!<br/>
+Most other characters(including single and double quotes) are treated as 
+"spaces/whitespace"(so even if you escape them, they will not be found, since 
+most analyzers ignore them). <br/>
+The exceptions are: <b>@ $ % ^ &amp; = ? . :</b> which are mostly indexed as 
+separate words.<br/>
+Because some of them are part of the query syntax, they must be escaped with a 
+reverse slash as noted above.<br/>
 So searching for <b>\+1</b> or <b>\+ 1</b> will both find <b>+1</b> and <b>+ 1</b>.
-                </p>
-                    
-                valid <u>FIELDs</u> are
-                <pre>
-                            <b>full:</b> Search through all text tokens(words,strings,identifiers,numbers) in index.
-                            <b>defs:</b> Only finds symbol definitions.
-                            <b>refs:</b> Only finds symbols.
-                            <b>path:</b> path of the source file.
-                            <b>hist:</b> History log comments
-                </pre>
-                <p>
-                    the term(phrases) can be boosted(making it more relevant) using a caret <b>^</b> , e.g. help^4 opengrok - will make term help boosted
-                </p>
-                <u><b>Examples:</b></u>
-                <pre>
-                    
-                            To find where setResourceMonitors is defined:
-                            <a href="search?q=&defs=setResourceMonitors">defs:setResourceMonitors</a>
-                                
-                            To find files that use sprintf in usr/src/cmd/cmd-inet/usr.sbin/:
-                            <a href="search?refs=sprintf&path=usr%2Fsrc%2Fcmd%2Fcmd-inet%2Fusr.sbin%2F">refs:sprintf path:usr/src/cmd/cmd-inet/usr.sbin</a>
-                                
-                            To find assignments to variable Asign:
-                            <a href="search?q=%22asign+%3D+%22">"Asign="</a>
-                                
-                            To find Makefiles where pstack binary is being built:
-                            <a href="search?q=pstack&path=Makefile">pstack path:Makefile</a>
-                                
-                            to search for phrase "Bill Joy":
-                            <a href="search?q=%22Bill+Joy%22">"Bill Joy"</a>
-                                
-                            To find perl files that do not use /usr/bin/perl but something else:
-                            <a href="search?q=-%22%2Fusr%2Fbin%2Fperl%22+%2B%22%2Fbin%2Fperl%22">-"/usr/bin/perl" +"/bin/perl"</a>
+</p>
+    
+<p>valid <dfn>FIELDs</dfn> are</p>
+	<dl class="fields">
+<dt>full</dt>
+<dd>Search through all text tokens(words,strings,identifiers,numbers) in index.</dd>
 
-                            To find all strings begining with foo use the wildcard:
-                            <a href="search?q=foo*">foo*</a>
-                </pre>
-                    
-                <p>Opengrok search is powered by <a href="http://lucene.apache.org/">lucene</a>, for more detail on query syntax refer to lucene docs.</p>
-            </p>
-        </div>
-        <%@include file="foot.jspf"%>
+<dt>defs</dt>
+<dd>Only finds symbol definitions.</dd>
+
+<dt>refs</dt>
+<dd>Only finds symbols.</dd>
+
+<dt>path</dt>
+<dd>path of the source file.</dd>
+
+<dt>hist</dt>
+<dd>History log comments.</dd>
+	</dl>
+
+<p>
+the term(phrases) can be boosted (making it more relevant) using a caret 
+<b>^</b> , e.g. help^4 opengrok - will make term help boosted
+</p>
+
+<dfn><b>Examples:</b></dfn>
+<pre class="example">
+
+To find where setResourceMonitors is defined: <a 
+href="search?q=&amp;defs=setResourceMonitors">defs:setResourceMonitors</a>
+    
+To find files that use sprintf in usr/src/cmd/cmd-inet/usr.sbin/: 
+<a href="search?refs=sprintf&amp;path=usr%2Fsrc%2Fcmd%2Fcmd-inet%2Fusr.sbin%2F"
+>refs:sprintf path:usr/src/cmd/cmd-inet/usr.sbin</a>
+    
+To find assignments to variable Asign:
+<a href="search?q=%22asign+%3D+%22">"Asign="</a>
+    
+To find Makefiles where pstack binary is being built: 
+<a href="search?q=pstack&amp;path=Makefile">pstack path:Makefile</a>
+    
+to search for phrase "Bill Joy": 
+<a href="search?q=%22Bill+Joy%22">"Bill Joy"</a>
+    
+To find perl files that do not use /usr/bin/perl but something else: 
+<a href="search?q=-%22%2Fusr%2Fbin%2Fperl%22+%2B%22%2Fbin%2Fperl%22"
+>-"/usr/bin/perl" +"/bin/perl"</a>
+
+To find all strings begining with foo use the wildcard:
+<a href="search?q=foo*">foo*</a>
+
+</pre>
+    
+<p>Opengrok search is powered by <a href="http://lucene.apache.org/"
+>lucene</a>, for more detail on query syntax refer to lucene docs.</p>
+		</div>
+<%
+}
+/* ---------------------- help.jsp end --------------------- */
+%><%@
+
+include file="foot.jspf"
+
+%>
\ No newline at end of file
diff -r 09f0768a7ec1 web/history.jsp
--- a/web/history.jsp	Fri May 06 21:41:59 2011 +0200
+++ b/web/history.jsp	Sat May 07 06:44:23 2011 +0200
@@ -1,4 +1,6 @@
 <%-- 
+$Id$
+
 CDDL HEADER START
 
 The contents of this file are subject to the terms of the
@@ -19,187 +21,199 @@
 Copyright 2005 Sun Microsystems, Inc.  All rights reserved.
 Use is subject to license terms.
 
-ident	"@(#)history.jsp 1.1     05/11/11 SMI"
+Portions Copyright 2011 Jens Elkner.
 
---%><%@ page import = "javax.servlet.*,
-java.lang.*,
-javax.servlet.http.*,
-java.util.*,
-java.io.*,
-java.text.*,  
-org.opensolaris.opengrok.analysis.*,
-org.opensolaris.opengrok.web.*,
-org.opensolaris.opengrok.history.*,
-java.util.regex.*
-"
-%><%@include file="mast.jsp"%><% String hcontext = request.getContextPath(); %>
-<script type="text/javascript">
-// <![CDATA[
-function toggle_filelist() {
-  $("span").each(function() {
-     if (this.className == "filelist") {
-       this.setAttribute("style", "display: none;");
-       this.className = "filelist-hidden";
-     } else if (this.className == "filelist-hidden") {
-       this.setAttribute("style", "display: inline;");
-       this.className = "filelist";
-     }
-    }
-    );
+--%><%@page import="
+java.text.Format,
+java.text.SimpleDateFormat,
+java.util.Date,
+java.util.Set,
+java.util.regex.Pattern,
+
+org.opensolaris.opengrok.history.History,
+org.opensolaris.opengrok.history.HistoryEntry,
+org.opensolaris.opengrok.history.HistoryException,
+org.opensolaris.opengrok.configuration.RuntimeEnvironment"
+%><%@
+
+include file="mast.jsp"
+
+%><%/* ---------------------- history.jsp start --------------------- */
+{
+	PageConfig cfg = PageConfig.get(request);
+	String path = cfg.getPath();
+	
+	if (path.length() > 0) {
+		String context = request.getContextPath();
+		RuntimeEnvironment env = cfg.getEnv();
+		String uriEncodedName = cfg.getUriEncodedPath();
+
+		boolean striked = false;
+		String userPage = env.getUserPage();
+		String bugPage = env.getBugPage();
+		String bugRegex = env.getBugPattern();
+		if (bugRegex == null || bugRegex.equals("")) {
+			bugRegex = "\\b([12456789][0-9]{6})\\b";
+		}
+		Pattern bugPattern = Pattern.compile(bugRegex);
+		String reviewPage = env.getReviewPage();
+		String reviewRegex = env.getReviewPattern();
+		if(reviewRegex == null || reviewRegex.equals("")) {
+			reviewRegex = "\\b(\\d{4}/\\d{3})\\b";
+		}
+		Pattern reviewPattern = Pattern.compile(reviewRegex);
+		Format df = new SimpleDateFormat("dd-MMM-yyyy");
+		File f = cfg.getResourceFile();
+		History hist=null;
+		try {
+			hist = HistoryGuru.getInstance().getHistory(f);
+		} catch (Exception e)    {
+			// should not happen
+			%><h3>Problem</h3><p class="error"><%= e.getMessage() %></p><%
+		}
+		if (hist != null) {
+%><script type="text/javascript">/* <![CDATA[ */
+document.domReady.push(function() {domReadyHistory();});
+/* ]]> */</script>
+<form action="<%= context + Prefix.DIFF_P + uriEncodedName %>">
+<table class="src" id="revisions">
+	<caption>History log of <a href="<%= context + Prefix.XREF_P 
+		+ uriEncodedName %>"><%= path %></a></caption>
+	<thead>
+		<tr>
+			<th>Revision</th><%
+			if (!cfg.isDir()) {
+			%>
+			<th><input type="submit" value=" Compare "/></th><%
+			}
+			%>
+			<th>Date</th>
+			<th>Author</th>
+			<th>Comments <%
+			if (hist.hasFileList()) {
+				%><a href="#" onclick="javascript: toggle_filelist(); return false;">
+					<span class="filelist-hidden">
+					(&lt;&lt;&lt; Hide modified files)</span>
+					<span class="filelist">
+					(Show modified files &gt;&gt;&gt;)</span></a><%
+			}
+			%>
+			</th>
+		</tr>
+	</thead>
+	<tbody>
+	<%
+			int count=0;
+			for (HistoryEntry entry : hist.getHistoryEntries()) {
+				String rev = entry.getRevision();
+				if (rev == null || rev.length() == 0) {
+					rev = "";
+				}
+	%>
+		<tr><%
+				if (cfg.isDir()) {
+			%>
+			<td><%= rev %></td><%
+				} else {
+					if (entry.isActive()) {
+						String rp = uriEncodedName;
+			%>
+			<td><a name="<%= rev %>" href="<%=
+				context + Prefix.XREF_P + rp + "?r=" + Util.URIEncode(rev) %>"><%=
+					rev %></a></td>
+			<td>
+				<input type="radio"<%
+						if (count == 0 ) {
+					%> disabled="disabled"<%
+						} else if (count == 1) {
+					%> checked="checked"<%
+						}
+					%> name="r1" value="<%= rp %>@<%= rev%>"/>
+				<input type="radio" 
+					name="r2"<%
+						if (count == 0) {
+					%> checked="checked"<%
+						}
+					%> value="<%= rp %>@<%= rev %>"/></td><%
+					} else {
+						striked = true;
+				%>
+			<td><del><%= rev %></del></td>
+			<td></td><%
+					}
+				}
+			%>
+			<td><%
+				Date date = entry.getDate();
+				if (date != null) {
+			%><%= df.format(date) %><%
+				}
+				%></td>
+			<td><%
+				String author = entry.getAuthor();
+				if (author == null) {
+				%>(no author)<%
+				} else if (userPage != null && userPage.length() > 0) {
+				%><a href="<%= userPage + Util.htmlize(author) 
+				%>"><%= Util.htmlize(author)%></a><%
+				} else {
+				%><%= author %><%
+				}
+				%></td>
+			<td><%
+				String cout = Util.htmlize(entry.getMessage());
+				if (bugPage != null && bugPage.length() > 0) {
+					cout = bugPattern.matcher(cout).replaceAll("<a href=\"" 
+						+ bugPage + "$1\">$1</a>");
+				}
+				if (reviewPage != null && reviewPage.length() > 0) {
+					cout = reviewPattern.matcher(cout).replaceAll("<a href=\""
+						+ reviewPage + "$1\">$1</a>");
+				}
+				%><%= cout %><%
+				Set<String> files = entry.getFiles();
+				if (files != null) {
+				%><span class="filelist-hidden"><br/><%
+					for (String ifile : files) {
+						String jfile = ifile;
+						if ("/".equals(path)) {
+							jfile = ifile.substring(1);
+						} else if (ifile.startsWith(path) 
+							&& ifile.length() > (path.length() + 1)) 
+						{
+							jfile = ifile.substring(path.length() + 1);
+						}
+						if (rev == "") {
+				%>
+<a class="h" href="<%= context + Prefix.XREF_P + ifile %>"><%= jfile %></a><br/><%
+						} else {
+				%>
+<a class="h" href="<%= context + Prefix.XREF_P + ifile %>?r=<%= rev %>"><%= jfile %></a><br/><%
+						}
+					}
+				%></span><%
+				}
+				%></td>
+		</tr><%
+				count++;
+			}
+		%>
+	</tbody>
+</table>
+</form><%
+			if (striked) {
+%><p><b>Note:</b> No associated file changes are available for 
+revisions with strike-through numbers (eg. <del>1.45</del>)</p><%
+			}
+%>
+<p class="rssbadge"><a href="<%=context + Prefix.RSS_P + uriEncodedName
+%>" title="RSS XML Feed of latest changes"><span id="rssi"></span></a></p><%
+		}
+	}
 }
+/* ---------------------- history.jsp end --------------------- */
+%><%@
 
-function togglediffs() {
-	var cr2 = false;
-	var cr1 = false;         
-        $("#revisions input[type=radio]").each(function() {           
-           if (this.name=="r1") { if (this.checked) {cr1=true;return true;};
-               if (cr2) { this.disabled = ''}
-               else {this.disabled = 'true'} }
-           else if (this.name=="r2") { if (this.checked) {cr2=true;return true;}
-               if (!cr1) { this.disabled = ''}
-               else {this.disabled = 'true'} }
-           }        
-    );
-}
+include file="foot.jspf"
 
-$(document).ready(function(){
-    // start state should ALWAYS be: first row: r1 hidden, r2 checked ; second row: r1 clicked, (r2 hidden)(optionally)
-    // I cannot say what will happen if they are not like that, togglediffs will go mad !
-    $("#revisions input[type=radio]").bind("click",togglediffs);
-    togglediffs();
-});
-
-// ]]>
-</script><%
-if (path.length() > 0 && valid) {
-    boolean striked = false;
-    String userPage = environment.getUserPage();
-    String bugPage = environment.getBugPage();
-    String bugRegex = environment.getBugPattern();
-    if(bugRegex == null || bugRegex.equals("")) {
-        bugRegex = "\\b([12456789][0-9]{6})\\b";
-    }
-    Pattern bugPattern = Pattern.compile(bugRegex);
-    String reviewPage = environment.getReviewPage();
-    String reviewRegex = environment.getReviewPattern();
-    if(reviewRegex == null || reviewRegex.equals("")) {
-        reviewRegex = "\\b(\\d{4}/\\d{3})\\b";
-    }
-    Pattern reviewPattern = Pattern.compile(reviewRegex);
-    Format df = new SimpleDateFormat("dd-MMM-yyyy");
-    Date tstart = new Date();
-    File f = new File(rawSource + path);
-    if (!HistoryGuru.getInstance().hasHistory(f)) {
-        response.sendError(404, "No history");
-        return;        
-    }
-    History hist=null;
-    try {
-    hist = HistoryGuru.getInstance().getHistory(f);
-    } catch (Exception e)    {
-        %>Problem: <%=e.getMessage()%><%
-    }
-    if (hist == null) {
-    //    response.sendError(404, "No history");
-        %><%@include file="foot.jspf"%><%
-        return;
-    }
-    
-%><form action="<%=context +Constants.diffP+ uriEncodedName%>">
-<table cellspacing="0" cellpadding="2" border="0" width="100%" class="src" id="revisions">
-<tr>
-    <td colspan="5"><span class="pagetitle">History log of <a href="<%= context +Constants.xrefP+ uriEncodedName %>"><%=path%></a></span></td>
-</tr>
-<tr class="thead">
-    <td>Revision</td><%
-    if (!isDir) {
-        %><th><input type="submit" value=" Compare "/></th><%
-    }
-    %><td>Date</td><td>Author</td><td>Comments<%
-    if (hist.hasFileList()) {
-      %> <a href="#" onclick="javascript: toggle_filelist(); return false;">
-      <span class="filelist-hidden" style="display: none;">
-        (&lt;&lt;&lt; Hide modified files)
-      </span>
-      <span class="filelist" style="display: inline;">
-        (Show modified files &gt;&gt;&gt;)
-      </span>
-      </a><%
-    }
-    %></td>
-</tr><%
-boolean alt = true;int count=0;
-for (HistoryEntry entry : hist.getHistoryEntries()) {
-    String rev = entry.getRevision();
-    if (rev == null || rev.length() == 0) {
-        rev = "";
-    }
-    alt = !alt;
-    %><tr  valign="top" <%= alt ?  "class=\"alt\"" : "" %>><%
-    if (isDir) {
-    %><td>&nbsp;<%=rev%>&nbsp;</td><%
-    } else {
-        if (entry.isActive()) {
-            String rp = uriEncodedName;
-%><td>&nbsp;<a name="<%=rev%>" href="<%= context +Constants.xrefP + rp + "?r=" + Util.URIEncode(rev) %>"><%=rev%></a>&nbsp;</td><td align="center">
-    <input type="radio" <% if (count==0) {%>disabled="disabled"<% } else if (count==1) {%>checked="checked"<%} %> name="r1" value="<%=rp%>@<%=rev%>"/>
-    <input type="radio" name="r2" <% if (count==0) {%>checked="checked"<% } %> value="<%=rp%>@<%=rev%>"/></td><%
-        } else {
-            striked = true;
-  %><td><strike>&nbsp;<%=rev%>&nbsp; </strike></td><td>&nbsp;</td><%
-        }
-}
-%><td><% 
-        Date date = entry.getDate();
-        if (date != null) {
-            %><%=df.format(date)%><%
-        } else {
-            %>&nbsp;<%
-        }
-%>&nbsp;</td>
-<td>
-<%
-
-String author = entry.getAuthor();
-if (author == null) {
-        %>(no author)<%
-} else if (userPage != null && ! userPage.equals("")) {
-        %><a href="<%= userPage + Util.htmlize(author) %>"><%= Util.htmlize(author) %></a><%
-} else {
-        %><%= author %><%
-}
-
-%>&nbsp;</td><td><%
-String cout=Util.htmlize(entry.getMessage());
-if (bugPage != null && ! bugPage.equals("")){
-        cout=bugPattern.matcher(cout).replaceAll("<a href=\"" + bugPage + "$1\">$1</a>"); }
-if (reviewPage != null && ! reviewPage.equals("")) {
-    cout=reviewPattern.matcher(cout).replaceAll("<a href=\"" + reviewPage + "$1\">$1</a>"); }
-	%><%= cout  %>
-<%
-Set<String> files = entry.getFiles();
-if(files != null) {%><span class="filelist-hidden" style="display: none;"><br/><%
-    for (String ifile : files) {
-        String jfile = ifile;
-        if ("/".equals(path)) {
-            jfile = ifile.substring(1);
-        } else if (ifile.startsWith(path) && ifile.length() > (path.length()+1)) {
-            jfile = ifile.substring(path.length()+1);
-        }
-        if (rev == "") {
-            %><a class="h" href="<%=context +Constants.xrefP+ ifile%>"><%=jfile%></a><br/><%
-        } else {
-            %><a class="h" href="<%=context +Constants.xrefP+ ifile%>?r=<%=rev%>"><%=jfile%></a><br/><%
-        }
-    }%></span><%
-}
-%></td></tr><%
-count++;
-}
-	%></table></form><%
-        if(striked) {
-            %><p><b>Note:</b> No associated file changes are available for revisions with strike-through numbers (eg. <strike>1.45</strike>)</p><%
-        }
-        %><p class="rssbadge"><a href="<%=context+Constants.rssP+uriEncodedName%>"><img src="<%=context%>/<%=environment.getWebappLAF()%>/img/rss.png" width="80" height="15" alt="RSS XML Feed" title="RSS XML Feed of latest changes"/></a></p><%
-}
-%><%@include file="foot.jspf"%>
+%>
\ No newline at end of file
diff -r 09f0768a7ec1 web/httpheader.jspf
--- a/web/httpheader.jspf	Fri May 06 21:41:59 2011 +0200
+++ b/web/httpheader.jspf	Sat May 07 06:44:23 2011 +0200
@@ -1,4 +1,6 @@
-<%-- 
+<%--
+$Id$
+ 
 CDDL HEADER START
 
 The contents of this file are subject to the terms of the
@@ -19,29 +21,63 @@
 Copyright 2007 Sun Microsystems, Inc.  All rights reserved.
 Use is subject to license terms.
 
---%><%@ page import="org.opensolaris.opengrok.configuration.*,org.opensolaris.opengrok.web.Util"
-contentType="text/html; charset=UTF-8"
-pageEncoding="UTF-8"
+Portions Copyright 2011 Jens Elkner.
+
+--%><%-- 
+
+All pages, which include this fragment should use the following code snippet
+to set the title of the document before the include directive for this fragment:
+<pre>
+
+	cfg = PageConfig.get(request);
+	cfg.setTitle("your title");
+
+</pre>
+--%><%@page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8" import="
+org.opensolaris.opengrok.Info,
+org.opensolaris.opengrok.web.PageConfig"
+%><%@
+
+include file="pageconfig.jspf"
+
 %><%
-String laf = environment.getWebappLAF();
-%><%-- String server="http://"+request.getServerName()+":"+request.getServerPort();
- <base href="<%=server+httpHeaderContext%>/"/>
- --%><%
-String httpHeaderContext = request.getContextPath();
+/* ---------------------- httpheader.jsp start --------------------- */
+{
+	cfg = PageConfig.get(request);
+	String styleDir = cfg.getCssDir();
+	String ctxPath = request.getContextPath();
+	String dstyle = styleDir + '/' + "style.css";
+	String pstyle = styleDir + '/' + "print.css";
 %><?xml version="1.0" encoding="UTF-8"?>
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" 
+	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
 <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
 <head>
-    <meta name="robots" content="noindex,nofollow"/>    
-    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
-    <meta name="generator" content="<%=org.opensolaris.opengrok.Info.getVersion()%> (<%=org.opensolaris.opengrok.Info.getRevision()%>)"/>
-    <link rel="icon" href="<%=httpHeaderContext%>/<%=laf%>/img/icon.png" type="image/png"/>    
-    <link rel="stylesheet" type="text/css" href="<%=httpHeaderContext%>/<%=laf%>/style.css?v=<%=Util.versionParameter()%>"/>
-    <link rel="stylesheet" type="text/css" href="<%=httpHeaderContext%>/<%=laf%>/print.css?v=<%=Util.versionParameter()%>" media="print" />
-    <%-- TODO  Bug 11749 <link rel="stylesheet" type="text/css" href="<%=httpHeaderContext%>/<%=laf%>/jquery.autocomplete.css?v=<%=Util.versionParameter()%>" /> --%>
-    <link rel="stylesheet" type="text/css" href="<%=httpHeaderContext%>/<%=laf%>/jquery.tooltip.css?v=<%=Util.versionParameter()%>" />
-    <%-- TODO  Bug 11749 <link rel="stylesheet" type="text/css" href="<%=httpHeaderContext%>/<%=laf%>/jquery.combo.css?v=<%=Util.versionParameter()%>" />--%>
-    <link rel="alternate stylesheet" type="text/css" media="all" title="Paper White" href="<%=httpHeaderContext%>/<%=laf%>/print.css?v=<%=Util.versionParameter()%>"/>
-    <link rel="search" href="<%=httpHeaderContext%>/opensearch" type="application/opensearchdescription+xml" title="OpenGrok Search for current project(s)" />
-    <title><%=pageTitle%></title>
-</head>
+<meta name="robots" content="noindex,nofollow" />
+<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
+<meta name="generator" content="<%=Info.getVersion()%> (<%=Info.getRevision()%>)" />
+<link rel="icon" href="<%=styleDir%>/img/icon.png" type="image/png" />
+<link rel="stylesheet" type="text/css" media="all" 
+	title="Default" href="<%= dstyle %>" />
+<link rel="alternate stylesheet" type="text/css" media="all"
+	title="Paper White" href="<%= pstyle %>" />
+<link rel="stylesheet" type="text/css" href="<%=styleDir%>/print.css" media="print" />
+<link rel="stylesheet" type="text/css" href="<%=styleDir%>/jquery.tooltip.css" />
+<%-- TODO  Bug 11749
+	<link rel="stylesheet" type="text/css" href="<%=styleDir%>/jquery.autocomplete.css" />
+	<link rel="stylesheet" type="text/css" href="<%=styleDir%>/jquery.combo.css%>" />
+--%>
+<link rel="search" href="<%=ctxPath%>/opensearch"
+	type="application/opensearchdescription+xml"
+	title="OpenGrok Search for current project(s)" />
+<script type="text/javascript" src="<%=ctxPath%>/jquery-1.4.4.min.js"></script>
+<script type="text/javascript" src="<%=ctxPath%>/jquery.tooltip-1.3.pack.js"></script>
+<script type="text/javascript" src="<%=ctxPath%>/jquery.autocomplete-1.1.pack.js"></script>
+<script type="text/javascript" src="<%=ctxPath%>/utils.js"></script>
+<title><%=cfg.getTitle()%></title><% 
+	out.write(cfg.getHeaderData());
+%>
+</head><%
+}
+/* ---------------------- httpheader.jsp end --------------------- */
+%>
\ No newline at end of file
diff -r 09f0768a7ec1 web/index.jsp
--- a/web/index.jsp	Fri May 06 21:41:59 2011 +0200
+++ b/web/index.jsp	Sat May 07 06:44:23 2011 +0200
@@ -19,30 +19,45 @@
 Copyright 2005 Sun Microsystems, Inc.  All rights reserved.
 Use is subject to license terms.
 
---%><%@ page import = "java.util.List,
-javax.servlet.*,
-javax.servlet.http.*,
-org.opensolaris.opengrok.configuration.RuntimeEnvironment,
-org.opensolaris.opengrok.configuration.Project,
-org.opensolaris.opengrok.web.*"
- session="false" errorPage="error.jsp" %><%@ include file="projects.jspf" %><%
-String q = null;
-String defs = null;
-String refs = null;
-String hist = null;
-String path = null;
-String sort = null;
-RuntimeEnvironment environment = RuntimeEnvironment.getInstance();
-String pageTitle = "Search";
- %><%@ include file="httpheader.jspf" %>
-<body>
-<div id="page">
-<div id="header"><%@ include file="pageheader.jspf" %></div>
-<div id="Masthead"></div>
-<div id="bar">
-<%@ include file="menu.jspf" %>
-</div>
-<div id="results" style="font-size:100%">
-<%@ include file="index_body.html" %>
-</div>
-<%@include file="foot.jspf"%>
+Portions Copyright 2011 Jens Elkner.
+--%><%@ page session="false" errorPage="error.jsp" %><%@ 
+
+include file="projects.jspf"
+
+%><%
+/* ---------------------- index.jsp start --------------------- */
+{
+	cfg = PageConfig.get(request);
+	cfg.setTitle("Search");
+%><%@
+
+include file="httpheader.jspf"
+
+%><body>
+	<div id="page">
+		<div id="whole_header">
+			<div id="header"><%@
+
+include file="pageheader.jspf"
+
+			%></div>
+			<div id="Masthead"></div>
+			<div id="sbar"><%@
+
+include file="menu.jspf"
+
+			%></div>
+		</div>
+		<div id="results"><%@
+
+include file="index_body.html"
+
+		%></div>
+<%
+}
+/* ---------------------- index.jsp end --------------------- */
+%><%@
+
+include file="foot.jspf"
+
+%>
\ No newline at end of file
diff -r 09f0768a7ec1 web/index_body.html
--- a/web/index_body.html	Fri May 06 21:41:59 2011 +0200
+++ b/web/index_body.html	Sat May 07 06:44:23 2011 +0200
@@ -1,21 +1,24 @@
-    <p>
-        <b>OpenGrok - a "wicked fast" source browser!</b>
-    </p>
-    <p>
-        This is the front page of of your <a href="xref/">browsable and searchable
-    source tree</a> (<a href="xref/">xref/</a>).</p>
-    <p>
-        To setup and configure OpenGrok please refer to 
-        <a href="http://www.opensolaris.org/os/project/opengrok/">http://www.opensolaris.org/os/project/opengrok/</a>
-        or README.txt in the distribution.
-    </p>
-    <p>
-        You can replace this block of text(in index_body.html) with some more useful
-        information about your source tree and its organization, with direct 
-        links to key parts of code base.
-    </p>
-    <br/>
-    <br/>
-    <br/>
-    <br/>
-    <br/>
+<p>
+<b>OpenGrok - a "wicked fast" source browser!</b></p>
+
+<p>
+This is the front page of your <a 
+href="xref/">browsable and searchable source tree</a> (<a 
+href="xref/">xref/</a>).</p>
+
+<p>
+To setup and configure OpenGrok please refer to <a 
+href="http://www.opensolaris.org/os/project/opengrok/"
+>http://www.opensolaris.org/os/project/opengrok/</a> or README.txt in the 
+distribution.</p>
+
+<p>
+You can replace this block of text (in index_body.html) with some more useful
+information about your source tree and its organization, with direct 
+links to key parts of code base.
+</p>
+<br/>
+<br/>
+<br/>
+<br/>
+<br/>
\ No newline at end of file
diff -r 09f0768a7ec1 web/list.jsp
--- a/web/list.jsp	Fri May 06 21:41:59 2011 +0200
+++ b/web/list.jsp	Sat May 07 06:44:23 2011 +0200
@@ -1,4 +1,6 @@
 <%--
+$Id$
+
 CDDL HEADER START
 
 The contents of this file are subject to the terms of the
@@ -17,446 +19,258 @@
 CDDL HEADER END
 
 Copyright (c) 2005, 2010, Oracle and/or its affiliates. All rights reserved.
---%><%@ page import = "javax.servlet.*,
-java.lang.*,
-javax.servlet.http.*,
-java.util.*,
-java.io.*,
+Portions Copyright 2011 Jens Elkner.
+
+--%><%@page import="
+java.io.BufferedInputStream,
+java.io.BufferedReader,
+java.io.FileInputStream,
+java.io.FileReader,
+java.io.InputStream,
+java.io.InputStreamReader,
+java.io.Reader,
+java.util.ArrayList,
+java.util.Arrays,
+java.util.List,
+java.util.Set,
+java.util.logging.Level,
 java.util.zip.GZIPInputStream,
-java.util.logging.Level,
+
 org.opensolaris.opengrok.OpenGrokLogger,
-org.opensolaris.opengrok.analysis.*,
-org.opensolaris.opengrok.configuration.Project,
-org.opensolaris.opengrok.index.*,
+org.opensolaris.opengrok.analysis.AnalyzerGuru,
 org.opensolaris.opengrok.analysis.Definitions,
 org.opensolaris.opengrok.analysis.FileAnalyzer.Genre,
-org.opensolaris.opengrok.web.*,
-org.opensolaris.opengrok.history.*
-"
-%><%@include file="mast.jsp"%>
-<% if (!isDir) { %>
-<script type="text/javascript">/* <![CDATA[ */
-function lntoggle() {
-   $("a").each(function() {
-      if (this.className == 'l' || this.className == 'hl') {
-         this.className=this.className+'-hide';
-         this.setAttribute("tmp", this.innerHTML);
-         this.innerHTML='';
-      }
-      else if (this.className == 'l-hide' || this.className == 'hl-hide') {
-          this.innerHTML=this.getAttribute("tmp");
-          this.className=this.className.substr(0,this.className.indexOf('-'));
-      }
-     }
-    );
+org.opensolaris.opengrok.analysis.FileAnalyzerFactory,
+org.opensolaris.opengrok.history.Annotation,
+org.opensolaris.opengrok.index.IndexDatabase,
+org.opensolaris.opengrok.web.DirectoryListing"
+%><% 
+{
+	// need to set it here since requesting parameters
+	if (request.getCharacterEncoding() == null) {
+		request.setCharacterEncoding("UTF-8");
+	}
+	cfg = PageConfig.get(request);
+	Annotation annotation = cfg.getAnnotation();
+	if (annotation != null) {
+		int r = annotation.getWidestRevision();
+		int a = annotation.getWidestAuthor();
+		cfg.addHeaderData("<style type=\"text/css\">"
+			+ ".blame .r { width: " + (r == 0 ? 6 : r) + "ex; } "
+			+ ".blame .a { width: " + (a == 0 ? 6 : a) + "ex; } "
+			+ "</style>");
+	}
 }
+%><%@include 
 
-function get_sym_list_contents()
+file="mast.jsp"
+
+%><script type="text/javascript">/* <![CDATA[ */
+document.pageReady.push(function() { pageReadyList();});
+/* ]]> */</script>
+<%
+/* ---------------------- list.jsp start --------------------- */
 {
-    var contents = "";
+	cfg = PageConfig.get(request);
+	String rev = cfg.getRequestedRevision();
+	
+	File resourceFile = cfg.getResourceFile();
+	String path = cfg.getPath();
+	String basename = resourceFile.getName();
+	String rawPath = request.getContextPath() + Prefix.RAW_P + path;
+	Reader r = null;
+	if (cfg.isDir()) {
+		// valid resource is requested
+		// mast.jsp assures, that resourceFile is valid and not /
+		// see cfg.resourceNotAvailable()
+		Project activeProject = Project.getProject(resourceFile);
+		String cookieValue = cfg.getRequestedProjectsAsString();
+		if (activeProject != null) {
+			Set<String>  projects = cfg.getRequestedProjects();
+			if (!projects.contains(activeProject.getDescription())) {
+				projects.add(activeProject.getDescription());
+				// update cookie
+				cookieValue = cookieValue.length() == 0 
+					? activeProject.getDescription()
+					: activeProject.getDescription() + '/' + cookieValue;
+				Cookie cookie = new Cookie("OpenGrokProject", cookieValue);
+				// TODO hmmm, projects.jspf doesn't set a path
+				cookie.setPath(request.getContextPath() + '/');
+				response.addCookie(cookie);
+			}
+		}
+		// requesting a directory listing
+		DirectoryListing dl = new DirectoryListing(cfg.getEftarReader());
+		String[] files = cfg.getResourceFileList();
+		if (files.length != 0) {
+			List<String> readMes = dl.listTo(resourceFile, out, path, files);
+			File[] catfiles = cfg.findDataFiles(readMes);
+			for (int i=0; i < catfiles.length; i++) {
+				if (catfiles[i] == null) {
+					continue;
+				}
+%><h3><%= readMes.get(i) %></h3>
+<div id="src">
+	<pre><%
+				Util.dump(out, catfiles[i], catfiles[i].getName().endsWith(".gz"));
+	%></pre>
+</div><%
+			}
+		}
+	} else if (rev.length() != 0) {
+		// requesting a previous revision
+		FileAnalyzerFactory a = AnalyzerGuru.find(basename);
+		Genre g = AnalyzerGuru.getGenre(a);
+		String error = null;
+		if (g == Genre.PLAIN|| g == Genre.HTML || g == null) {
+			InputStream in = null;
+			try {
+				in = HistoryGuru.getInstance()
+					.getRevision(resourceFile.getParent(), basename, rev.substring(2));
+			} catch (Exception e) {
+				// fall through to error message
+				error = e.getMessage();
+			}
+			if (in != null) {
+				try {
+					if (g == null) {
+						a = AnalyzerGuru.find(in);
+						g = AnalyzerGuru.getGenre(a);
+					}
+					if (g == Genre.DATA || g == Genre.XREFABLE 
+						|| g == null) 
+					{
+%>
+<div id="src">
+	Binary file [Click <a href="<%= rawPath %>?<%= rev 
+		%>">here</a> to download] 
+</div><%
+					} else {
+%>
+<div id="src">
+	<span class="pagetitle"><%= basename %> revision <%= 
+		rev.substring(2) %></span>
+	<pre><%
+						if (g == Genre.PLAIN) {
+							// We don't have any way to get definitions
+							// for old revisions currently.
+							Definitions defs = null;
+							Annotation annotation = cfg.getAnnotation();
+							//not needed yet
+							//annotation.writeTooltipMap(out);
+							r = new InputStreamReader(in);
+							AnalyzerGuru.writeXref(a, r, out, defs, 
+								annotation, Project.getProject(resourceFile));
+						} else if (g == Genre.IMAGE) {
+	%></pre>
+	<img src="<%= rawPath %>?<%= rev %>"/>
+	<pre><%
+						} else if (g == Genre.HTML) {
+							r = new InputStreamReader(in);
+							Util.dump(out, r);
+						} else {
+		%> Click <a href="<%= rawPath %>?<%= rev %>">download <%= basename %></a><%
+						}
+					}
+				} catch (IOException e) {
+					error = e.getMessage();
+				} finally {
+					if (r != null) {
+						try { r.close(); in = null;} 
+						catch (Exception e) { /* ignore */ }
+					}
+					if (in != null) {
+						try { in.close(); }
+						catch (Exception e) { /* ignore */ }
+					}
+				}
+	%></pre>
+</div><%
+			} else {
+%>
+<h3 class="error">Error reading file</h3><%
+				if (error != null) {
+%>
+<p class="error"><%= error %></p><%
+				}
+			}
+		} else if (g == Genre.IMAGE) {
+%>
+<div id="src">
+	<img src="<%= rawPath %>?<%= rev %>"/>
+</div><%
+		} else {
+%>
+<div id="src">
+	Binary file [Click <a href="<%= rawPath %>?<%= rev 
+		%>">here</a> to download] 
+</div><%
+		}
+	} else {
+		// requesting cross referenced file
+		File xrefFile = null;
+		if (!cfg.annotate()) {
+			xrefFile = cfg.findDataFile();
+		}
+		if (xrefFile != null) {
+%>
+<div id="src">
+	<pre><%
+			Util.dump(out, xrefFile, xrefFile.getName().endsWith(".gz"));
+	%></pre>
+</div><%
+		} else {
+			// annotate
+			BufferedInputStream bin = 
+				new BufferedInputStream(new FileInputStream(resourceFile));
+			try {
+				FileAnalyzerFactory a = AnalyzerGuru.find(basename);
+				Genre g = AnalyzerGuru.getGenre(a);
+				if (g == null) {
+					a = AnalyzerGuru.find(bin);
+					g = AnalyzerGuru.getGenre(a);
+				}
+				if (g == Genre.IMAGE) {
+%>
+<div id="src">
+	<img src="<%= rawPath %>"/>
+</div><%
+				} else if ( g == Genre.HTML) {
+					r = new InputStreamReader(bin);
+					Util.dump(out, r);
+				} else if (g == Genre.PLAIN) {
+%>
+<div id="src">
+	<pre><%
+					// We're generating xref for the latest revision, so we can
+					// find the definitions in the index.
+					Definitions defs = IndexDatabase.getDefinitions(resourceFile);
+					Annotation annotation = cfg.getAnnotation();
+					r = new InputStreamReader(bin);
+					AnalyzerGuru.writeXref(a, r, out, defs, annotation, 
+						Project.getProject(resourceFile));
+	%></pre>
+</div><%
+				} else {
+%>
+Click <a href="<%= rawPath %>">download <%= basename %></a><%
+				}
+			} finally {
+				if (r != null) {
+					try { r.close(); bin = null; } 
+					catch (Exception e) { /* ignore */ }
+				}
+				if (bin != null) {
+					try { bin.close(); }
+					catch (Exception e) { /* ignore */ }
+				}
+			}
+		}
+	}
+}
+/* ---------------------- list.jsp end --------------------- */
+%><%@
 
-    //contents += "<input id=\"input_highlight\" name=\"input_highlight\" class=\"q\"/>";
-    //contents += "&nbsp;&nbsp;";
-    //contents += "<b><a href=\"#\" onclick=\"javascript:add_highlight();return false;\" title=\"Add highlight\">Highlight</a></b><br>";
-    contents += "<a href=\"#\" onclick=\"javascript:lsttoggle();\">[Close]</a><br>"
+include file="foot.jspf"
 
-    var symbol_classes = get_sym_list();
-    for (var i = 0; i < symbol_classes.length; i++) {
-        if (i > 0) {
-            contents += "<br/>";
-        }
-        var symbol_class = symbol_classes[i];
-        contents += "<b>" + symbol_class[0] + "</b><br/>";
-
-        var class_name = symbol_class[1];
-
-        var symbols = symbol_class[2];
-
-        for (var j = 0; j < symbols.length; j++) {
-            var symbol = symbols[j][0];
-            var line = symbols[j][1];
-            contents +=
-                "<a href=\"#" + line + "\" class=\"" + class_name + "\">" +
-                escape_html(symbol) + "</a><br/>";
-        }
-    }
-
-    return contents;
-}
-
-function escape_html(string) {
-    return string
-        .replace("&", "&amp;")
-        .replace("<", "&lt;")
-        .replace(">", "&gt;");
-}
-
-// Initial value
-document.sym_div_width = 240;
-document.sym_div_height_max = 480;
-document.sym_div_top = 100;
-document.sym_div_left_margin = 40;
-document.sym_div_height_margin = 40;
-
-function get_sym_div_left()
-{
-    document.sym_div_left = $(window).width() - (document.sym_div_width + document.sym_div_left_margin);
-    return document.sym_div_left;
-}
-
-function get_sym_div_height()
-{
-    document.sym_div_height = $(window).height() - document.sym_div_top - document.sym_div_height_margin;
-
-    if (document.sym_div_height > document.sym_div_height_max)
-        document.sym_div_height = document.sym_div_height_max;
-
-    return document.sym_div_height;
-}
-
-function get_sym_div_top()
-{
-    return document.sym_div_top;
-}
-
-function get_sym_div_width()
-{
-    return document.sym_div_width;
-}
-
-function lsttoggle()
-{
-    if (document.sym_div == null)
-    {
-        document.sym_div = document.createElement("div");
-        document.sym_div.id = "sym_div";
-
-        document.sym_div.className = "sym_list_style";
-        document.sym_div.style.margin = "0px auto";
-        document.sym_div.style.width = get_sym_div_width() + "px";
-        document.sym_div.style.height = get_sym_div_height() + "px";
-        document.sym_div.style.top = get_sym_div_top() + "px";
-        document.sym_div.style.left = get_sym_div_left() + "px";
-
-        document.sym_div.innerHTML = get_sym_list_contents();
-
-        document.body.appendChild(document.sym_div);
-        document.sym_div_shown = 1;
-    }
-    else
-    {
-        if (document.sym_div_shown == 1)
-        {
-            document.sym_div.className = "sym_list_style_hide";
-            document.sym_div_shown = 0;
-        }
-        else
-        {
-            document.sym_div.style.height = get_sym_div_height() + "px";
-            document.sym_div.style.width = get_sym_div_width() + "px";
-            document.sym_div.style.top = get_sym_div_top() + "px";
-            document.sym_div.style.left = get_sym_div_left() + "px";
-            document.sym_div.className = "sym_list_style";
-            document.sym_div_shown = 1;
-        }
-    }
-}
-
-$(window).resize(
-    function()
-    {
-        if (document.sym_div_shown == 1)
-        {
-            document.sym_div.style.left = get_sym_div_left() + "px";
-            document.sym_div.style.height = get_sym_div_height() + "px";
-        }
-    }
-);
-
-// Highlighting
-/*
-// This will replace link's href contents as well, be careful
-function HighlightKeywordsFullText(keywords)
-{
-    var el = $("body");
-
-    $(keywords).each(
-        function()
-        {
-            var pattern = new RegExp("("+this+")", ["gi"]);
-            var rs = "<span style='background-color:#FFFF00;font-weight: bold;'>$1</span>";
-            el.html(el.html().replace(pattern, rs)); 
-        }
-    );
-}
-//HighlightKeywordsFullText(["nfstcpsock"]);
-*/
-
-document.highlight_count = 0;
-// This only changes matching tag's style
-function HighlightKeyword(keyword)
-{
-    var high_colors=[
-        "#ffff66",
-        "#ffcccc",
-        "#ccccff",
-        "#99ff99",
-        "#cc66ff"];
-
-    var pattern = "a:contains('" + keyword + "')";
-    $(pattern).css({
-        'text-decoration' : 'underline',
-        'background-color' : high_colors[document.highlight_count % high_colors.length],
-        'font-weight' : 'bold'
-    });
-
-    document.highlight_count++;
-}
-
-//HighlightKeyword('timeval');
-
-function add_highlight()
-{
-    var tbox = document.getElementById('input_highlight');
-    HighlightKeyword(tbox.value);
-}
-
-/* ]]> */
-</script>
-<% } %>
-<%
-String rev = null;
-if(!isDir && ef != null) {
-    try {
-        ef.close();
-    } catch (IOException e) {
-    }
-    ef = null;
-}
-
-if (valid) {
-    if (isDir) {
-
-        // verify that the current path is part of the selected project
-        Project activeProject = Project.getProject(resourceFile);
-//TODO: somehow integrate below with projects.jspf
-        if (activeProject != null) {
-            final List<String> project = new ArrayList<String>();
-
-            Cookie[] cookies = request.getCookies();
-            if (cookies != null) {
-             for (Cookie cookie : cookies) {
-                if (cookie.getName().equals("OpenGrokProject")) {
-                    for (String proj : cookie.getValue().split(",")) {
-                        if (proj != "") {
-                            if (Project.getByDescription(proj) != null) {
-                            project.add(proj);
-                            }
-                        }
-                    }
-                }
-             }
-            }
-
-            boolean found = false;
-            for (String proj : project) {
-                if (activeProject.getDescription().equalsIgnoreCase(proj)) {
-                    found = true;
-                    break;
-                }
-            }
-// set this in case there is no project selected or current cookie doesn't contain current project from the link, so the rest of search works 100% :)
-            if (!found) {
-             StringBuffer sproject=new StringBuffer(activeProject.getDescription()+",");
-             if (project!=null) {
-                //only save found projects into cookies
-                for (Iterator it = project.iterator(); it.hasNext();) {
-                  sproject.append((String)it.next()+",");
-                }
-             }
-             // update the cookie
-             Cookie cookie = new Cookie("OpenGrokProject", sproject.toString());
-             cookie.setPath(context + "/");
-             response.addCookie(cookie);
-            }
-        }
-
-        // If requesting a Directory listing -------------
-        DirectoryListing dl = new DirectoryListing(ef);
-        String[] files = resourceFile.list();
-        if (files != null) {
-            Arrays.sort(files, String.CASE_INSENSITIVE_ORDER);
-            List<String> readMes = dl.listTo(resourceFile, out, path, files);
-            if(readMes != null && readMes.size() > 0) {
-                File xdir = new File(environment.getDataRootPath() + Constants.xrefP + path);
-                if (xdir.exists() && xdir.isDirectory()) {
-                    char[] buf = new char[8192];
-                    for (String readme : readMes) {
-                      File readmeFile = new File(xdir, readme + ".gz");
-                      Reader br = null;
-                      try {
-                        if (environment.isCompressXref() && readmeFile.exists()) {
-                          br = new InputStreamReader(new GZIPInputStream(new FileInputStream(readmeFile)));
-                        } else {
-                          readmeFile = new File(xdir, readme);
-                          if (readmeFile.exists()) {
-                            br = new FileReader(readmeFile);
-                          }
-                        }
-
-                        if (br != null) {
-                          int len = 0;
-                          %><h3><%=readme%></h3><div id="src"><pre><%
-                          while((len = br.read(buf)) > 0) {
-                              out.write(buf, 0, len);
-                          }
-                          %></pre></div><%
-                        }
-                      } catch(IOException e) {
-                        OpenGrokLogger.getLogger().log(Level.WARNING, "An error occured while reading/writing readme:", e);
-                      } finally {
-                        if (br != null) {
-                          try {
-                            br.close();
-                          } catch (IOException e) {
-                            OpenGrokLogger.getLogger().log(Level.WARNING, "An error occured while closing file:", e);
-                          }
-                        }
-                      }
-                    }
-                }
-            }
-        }
-    } else if ((rev = request.getParameter("r")) != null && !rev.equals("")) {
-        // Else if requesting a previous revision -------------
-        if (noHistory) {
-            response.sendError(404, "Revision not found");
-        } else {
-            FileAnalyzerFactory a = AnalyzerGuru.find(basename);
-            Genre g = AnalyzerGuru.getGenre(a);
-            if (g == Genre.PLAIN|| g == Genre.HTML || g == null) {
-                InputStream in = null;
-                try {
-                    in = HistoryGuru.getInstance().getRevision(resourceFile.getParent(), basename, rev);
-                } catch (Exception e) {
-                    response.sendError(404, "Revision not found");
-                    return;
-                }
-                if (in != null) {
-                    try {
-                        if (g == null) {
-                            a = AnalyzerGuru.find(in);
-                            g = AnalyzerGuru.getGenre(a);
-                        }
-                        if (g == Genre.DATA || g == Genre.XREFABLE || g == null) {
-		            %><div id="src">Binary file [Click <a href="<%=context%>/raw<%=path%>?r=<%=rev%>">here</a> to download] </div><%
-                        } else {
-		            %><div id="src"><span class="pagetitle"><%=basename%> revision <%=rev%> </span><pre><%
-                            if (g == Genre.PLAIN) {
-                                // We don't have any way to get definitions
-                                // for old revisions currently.
-                                Definitions defs = null;
-                                Annotation annotation = annotate ? HistoryGuru.getInstance().annotate(resourceFile, rev) : null;
-                                //annotation.writeTooltipMap(out); //not needed yet
-                                Reader r = new InputStreamReader(in);
-                                AnalyzerGuru.writeXref(a, r, out, defs, annotation, Project.getProject(resourceFile));
-                            } else if (g == Genre.IMAGE) {
-			       %><img src="<%=context+Constants.rawP+path%>?r=<%=rev%>"/><%
-                            } else if (g == Genre.HTML) {
-                               char[] buf = new char[8192];
-                               Reader br = new InputStreamReader(in);
-                               int len = 0;
-                               while((len = br.read(buf)) > 0) {
-                                   out.write(buf, 0, len);
-                               }
-                            } else {
-		               %> Click <a href="<%=context+Constants.rawP+path%>?r=<%=rev%>">download <%=basename%></a><%
-                            }
-                        }
-                    } catch (IOException e) {
-                        %> <h3 class="error">IO Error</h3> <p> <%=e.getMessage() %> </p> <%
-                    } finally {
-                    	in.close();
-                    }
-                    %></pre></div><%
-                    
-                } else {
-    	            %> <h3 class="error">Error reading file</h3> <%
-                }
-            } else if(g == Genre.IMAGE) {
-	        %><div id="src"><img src="<%=context+Constants.rawP+path%>?r=<%=rev%>"/></div><%
-            } else {
-                %><div id="src"> Binary file [Click <a href="<%=context+Constants.rawP+path%>?r=<%=rev%>">here</a> to download] </div><%
-            }
-        }
-    } else {
-        // requesting cross referenced file -------------
-        File xrefSource = new File(environment.getDataRootFile(), Constants.xrefP);
-        File xrefFile = new File(xrefSource, path + ".gz");
-        Reader fileReader = null;
-
-        if (environment.isCompressXref() ) {
-            if  (xrefFile.exists() && (resourceFile.lastModified() <= xrefFile.lastModified())) {
-                fileReader = new InputStreamReader(new GZIPInputStream(new FileInputStream(xrefFile)));
-            }
-        } else {            
-            xrefFile = new File(xrefSource, path);
-            if (xrefFile.exists() && (resourceFile.lastModified() <= xrefFile.lastModified())) {
-                fileReader = new FileReader(xrefFile);
-            }
-        }
-
-        if (fileReader != null && !annotate) {
-            char[] buf = new char[8192];
-            BufferedReader br = new BufferedReader(fileReader);
-            int len = 0;
-            %><div id="src"><pre><%
-            while((len = br.read(buf)) > 0) {
-                out.write(buf, 0, len);
-            }
-            %></pre></div><%
-            br.close();
-        } else {
-            BufferedInputStream bin = new BufferedInputStream(new FileInputStream(resourceFile));
-            try {
-	            FileAnalyzerFactory a = AnalyzerGuru.find(basename);
-	            Genre g = AnalyzerGuru.getGenre(a);
-	            if(g == null) {
-	                a = AnalyzerGuru.find(bin);
-	                g = AnalyzerGuru.getGenre(a);
-	            }
-	            if (g == Genre.IMAGE) {
-        	%><div id="src"><img src="<%=context+Constants.rawP+path%>"/></div><%
-	            } else if( g == Genre.HTML) {
-	                char[] buf = new char[8192];
-	                Reader br = new InputStreamReader(bin);
-	                int len = 0;
-	                while((len = br.read(buf)) > 0) {
-	                    out.write(buf, 0, len);
-	                }
-	            } else if(g == Genre.PLAIN) {
-	                %><div id="src"><pre><%
-                // We're generating xref for the latest revision, so we can
-                // find the definitions in the index.
-                Definitions defs = IndexDatabase.getDefinitions(resourceFile);
-                Annotation annotation = annotate ? HistoryGuru.getInstance().annotate(resourceFile, rev) : null;                
-                Reader r = new InputStreamReader(bin);
-                AnalyzerGuru.writeXref(a, r, out, defs, annotation, Project.getProject(resourceFile));
-	                %></pre></div><%
-	            } else {
-	        %> Click <a href="<%=context+Constants.rawP+path%>">download <%=basename%></a><%
-	            }
-            } finally {
-            	bin.close();
-            }
-        }
-    }
-    %><%@include file="foot.jspf"%><%
-}
-if (ef != null) {
-    try {
-        ef.close();
-    } catch (IOException e) {
-    }
-}
-%>
+%>
\ No newline at end of file
diff -r 09f0768a7ec1 web/mast.jsp
--- a/web/mast.jsp	Fri May 06 21:41:59 2011 +0200
+++ b/web/mast.jsp	Sat May 07 06:44:23 2011 +0200
@@ -1,4 +1,6 @@
 <%-- 
+$Id$
+
 CDDL HEADER START
 
 The contents of this file are subject to the terms of the
@@ -17,244 +19,148 @@
 CDDL HEADER END
 
 Copyright (c) 2005, 2010, Oracle and/or its affiliates. All rights reserved.
+Portions Copyright 2011 Jens Elkner.
 
---%><%@ page import = "javax.servlet.*,
-             java.lang.*,
-             javax.servlet.http.*,
-             java.util.*,
-             java.io.*,
-             org.opensolaris.opengrok.index.*,
-             org.opensolaris.opengrok.configuration.*,
-             org.opensolaris.opengrok.web.EftarFileReader,
-             org.opensolaris.opengrok.web.Util,
-             org.opensolaris.opengrok.web.Constants,
-             org.opensolaris.opengrok.history.HistoryGuru"
-             %><%@ page session="false" %><%@ page errorPage="error.jsp"%><%
+--%><%--
 
-// Use UTF-8 if no encoding is specified in the request
-if (request.getCharacterEncoding() == null) {
-    request.setCharacterEncoding("UTF-8");
+After include you are here: /body/div#page/div#content/
+ 
+--%><%@ page session="false" errorPage="error.jsp" import="
+java.io.File,
+java.io.IOException,
+
+org.opensolaris.opengrok.configuration.Project,
+org.opensolaris.opengrok.history.HistoryGuru,
+org.opensolaris.opengrok.web.EftarFileReader,
+org.opensolaris.opengrok.web.PageConfig,
+org.opensolaris.opengrok.web.Prefix,
+org.opensolaris.opengrok.web.Util"%><%
+/* ---------------------- mast.jsp start --------------------- */
+{
+	cfg = PageConfig.get(request);
+	String redir = cfg.canProcess();
+	if (redir == null || redir.length() > 0) {
+		if (redir == null) {
+			response.sendError(HttpServletResponse.SC_NOT_FOUND);
+		} else {
+			response.sendRedirect(redir);
+		}
+		return;
+	}
+	// jel: hmmm - questionable for dynamic content
+	long flast = cfg.getLastModified();
+	if (request.getDateHeader("If-Modified-Since") >= flast) {
+		response.setStatus(HttpServletResponse.SC_NOT_MODIFIED);
+		return;
+	}
+	response.setDateHeader("Last-Modified", flast);
+
+	// Use UTF-8 if no encoding is specified in the request
+	if (request.getCharacterEncoding() == null) {
+		request.setCharacterEncoding("UTF-8");
+	}
+
+	// set the default page title 
+	String path = cfg.getPath();
+	cfg.setTitle("Cross Reference: " + path);
+
+	String context = request.getContextPath();
+	cfg.getEnv().setUrlPrefix(context + Prefix.SEARCH_R + "?");
+	
+	String uriEncodedPath = cfg.getUriEncodedPath();
+	String rev = cfg.getRequestedRevision();
+%><%@
+
+include file="httpheader.jspf"
+
+%><body>
+<script type="text/javascript">/* <![CDATA[ */
+	document.hash = '<%= cfg.getDocumentHash() 
+	%>';document.rev = '<%= rev 
+	%>';document.link = '<%= context + Prefix.XREF_P + uriEncodedPath 
+	%>';document.annotate = <%= cfg.annotate() %>;
+	document.domReady.push(function() {domReadyMast();});
+	document.pageReady.push(function() { pageReadyMast();});
+/* ]]> */</script>
+<div id="page">
+	<div id="whole_header">
+		<form action="<%= context + Prefix.SEARCH_P %>">
+<div id="header"><%@ 
+
+include file="pageheader.jspf"
+
+%>
+	<div id="pagetitle"><span id="filename"
+					>Cross Reference: <%= cfg.getCrossFilename() %></span><%
+	String dtag = cfg.getDefineTagsIndex();
+	if (dtag.length() > 0) {
+					%><br/><%= dtag %><%
+	}
+	%></div>
+</div>
+<div id="Masthead">
+	<tt><a href="<%= context + Prefix.XREF_P %>/">xref</a>: <%= Util
+		.breadcrumbPath(context + Prefix.XREF_P, path,'/',"",true,cfg.isDir())
+	%></tt>
+</div>
+<div id="bar">
+	<ul>
+		<li><a href="<%= context %>/"><span id="home"></span>Home</a></li><%
+	if (!cfg.hasHistory()) {
+		%><li><span id="history"></span><span class="c">History</span></li><%
+	} else {
+		%><li><a href="<%= context + Prefix.HIST_L + uriEncodedPath
+			%>"><span id="history"></span>History</a></li><%
+	}
+	if (!cfg.hasAnnotations() /* || cfg.getPrefix() == Prefix.HIST_S */ ) {
+		%><li><span class="c"><span class="annotate"></span>Annotate</span></li><%
+	} else if (cfg.annotate()) {
+		%><li><span id="toggle-annotate-by-javascript" style="display: none"><a 
+			href="#" onclick="javascript:toggle_annotations(); return false;"
+			title="Show or hide line annotation(commit revisions,authors)."
+			><span class="annotate"></span>Annotate</a></span><span 
+			id="toggle-annotate"><a href="<%= 
+				context + Prefix.XREF_P + uriEncodedPath
+				+ (rev.length() == 0 ? "" : "?") + rev 
+			%>"><span class="annotate"></span>Annotate</a></span></li><% 
+	} else {
+		%><li><a href="#" onclick="javascript:get_annotations(); return false;"
+			><span class="annotate"></span>Annotate</a></li><%
+	}
+	if (!cfg.isDir()) {
+		if (cfg.getPrefix() == Prefix.XREF_P) {
+		%><li><a href="#" onclick="javascript:lntoggle();return false;"
+			title="<%= "Show or hide line numbers (might be slower if "
+				+ "file has more than 10 000 lines)."
+			%>"><span id="line"></span>Line#</a></li><li><a 
+			href="#" onclick="javascript:lsttoggle();return false;"
+			title="Show or hide symbol list."><%-- 
+			--%><span id="defbox"></span>Navigate</a></li><%
+		}
+		%><li><a href="<%= context + Prefix.RAW_P + uriEncodedPath
+			+ (rev.length() == 0 ? "" : "?") + rev 
+			%>"><span id="download"></span>Download</a></li><%
+	}
+		%><li><input type="text" id="search" name="q" class="q" /> 
+			<input type="submit" value="Search" class="submit" /></li><%
+	Project proj = cfg.getProject();
+	String[] vals = cfg.getSearchOnlyIn();
+		%><li><input type="checkbox" name="path" value="<%= vals[0] 
+			%>" <%= vals[2] %>/> only in <b><%= vals[1] %></b></li>
+		<%-- TODO: for directories a better way is probably to use
+			'./' or "this directory" instead of the full path
+			again - full path is already shown above the navbar ... --%>
+	</ul><%
+	if (proj != null) {
+	%>
+	<input type="hidden" name="project" value="<%=proj.getDescription()%>" /><%
+	}
+%>
+</div>
+		</form>
+	</div>
+<div id="content">
+<%
 }
-
-String context = request.getContextPath();
-String servlet = request.getServletPath();
-String reqURI = request.getRequestURI();
-String path = request.getPathInfo();
-if (path == null) path = "";
-RuntimeEnvironment environment = RuntimeEnvironment.getInstance();
-environment.setUrlPrefix(context + Constants.searchR + "?");
-environment.register();
-String rawSource = environment.getSourceRootPath();
-String resourcePath = rawSource + path;
-File resourceFile = new File(resourcePath);
-resourcePath = resourceFile.getAbsolutePath();
-boolean valid = true;
-boolean noHistory = true;
-boolean noAnnotation = true;
-boolean annotate = false;
-String basename = resourceFile.getName();
-boolean isDir = false;
-EftarFileReader ef = null;
-String parent = null;
-String parentBasename = resourceFile.getParentFile().getName();
-IgnoredNames ignoredNames = environment.getIgnoredNames();
-String uriEncodedName = Util.URIEncodePath(path);
-
-if(resourcePath.length() < rawSource.length()
-|| ignoredNames.ignore(path)
-|| ignoredNames.ignore(parentBasename)
-|| !resourcePath.startsWith(rawSource)) {
-    valid = false;
-    response.sendError(404);
-    return;
-} else if (!resourceFile.canRead() && resourcePath.startsWith(rawSource)) {
-    String newPath = rawSource + "/on/" + path; //TODO do we still use "on" ???
-    File newFile = new File(newPath);
-    if(newFile.canRead()) {
-        if(newFile.isDirectory() && servlet.startsWith(Constants.xrefP) && !path.endsWith("/")) {
-            response.sendRedirect(context + servlet + "/on" + uriEncodedName + "/");
-        } else {
-            response.sendRedirect(context + servlet + "/on" + uriEncodedName);
-        }
-    }
-    valid = false;
-    response.sendError(404);
-    return;
-} else {
-    valid = true;
-    path = resourcePath.substring(rawSource.length());
-    if ("".equals(path)) {
-        path = "/";
-    }
-    if (File.separatorChar == '\\') {
-        path = path.replace('\\','/');
-    }
-    uriEncodedName = Util.URIEncodePath(path);
-    isDir = resourceFile.isDirectory();
-    if (isDir && !servlet.startsWith(Constants.xrefP) && !servlet.startsWith(Constants.histP)) {	//if it is an existing directory perhaps people wanted directory xref
-        if(!reqURI.endsWith("/")) {
-            response.sendRedirect(context + Constants.xrefP + uriEncodedName + "/");
-        } else {
-            response.sendRedirect(context + Constants.xrefP + uriEncodedName);
-        }
-    } if (isDir && !reqURI.endsWith("/")) {
-        response.sendRedirect(context + servlet + uriEncodedName +"/");
-    } else {
-        
-        long flast = resourceFile.lastModified();
-        String dtag = "";
-        
-        if (request.getDateHeader("If-Modified-Since") >= flast ) {
-            response.setStatus(HttpServletResponse.SC_NOT_MODIFIED);
-            valid = false;
-        } else {
-            
-            response.setDateHeader("Last-Modified", flast);
-            int lastSlash = path.lastIndexOf('/');
-            parent = (lastSlash != -1) ? path.substring(0, lastSlash) : "";
-            int pLastSlash = parent.lastIndexOf('/');
-            parentBasename = pLastSlash != -1 ? parent.substring(pLastSlash+1) : parent;
-            noHistory = !HistoryGuru.getInstance().hasHistory(resourceFile);
-            noAnnotation = isDir ||
-                    !HistoryGuru.getInstance().hasAnnotation(resourceFile);
-            annotate = !noAnnotation &&
-                    Boolean.parseBoolean(request.getParameter("a"));
-            try{
-                ef = new EftarFileReader(environment.getDataRootPath() + "/index/dtags.eftar");
-                dtag = ef.get(path);
-                if(servlet.startsWith(Constants.xrefS)) {
-                } else {
-                    if(ef != null) {
-                        try {
-                            ef.close();
-                        } catch (IOException e) {
-                        } finally {
-                            ef = null;
-                        }
-                    }
-                }
-            } catch (Exception e) {
-                dtag = "";
-            }
-    String pageTitle="Cross Reference: " + path;
-    String rev = request.getParameter("r");
-            if (rev == null) {
-                rev = "";
-            } else if (rev.length() > 0) {
-                rev = "&r=" + rev;
-            }
-    String h = request.getParameter("h");
-%><%@ include file="httpheader.jspf" %><%//below style is for the fancy always on top search bar%>
-<body style="overflow:hidden;">
-<script type="text/javascript" src="<%=context%>/jquery-1.4.4.min.js"></script>
-<script type="text/javascript">/* <![CDATA[ */
-function get_annotations() {
-    link="<%=context+Constants.xrefP+uriEncodedName%>?a=true<%=rev%>";
-    hash="&h="+window.location.hash.substring(1,window.location.hash.length);
-    window.location=link+hash;
-}
-    $().ready(function() {
-     h="<%=h%>";
-     if (!window.location.hash) {
-         if (h!=null && h!="null")  { window.location.hash=h; }
-             else { $('#content').focus(); }
-      }
-} );
-/* ]]> */</script>
-<% if (annotate) { %>
-<script type="text/javascript" src="<%=context%>/jquery.tooltip-1.3.pack.js"></script>
-<script type="text/javascript">/* <![CDATA[ */
-function toggle_annotations() {
-  $("span").each(function() {      
-      if (this.className == 'blame') {
-         this.className = 'blame-hidden';
-      } else if (this.className == 'blame-hidden') {
-         this.className = 'blame';
-      }
-     }
-    );   
-}
-$().ready(function() {
-    $('a[name=r]').tooltip({
-        left: 5,
-	showURL: false
-       });    
-} );
-/* ]]> */</script>
-<% } %>
-<div id="page">
-<div id="whole_header" >
-<form action="<%=context+Constants.searchP%>">
-    <div id="header"><%@ include file="pageheader.jspf" %>
-        <div id="pagetitle"><b id="filename">Cross Reference: <%=basename%></b><% if (dtag!=null & dtag!="") { %><br/><%=dtag%><% } %></div>
-    </div>
-    <div id="Masthead"><tt><a href="<%=context+Constants.xrefP%>/">xref</a>: <%=org.opensolaris.opengrok.web.Util.breadcrumbPath(context + Constants.xrefP, path)%></tt></div>
-    <div id="bar"><a href="<%=context%>/" id="home">Home</a> |
-        <%
-        
-        if (noHistory || servlet.startsWith(Constants.histS)) {
-        %> <span class="c" id="history">History</span><%
-        } else {
-        %><a id="history" href="<%=context+Constants.histL+uriEncodedName%>">History</a><%
-        }
-        if (noAnnotation) {
-        %> | <span class="c" id="annotate">Annotate</span><%
-        } else {       
-            if (Boolean.parseBoolean(request.getParameter("a"))) {
-        %> | <span id="toggle-annotate-by-javascript" style="display: none">
-            <a href="#" onclick="javascript:toggle_annotations(); return false;" title="Show or hide line annotation(commit revisions,authors)." >Annotate</a>
-        </span>
-        <span id="toggle-annotate">
-            <a href="<%=context+Constants.xrefP+uriEncodedName%><%
-               if (rev.length() > 0) { 
-               %>?<%=rev%><% 
-           } %>">Annotate</a></span>
-        <script type="text/javascript">
-            <!--
-            var toggle_js = document.getElementById('toggle-annotate-by-javascript'); 
-            var toggle_ss = document.getElementById('toggle-annotate');
-
-            toggle_js.style.display = 'inline';
-            toggle_ss.style.display = 'none';
-            // -->
-        </script> <%
-        } else {
-        %> | <a href="#" onclick="javascript:get_annotations(); return false;">Annotate</a><%
-        }
-    }    
-            if (!isDir) {
-                if ( servlet.startsWith(Constants.xrefS) ) {
-               %> | <a href="#" onclick="javascript:lntoggle();return false;" title="Show or hide line numbers (might be slower if file has more than 10 000 lines).">Line #</a> | <a href="#" onclick="javascript:lsttoggle();return false;" title="Show or hide symbol list.">Navigate</a><%
-                }
-               String lrev = request.getParameter("r");
-               if (lrev == null || lrev.equals("")) {
-        %> | <a id="download" href="<%=context+Constants.rawP+uriEncodedName%>">Download</a><%
-        } else {
-        %> | <a id="download" href="<%=context+Constants.rawP+uriEncodedName%>?r=<%=lrev%>">Download</a><%
-        }
-     }
-
-     Project proj = Project.getProject(resourceFile);
-     //if (proj != null || !environment.hasProjects())
-     {
-        %> | <input id="search" name="q" class="q"/>
-        <input type="submit" value="Search" class="submit"/>
-        <%
-        if (proj != null) {
-        %><input type="hidden" name="project" value="<%=proj.getDescription()%>"/><%
-        }
-        if(isDir) {
-                if(path.length() > 0) {
-        %><input type="checkbox" name="path" value="<%=path%>"/> only in <b><%=path%></b><%
-          }
-        } else {
-          %><input type="checkbox" name="path" value="<%=parent%>"/> only in <b><%=parentBasename%></b><%
-        }
-        }
-        %>
-</div></form></div>
-        <div id="content"><%
-} // date check
-    } // not a directory redirect
-}
-%>
+/* ---------------------- mast.jsp end --------------------- */
+%>
\ No newline at end of file
diff -r 09f0768a7ec1 web/menu.jspf
--- a/web/menu.jspf	Fri May 06 21:41:59 2011 +0200
+++ b/web/menu.jspf	Sat May 07 06:44:23 2011 +0200
@@ -1,4 +1,6 @@
 <%-- 
+$Id$
+
 CDDL HEADER START
 
 The contents of this file are subject to the terms of the
@@ -19,146 +21,162 @@
 Copyright 2007 Sun Microsystems, Inc.  All rights reserved.
 Use is subject to license terms.
 
---%><%@page import="org.opensolaris.opengrok.web.Constants"%>
-<%@ page import="org.opensolaris.opengrok.configuration.Project,
-org.opensolaris.opengrok.web.Util,java.util.Iterator"%>
-<% if (hasProjects) { String hcontext = request.getContextPath();
+Portions Copyright 2011 Jens Elkner.
+
+--%><%@page import="
+java.util.TreeSet,
+java.util.TreeMap,
+java.util.Map.Entry,
+java.util.List,
+java.util.HashMap,
+java.util.ArrayList,
+
+org.opensolaris.opengrok.configuration.Project,
+org.opensolaris.opengrok.search.QueryBuilder,
+org.opensolaris.opengrok.web.PageConfig,
+org.opensolaris.opengrok.web.Prefix,
+org.opensolaris.opengrok.web.Util"
+%><%
+/* ---------------------- menu.jspf start --------------------- */
+{
+	// PageConfig cfg = PageConfig.get(request);
+
+	List<Project> projects = cfg.getEnv().getProjects();
+	if (projects == null) {
+		projects = new ArrayList<Project>(0);
+	}
+	TreeMap<String, String> pMap = new TreeMap<String, String>();
+	QueryBuilder queryParams = cfg.getQueryBuilder();
+	if (projects.size() != 0) {
+		for (Project p : projects) {
+			String name = p.getDescription();
+			String esc = Util.formQuoteEscape(p.getDescription());
+			pMap.put(name, esc);
+		}
+		StringBuilder jsProjects = new StringBuilder(64);
+		jsProjects.append('\'');
+		for (String name : cfg.getRequestedProjects()) {
+			jsProjects.append(name).append("','");
+		}
+		if (jsProjects.length() > 1) {
+			jsProjects.setLength(jsProjects.length()-2);
+		} else {
+			jsProjects.setLength(0);
+		}
 %>
-<script type="text/javascript" src="<%=hcontext%>/jquery-1.4.4.min.js"></script>
-<%-- TODO  Bug 11749  
-<script type="text/javascript" src="jquery.autocomplete-1.1.pack.js"></script>
+<script type="text/javascript">/* <![CDATA[ */
+	document.projects = [ <%= jsProjects.toString() 
+	%> ];document.xrefPath = '<%= request.getContextPath() + Prefix.XREF_P 
+	%>';document.domReady.push(function() { domReadyMenu(); });
+/* ]]> */
+</script><%
+	}
+%>
+<form action="search" id="sbox">
 
-<script type="text/javascript">/* <![CDATA[ */
-    var projects = [
+<div id="qtbl">
+<table>
+	<tr>
+		<td><label for="s1">Full&nbsp;Search</label></td>
+		<td><input tabindex="1" class="q" name="q" id="s1" value="<%= 
+				Util.formQuoteEscape(queryParams.getFreetext()) %>"/></td>
+	</tr>
+	<tr>
+		<td><label for="s2">Definition</label></td>
+		<td><input class="q" tabindex="2" name="defs" id="s2" value="<%= 
+			Util.formQuoteEscape(queryParams.getDefs()) %>"/></td>
+	</tr>
+	<tr>
+		<td><label for="s3">Symbol</label></td>
+		<td><input class="q" tabindex="3" name="refs" id="s3" value="<%= 
+			Util.formQuoteEscape(queryParams.getRefs()) %>"/></td>
+	</tr>
+	<tr>
+		<td><label for="s4">File&nbsp;Path</label></td>
+		<td><input class="q" tabindex="4" name="path" id="s4" value="<%= 
+			Util.formQuoteEscape(queryParams.getPath()) %>"/></td>
+	</tr>
+	<tr>
+		<td><label for="s5">History</label></td>
+		<td><input class="q" tabindex="5" name="hist" id="s5" value="<%= 
+			Util.formQuoteEscape(queryParams.getHist()) %>"/></td>
+	</tr>
+<%-- TODO  Bug 11749
 <%
-for (Project p : env.getProjects()) { 
-   %>"<%=Util.formQuoteEscape(p.getDescription())%>",<%
+	if (projects.size() != 0) {
+		String imgDir = cfg.getCssDir() + "/img/";
+	%>
+	<tr>
+		<td>Project(s)</td>
+		<td>
+			<table class="combo_table" id="combotable">
+				<tbody>
+					<tr>
+						<td class="combo_td1"><div class="combo_div4" 
+							style="background: transparent url(<%=
+								imgDir %>transparent_pixel.gif) 
+								repeat scroll 0% 0%;"><input 
+								class="combo_input1 combo_input" id="project" 
+								name="project" size="25" 
+								value="<%= cfg.getRequestedProjectsAsString() 
+								%>"/></div>
+						</td>
+						<td valign="top" align="left" class="combo_td2" 
+							id="combotable_button"><a 
+							onclick='javascript: $("#project").click();
+							$("#project").click();'/><img style="display: none;" 
+							alt="" src="<%= imgDir %>button2.png"/>
+						</td>
+					</tr>
+				</tbody>
+			</table></td>
+	</tr><%
+	}
+%>
+--%>
+</table>
+</div><%
+
+	if (projects.size() != 0) {
+%>
+<div id="ptbl">
+	<p><label for="project">In Project(s)</label> <button tabindex="6" type="button"
+		onclick="javascript: selectAllProjects(); return false;"
+		>select all</button>&nbsp;<button tabindex="7" type="button"
+		onclick="javascript: invertAllProjects(); return false;"
+		>invert selection</button> </p>
+	<select tabindex="8" ondblclick="javascript: goFirstProject();" 
+		onkeyup="javascript: checkEnter(event);" class="q" id="project" 
+		name="project" multiple="multiple" size="<%= 
+		Math.min(6, projects.size()) %>"><%
+		TreeSet<String> pRequested = cfg.getRequestedProjects();
+		for (Entry<String,String> e : pMap.entrySet()) {
+			// TODO below "selected" has no effect if one refreshes the page 
+			// with F5 also below ondblclick doesn't work in IE ...
+			// ondblclick="javascript:goFirstProject();"
+		%>
+		<option value="<%= e.getValue() %>"<%
+			if (pRequested.contains(e.getKey())) {
+			%> selected="selected"<%
+			}
+			%>><%= e.getValue() %></option><%
+		}
+		%>
+	</select>
+</div><%
+	}
+	%>
+
+<p><input 
+	tabindex="9" class="submit" type="submit" value="Search"/> <input 
+	tabindex="10" class="submit" onclick="javascript: sbox.q.value=''; 
+	sbox.defs.value = ''; sbox.refs.value = ''; sbox.path.value = ''; 
+	sbox.hist.value = ''; sbox.project.value ='';" type="button" 
+	value=" Clear "/> <button class="help" 
+	tabindex="11" onclick="window.open('help.jsp')">Help</button>
+</p>
+</form>
+<%
 }
-%>
-  ];
-$().ready(function() {
-    $("#project").autocomplete(projects, {
-                minChars: 0,
-		multiple: true,
-                multipleSeparator: ",",
-		//mustMatch: true,
-                matchContains: "word",
-                max: 200,
-                cacheLength:20,
-		//autoFill: false,
-                formatItem: function(row, i, max) {
-                    if (row!=null)
-			return i + "/" + max + ": " + row[0];
-                    else return "";
-		},
-		formatMatch: function(row, i, max) {
-                    if (row!=null)
-			return row[0]
-                    else return "";
-		},
-		formatResult: function(row) {
-                    if (row!=null)
-			return row[0];
-                    else return "";
-		},
-                width: "300px"                
-	});
-   });
-/* ]]> */
-</script>
---%>
-<script type="text/javascript">/* <![CDATA[ */
-function selectAllProjects() {     
-     $("#project *").attr("selected","selected");
-}
-function invertAllProjects() {    
-     $("#project *").each( function(){
-         if ( $(this).attr("selected") ) { $(this).removeAttr("selected") }
-         else { $(this).attr("selected","true"); }
-     }
-    );
-}
-function goFirstProject() {
-    var selected=$.map($('#project :selected'), function(e) { return $(e).text(); });window.location='<%=hcontext%>'+'<%=Constants.xrefP%>/'+selected[0];
-}
-function checkEnter(event) {
-    if(event.keyCode=='13' && sbox.q.value=='' && sbox.defs.value==''
-        && sbox.refs.value=='' && sbox.path.value=='' && sbox.hist.value=='') { goFirstProject(); }
-    else if(event.keyCode=='13') {sbox.submit();}
-}
-/* ]]> */
-</script>
-<%}%>
-<table cellpadding="0" cellspacing="0" border="0" width="100%">
-    <tr>
-        <td valign="top"><br /> &nbsp;</td>
-        <td align="left" valign="middle">
-            <br/><form action="search" id="sbox">
-                <table cellpadding="2" border="0" cellspacing="0">
-                    <tr><td align="right"> Full&nbsp;Search </td><td><input tabindex="1" class="q" name="q" size="45" style="width: 300px" value="<%=Util.formQuoteEscape(q)%>"/></td>
- <% if (hasProjects) { %>
-                        <td rowspan="5" style="border-left:gray;border-left-width:thin;border-left-color:gray">
-                            <!--<td align="right" valign="top"> -->
-                            <table border="0">
-                                <tbody>
-                                    <tr>
-                                        <td>in project(s): <span style="padding-left:60px;font-size:small"><a tabindex="6" href="#" onclick="javascript:selectAllProjects();return false;">select all</a>&nbsp;|&nbsp;<a href="#" tabindex="7" onclick="javascript:invertAllProjects();return false;">invert selection</a></span></td>
-                                    </tr>
-                                    <tr><td>
-                                            <select tabindex="8" ondblclick="javascript:goFirstProject();" onkeyup="javascript:checkEnter(event);" class="q" style="width: 300px" id="project" name="project" multiple="multiple" size="<%=Math.min(6, env.getProjects().size())%>">
-                                <%
-                                for (Project p : env.getProjects()) {
-                                    //TODO below "selected" has no effect if one refreshes the page with F5
-                                    //also below ondblclick doesn't work in IE ...
-                                    // ondblclick="javascript:goFirstProject();"
-                                %><option value="<%=Util.formQuoteEscape(p.getDescription())%>"<%
-                                          if (project != null) {
-                                              String projectPath = p.getDescription();
-                                              for (Iterator it = project.iterator(); it.hasNext();) {
-                                                  if (it.next().equals(projectPath)) {
-                                                      %> selected="selected"<%
-                                                  }
-                                              }
-                                           }
-                                          %>><%=Util.formQuoteEscape(p.getDescription())%></option>
-                                <%
-                                }
-                                %></select></td>
-                                    </tr>
-                                </tbody>
-                            </table></td><%
-                    }%>
-                    </tr>
-                    <tr><td align="right"> Definition </td><td><input class="q" tabindex="2" name="defs" size="25" style="width: 300px" value="<%=Util.formQuoteEscape(defs)%>"/></td></tr>
-                    <tr><td align="right"> Symbol </td><td><input class="q" tabindex="3" name="refs" size="25" style="width: 300px" value="<%=Util.formQuoteEscape(refs)%>"/></td></tr>
-                    <tr><td align="right"> File&nbsp;Path </td><td><input class="q" tabindex="4" name="path" size="25" style="width: 300px" value="<%=Util.formQuoteEscape(path)%>"/></td></tr>
-                    <tr><td align="right"> History </td><td><input class="q" tabindex="5" name="hist" size="25" style="width: 300px" value="<%=Util.formQuoteEscape(hist)%>"/></td></tr>
-<%-- TODO  Bug 11749
-                    <% if (hasProjects) { %>
-                    <tr><td align="right"> Project(s) </td><td>
-                <table cellspacing="0" cellpadding="0" border="0" class="combo_table" id="combotable">
-                <tbody><tr><td class="combo_td1">
-                <div class="combo_div4" style="background: transparent url(<%=httpHeaderContext%>/<%=laf%>/img/transparent_pixel.gif) repeat scroll 0% 0%;">
-                    <input class="combo_input1 combo_input" id="project" name="project" size="25" value="<%=Util.formQuoteEscape(sproject.toString())%>"/>
-                </div></td><td valign="top" align="left" class="combo_td2" id="combotable_button">
-                    <a onclick='javascript:$("#project").click();$("#project").click();'/>
-                    <img style="display: none;" alt="" src="<%=httpHeaderContext%>/<%=laf%>/img/button2.png"/>
-                </td></tr></tbody></table>
-                    </td></tr>
-                    <%}%>
---%>
-                    <tr><td colspan="2" align="center">  &nbsp; <input tabindex="9" class="submit" type="submit" value="Search"/> |
-                            <input tabindex="10" class="submit" onclick="javascript:sbox.q.value='';sbox.defs.value='';sbox.refs.value='';sbox.path.value='';sbox.hist.value='';sbox.project.value='';" type="button" value=" Clear "/>
-                    | <a tabindex="11" href="help.jsp">Help</a></td></tr>
-                </table>
-            </form>
-        </td>
-    <td valign="top" align="right"></td></tr>
-</table>
-<script type="text/javascript">/* <![CDATA[ */
-//below is needed for menu functions
-var sbox=document.getElementById('sbox');
-//TODO  Bug 11749 var p=document.getElementById('project');
-//p.setAttribute("autocomplete", "off");
-/* ]]> */
-</script>
\ No newline at end of file
+/* ---------------------- menu.jspf end --------------------- */
+%>
\ No newline at end of file
diff -r 09f0768a7ec1 web/more.jsp
--- a/web/more.jsp	Fri May 06 21:41:59 2011 +0200
+++ b/web/more.jsp	Sat May 07 06:44:23 2011 +0200
@@ -1,4 +1,6 @@
 <%-- 
+$Id$
+
 CDDL HEADER START
 
 The contents of this file are subject to the terms of the
@@ -19,52 +21,46 @@
 Copyright 2010 Sun Microsystems, Inc.  All rights reserved.
 Use is subject to license terms.
 
---%><%@ page import = "javax.servlet.*,
-java.lang.*,
-javax.servlet.http.*,
-java.util.*,
-java.io.*,
-java.text.*,  
-org.opensolaris.opengrok.analysis.*,
-org.opensolaris.opengrok.history.*,
-org.opensolaris.opengrok.web.*,
-org.opensolaris.opengrok.search.context.*,
+Portions Copyright 2011 Jens Elkner.
+
+--%><%@page import="
+java.io.FileReader,
+java.util.logging.Level,
+
+org.opensolaris.opengrok.OpenGrokLogger,
+org.apache.lucene.search.Query,
 org.opensolaris.opengrok.search.QueryBuilder,
-org.opensolaris.opengrok.search.SearchEngine,
-java.util.regex.*,
-org.apache.lucene.queryParser.*,
-org.apache.lucene.search.*"
-%><%@include file="mast.jsp"%><%
+org.opensolaris.opengrok.search.context.Context"
+%><%@include 
 
-if (valid) {
-    QueryBuilder qbuilder = new QueryBuilder()
-            .setFreetext(request.getParameter("full"))
-            .setDefs(request.getParameter("defs"))
-            .setRefs(request.getParameter("refs"))
-            .setPath(request.getParameter("path"))
-            .setHist(request.getParameter("hist"));
+file="mast.jsp"
 
-    // This is for backward compatibility with links created by OpenGrok 0.8.x
-    // and earlier. We used to concatenate the entire query into a single
-    // string and send it in the t parameter. If we get such a link, just add
-    // it to the freetext field, and we'll get the old behaviour. We can
-    // probably remove this code in the first feature release after 0.9.
-    String t = request.getParameter("t");
-    if (t != null) {
-        qbuilder.setFreetext(t);
-    }
+%><%
+/* ---------------------- more.jsp start --------------------- */
+{
+	cfg = PageConfig.get(request);
+	QueryBuilder qbuilder = cfg.getQueryBuilder();
 
-    try {
-        Query tquery = qbuilder.build();
-        if (tquery != null) {
-            Context sourceContext = new Context(tquery, qbuilder.getQueries());
-            %><p><span class="pagetitle">Lines Matching <b><%=tquery%></b></span></p><div id="more" style="line-height:1.5em;"><pre><%
-            sourceContext.getContext(new FileReader(resourceFile), out, context+Constants.xrefP, null, path, null, false, null);
-            %></pre></div><%
-        }
-    } catch (Exception e) {
-	
-    }
+	try {
+		Query tquery = qbuilder.build();
+		if (tquery != null) {
+			Context sourceContext = new Context(tquery, qbuilder.getQueries());
+%><p><span class="pagetitle">Lines Matching <b><%= tquery %></b></span></p>
+<div id="more" style="line-height:1.5em;">
+	<pre><%
+			sourceContext.getContext(new FileReader(cfg.getResourceFile()), out, 
+				request.getContextPath() + Prefix.XREF_P, null, cfg.getPath(), 
+				null, false, null);
+	%></pre>
+</div><%
+		}
+	} catch (Exception e) {
+		OpenGrokLogger.getLogger().log(Level.WARNING, e.getMessage());
+	}
 }
+/* ---------------------- more.jsp end --------------------- */
+%><%@
 
-%><%@include file="foot.jspf"%>
+include file="foot.jspf"
+
+%>
\ No newline at end of file
diff -r 09f0768a7ec1 web/offwhite/jquery.tooltip.css
--- a/web/offwhite/jquery.tooltip.css	Fri May 06 21:41:59 2011 +0200
+++ b/web/offwhite/jquery.tooltip.css	Sat May 07 06:44:23 2011 +0200
@@ -2,8 +2,7 @@
 	position: absolute;
 	z-index: 3000;
 	border: 1px solid #111;
-	background-color: #eee;
+	background-color: rgba(238,238,238,0.75);
 	padding: 5px;
-        opacity: 0.90;
 }
 #tooltip h3, #tooltip div { margin: 0; font-size: small; }
diff -r 09f0768a7ec1 web/offwhite/print.css
--- a/web/offwhite/print.css	Fri May 06 21:41:59 2011 +0200
+++ b/web/offwhite/print.css	Sat May 07 06:44:23 2011 +0200
@@ -1,248 +1,484 @@
+/* common stuff */
 body {
-	background: none;
-	color: black;
-	font-family: arial, sans-serif;
-/*	padding: 1em;
-	margin: 0em;*/        
-}
-#page {
-	background: none;
-	border: none;
-	/*margin:0;*/
-}
-#Masthead {
-	background: none;
-	display:block;
-	border: none;
-	color:#000;
-	border-bottom: 1px solid #000;
-/*	padding-bottom:3px;
-	margin-bottom: 3px;*/
-}
-#Masthead a{
-	color:#000;
-}
-#Masthead tt {
-	color:#000;
-}
-#header {
-	background:none;
-	min-height:40px;
-	height:40px;
+	font-family: "Liberation Sans", sans-serif;
+	margin: 1ex 1ex 0 1ex;
 }
 
-#content {
-  position:absolute;  
-  bottom:0px;
-  left:0px;
-  right:0px;
-  padding-left: 1em;
-  padding-top:6px;
-  overflow:auto;
-  top:6em;
-  }
-
-#whole_header {
-  height:6em;
-  padding-left: 1em;
-  /*padding-right: 1em;*/
-  position:absolute;
-  top:0;
-  right:0px;
-  left:0px;
-  /*width:98%;*/
-  overflow:auto;
-  }  
-
-#MastheadLogo h1 {
-	display:inline;
-	font-size:medium;
-}
-
-#MastheadLogo {
-	background-color: white;
-	background-image: none;
-	float: left;
-	height: 48px;
-	width: 270px;
-	border: none;
+a {
 	text-decoration: none;
 }
 
-#pagetitle {
-	float: right;
-	font-size: medium;
-	text-align:right;
-	color:#000;
+a:link {
+	color: #2030A2;
 }
 
-#filename {
-	font-size: large;
-	text-align:right;
-	color:#000;
-	border: none;
+a:visited, a:active, a:hover {
+	color: #202062;
 }
 
-#bar {
-	padding-left: 0.5em;
-	margin-bottom:1em;
+a:active, a:hover {
+	text-decoration: underline;
+}
+
+img, tt, form, pre {
+	border: 0;
+}
+
+del {
+	text-decoration: line-through;
+}
+
+caption {
+	caption-side:top;
+	margin: 1ex 0;
+	text-align: left;
+}
+
+thead {
+	color: white;
+	background-color: #616ca7;
+}
+
+tbody tr:nth-child(EVEN) { /* alternate color for odd rows */
+	background-color: #e5e5e5;
+}
+
+input, button {
+	border: 1px solid #755;
+	border-radius: 0.75ex;
+	-moz-border-radius: 0.75ex;
+	background-color: #e5e5e5;
+}
+
+label {
+	font-weight: bold;
+}
+
+.pre { /* the diff content */
+	white-space: pre-wrap;
+	font-family: "Liberation Mono", monospace;
+	margin: 0;
+}
+
+#page { }
+
+.error { /* error messages */
+	color: #a52a2a;
+}
+
+/* ############### start of header ############## */
+#whole_header {
 	display: none;
 }
 
-input.q {
-	color: #000;
-	border: 1px solid #000;
-	font-weight: normal;
-	padding:2px;
+#pagetitle { /* short verbal summary/description of the shown content */
 }
 
-input.submit {
-	background-color: #ccc;
-	color: #000;
-	border: 1px solid #000;
-	padding: 0px;
-	font-weight: bold;
-	min-width:4em;
-	text-align:center;
+/* required for help page, only */
+#sbar { /* full search navbar */
+	border-bottom: 1px solid #bba;
+	border-top: 1px solid #bba;
+	background-color: #FFFFE5;
+	margin: 0;
+	clear: both;
 }
 
-input.submit:hover, input.submit:active {
-	background-color: #ddd;
-	color: #000;
-	border: 1px solid #000;
-	padding: 0px;
-	font-weight: bold;
-	min-width:4em;
-	text-align:center;
+/* *** full search navbar *** */
+#qtbl, #ptbl {
+	display: inline-block;
+	vertical-align: top;
+} 
+
+#qtbl tr {
+	background: none; /* remove alternating colors */
 }
 
-.thead {
-	background-image:none;
-	color:#000;
-	background-color:#ddd;
-	border-bottom:1px solid #000;
-	font-weight:bold;
+#ptbl > p {
+	text-align: center;
+	white-space: nowrap;
+	margin: 0.5ex 1ex;
 }
 
-.alt {
-	background:none;
+#qtbl td:first-child {
+    width: 10ex;
+    text-align: right;
 }
 
-a:link			{color:#000;text-decoration:none;}
-a:visited		{color:#000;text-decoration:none;}
-a:active, a:hover	{color:#000;text-decoration:underline;}
-img {border:0;}
+#qtbl td:nth-child(2) {
+	width: 45ex;
+}
 
-tt {margin:0;}
+#qtbl input.q {
+	width: 100%;
+}
 
+#ptbl {
+	margin-left: 2em;
+}
 
-form, pre {padding:0px;margin:0px;}
-#src {font-size:75%;}
-#src .l  {color:#000;border-right: 1px solid #000;background-color:#fff;margin-right:.5em;padding-right:.5em;text-decoration:none;}
-#src .hl {color:#000;border-right: 1px solid #000;background-color:#fff;margin-right:.5em;padding-right:.5em;text-decoration:none;font-weight:bold;}
-#src .l-hide  {display: none}
-#src .hl-hide {display: none}
-#src tt{padding-left:1em; padding-right:1em;}
-.sl {color:#999;text-decoration:underline;}
-td.a{color:#000}
-.n  {color:#000;}
-.s  {color:#000;}
-.c  {color:#000; font-style:italic;}
-a.s {color:#000;}  /* matched lines */
-a.f {color:#000;}
-div.a{color:#000}
+#ptbl button {
+	font-size: small;
+}	
 
-a.d {color:#000; font-weight:bold; text-decoration:none;} /* definitions */
+#ptbl button:first-of-type {
+	margin-left: 1em;
+}
 
-a.xm {color:#c66; font-weight:bold; text-decoration:none;} /* macro */
+#ptbl select {
+	width: 100%;
+}
 
-a.xa {color:#60c; font-weight:bold; text-decoration:none;} /* argument */
-a.xl {color:#963; font-weight:bold; text-decoration:none;} /* local */
-a.xv {color:#c30; font-weight:bold; text-decoration:none;} /* variable */
+#ptbl option {
+	padding: 0 1ex;
+}
 
-a.xp {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* package */
-a.xc {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* class */
-a.xi {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* interface */
-a.xn {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* namespace */
+#sbox > p:last-of-type {
+	white-space: nowrap;
+	/* 11ex = width(#qtbl td:first-child) + margin-left(body) */
+	margin: 1ex 0 0.5ex 11ex;
+}
 
-a.xe {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* enum */
-a.xer {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* enumerator */
-a.xs {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* struct */
-a.xt {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* typedef */
-a.xts {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* typedefs */
-a.xu {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* union */
+#sbox > p:last-of-type > :nth-child(n+2) {
+	margin-left: 1ex;
+}
 
-a.xfld {color:#090; font-weight:bold; text-decoration:none;} /* field */
-a.xmb {color:#090; font-weight:bold; text-decoration:none;} /* member */
+input.q { /* text input fields */
+	background-color: #ffffff;
+}
 
-a.xf {color:#00f; font-weight:bold; text-decoration:none;} /* function */
-a.xmt {color:#00f; font-weight:bold; text-decoration:none;} /* method */
-a.xsr {color:#00f; font-weight:bold; text-decoration:none;} /* subroutine */
+input.submit { /* start search button */
+	font-weight: bold;
+}
+/* ############### end of header ############## */
 
 
-#results .con{font-size:small;color:#000;}
-#more .l, #results .l { color:#888; }
-#results .m {background-color:#ffb;}
-#results i {color: #000; font-weight:bold;}
-#results tr.dir{background-color:#fff;border-top:3px solid #000;}
-#results td.q {visibility: hidden;}
-#results td.f{width:3em;padding-left:2em;padding-right:.5em;}
+/* ############### start of content ############## */
+#content {
+}
 
-#more { line-height:1.25em;}
-#more b { background-color:transparent;}
 
-#diffbar {border-bottom: 1px solid #000; padding-left:2em;font-size:medium; margin-top:1em;}
-#difftable {border:#000; border-collapse:collapse;font-size:small;}
-span.tab    { padding: 5px; padding-top:3px; padding-bottom: 0px; margin-left: 2px; margin-right: 2px; margin-bottom:0px ;background-color:#eee; border:1px solid #000;border-bottom:1px none;}
-span.tabsel { padding: 6px; padding-top:5px; padding-bottom: 1px; margin-left: 2px; margin-right: 2px; background-color:#fff; border:1px solid #000; border-bottom:2px solid #fff;}
-#difftable .d { background-color:#FFCC40;font-weight:bold;}
-#difftable .a { background-color:#8BD98B;font-weight:bold;}
-tr.k {border-bottom:1px dashed #000;}
-#difftable i  {color:#666;background-color:#ddd;margin-right:.2em;padding-left:1em;padding-right:.5em;text-decoration:none;}
-#difftable i.a  {background-color:#FFDD80;color:#666; font-weight:bold;}
-strike.d{background-color:#bbddbb; margin-right:.2em;padding-left:1em;padding-right:.5em;}
-#difftable td.d { background-color:#eeeeee;}
-.grey{background-color:#eee;}
+/* *** help page *** */
+#help dfn { /* definitions */
+	text-decoration: underline;
+}
 
-#badge img { display:none; }
+#help .fields, #help .example {
+	margin-left: 3em;
+}
 
-#Footer {
-	background: none;
-	color: #000;
-	font-size: 75%;
-	margin-top: 1em;
+#help dt {
+	font-weight: bold;
 }
-#Footer p {
-	margin: 0.6em 0 1em 0;
-	text-align:center;
+
+
+/* *** more page ***/
+#more {
+	line-height: 1.25em;
 }
-#Footer a {
+
+#more b { /* highlight matches */ 
+	background-color: #e5e5e5;
+}
+
+
+/* *** history page *** */
+table#revisions {
+	/* width: 100%; */ /* table with the history info for a file */
+	/* border-collapse: collapse; */ /* looks better with a small divider */
+}
+
+#revisions a.h	{ /* modified file list content */
+	font-size: small;
+	margin-left: 2em;
+}
+
+#revisions .filelist { /* "Show modified files" */
+	display: inline;
+}
+
+#revisions .filelist-hidden { /* "Hide modified files" */
+	display: none;
+}
+
+#revisions tbody td:first-child {
+	/* rev number - git/mercurial revs numbers look bad with prop. fonts */
+	font-family: "Liberation Mono", monospace;
+	text-align: right;
+}
+
+#revisions tbody td:nth-child(2), #revisions tbody td:nth-child(3) {
+	/* Compare and Date column */
+	text-align: center;
+}
+
+#revisions tbody td:nth-child(4) { /* author column */
+	padding: 0 1ex;
+	text-align: center;
+}
+
+.rssbadge { /* RSS/XML Feed on history page */
+	text-align: right;
+	margin: 1ex 0;
+}
+
+
+/* *** diff page *** */
+#diffbar { /* diff navbar: contains the tabs to select diff format */
+	display: none;
+}
+
+#difftable {
+	font-size: small;
+}
+
+#difftable .d {
+	/* "Deleted" heading + highlight of deleted text in diff lines */
+	background-color: #ffcc40;
+}
+
+#difftable .a {
+	/* "Added" heading + highlight of added text in diff lines */
+	background-color: #8bd98b;
+}
+
+#difftable table { /* left side == prev. rev; right side "current" rev */
+	table-layout: fixed;
+	border-collapse: collapse;
+}
+
+#difftable table th { /* usually both rev. have changes: eq. space for both */
+	padding-top: 1ex;
+	width: 50%;
+}
+
+#difftable th:last-child, #difftable td:last-child {
+	border-left: 1px solid black;
+}
+
+#difftable .plain td {
+	padding: 2px;
+}
+
+#difftable .image td {
+	padding: 5px;
+}
+
+#difftable .k { /* border between the context and real diff lines */
+	border-bottom: 1px dashed #ccc;
+}
+
+
+/* *** list aka xref stuff *** */
+
+/* directory listing */
+table#dirlist { /* the "Name" column */
+	font-family:	"Liberation Mono", monospace;
+	border-style: none;
+	border-collapse: collapse;
+}
+
+#dirlist .r, #dirlist .p {
+	background-image: url(./img/combined.png);
+	background-repeat: no-repeat;
+	width: 15px;
+	height: 15px;
+	padding: 0;
+	vertical-align: middle;
+	margin: 0 1ex 0 1em;
+}
+
+#dirlist .r { /* directory name, d.gif */
+	background-position: -54px 0;
+}
+
+#dirlist .p { /* file name, p.gif */
+	background-position: -69px 0;
+}
+
+#dirlist td:nth-child(n+2) { /* all but the first column */
+	padding-right: 1em;
+}
+
+#dirlist tbody td:nth-child(4) {
+	text-align: right; /* CSS3 may allow " " (single space char) */
+}
+
+
+/* file display */
+#src {
+}
+
+#src pre {
+	margin: 0;
+	font-size: small;
+}
+
+#src .l-hide, #src .hl-hide, .blame-hidden { /* hidden line number/annotation block */
+	display: none
+}
+
+#src .l, #src .hl, .blame .r, .blame .a,
+#results .l, #more .l,
+#difftable i, del.d { /* line number/annotation block */
+	display: inline-block;
+	width: 6ex;
+	text-align: right;
+	padding: 0 1ex;
+	margin-right: .5ex;
+	background-color: #ffffcc;
+	border-right: 1px solid #ddd;
+	color: #888;
+}
+
+#src .hl { /* highlighted line number */
 	color: #000;
 }
 
-.more {background-color:transparent;border: 1px #ccc solid;padding:.3em;margin:1px;}
-.sel {background-color:#ddd;border: 1px #000 solid;padding:.5em;margin:1px;}
+.blame .r { /* revision number "column" (annotation) */
+	text-align: right;
+}
 
-span.blame { }
-span.blame-hidden { display: none }
+.blame .a { /* author name "column" (annotation) */
+	text-align: center;
+}
 
-.sym_list_style {
-    position:absolute;
-    top:100px;
-    left:100px;
-    width:100px;
-    height:100px;
-    overflow:auto;
-    z-index: 10;
-    border:solid 1px #c0c0c0;
-    background-color:#ffffcc;
-    color:#000;
-    font-size:12px;
-    font-family:monospace;
-    padding:5px;
-    opacity:0.9;
-    filter:alpha(opacity=90)
+/* source code highlighting - see org/opengrok/analysis/$lang/*Xref.lex */
+#src .n		{ /* numbers/label */	color: #a52a2a; } 
+#src .s		{ /* strings */			color: green; } 
+#src .c		{ /* comment */			color: #666; }
+#src .b		{ /* heading/title/bold */	color: #000; font-weight: bold; }
+#src .k		{ /* block display */ 	color: #000; font-family: "Liberation Mono", monospace; }
+#src a.d	{ /* symbol definition */	color: #909; font-weight: bold; }
+
+a.xm	{ /* macro */			color: #c66; font-weight: bold; }
+a.xa	{ /* argument */		color: #60c; font-weight: bold; }
+a.xl	{ /* local */			color: #963; font-weight: bold; }
+a.xv	{ /* variable */		color: #c30; font-weight: bold; }
+a.xc	{ /* class */			color: #909; font-weight: bold; font-style: italic; }
+a.xp	{ /* package */			color: #909; font-weight: bold; font-style: italic; }
+a.xi	{ /* interface */		color: #909; font-weight: bold; font-style: italic; }
+a.xn	{ /* namespace */		color: #909; font-weight: bold; font-style: italic; }
+a.xe	{ /* enum */			color: #909; font-weight: bold; font-style: italic; }
+a.xer	{ /* enumerator */		color: #909; font-weight: bold; font-style: italic; }
+a.xs	{ /* struct */			color: #909; font-weight: bold; font-style: italic; }
+a.xt	{ /* typedef */			color: #909; font-weight: bold; font-style: italic; }
+a.xts	{ /* typedefs */		color: #909; font-weight: bold; font-style: italic; }
+a.xu	{ /* union */			color: #909; font-weight: bold; font-style: italic; }
+a.xfld	{ /* field */			color: #090; font-weight: bold; }
+a.xmb	{ /* member */			color: #090; font-weight: bold; }
+a.xf	{ /* function */		color: #00f; font-weight: bold; }
+a.xmt	{ /* method */			color: #00f; font-weight: bold; }
+a.xsr	{ /* subroutine */		color: #00f; font-weight: bold; }
+
+#man table, #man td  { /* #man == troff src */
+	background-color: #e5e5e5;
+	border: 1px;
+	padding: 2px;
 }
-.sym_list_style_hide {
-    display: none;
+
+#man p { /* a troff paragraph */
+	margin-top: 0.5em;
+	margin-bottom: 0;
 }
+
+#man div.b { /* man section headings etc. */
+	margin-top: 2em;
+}
+
+#man div.rs { /* a right-shifted block */
+	margin-left: 3em;
+	margin-bottom: 1em;
+}
+
+/* "Navigate" Popup */
+.sym_list_style_hide, .sym_list_style {
+	display: none;
+}
+
+/* search result page */
+#results {
+}
+
+#results p { /* pagetitle and slider */
+	padding: 0.5em;
+}
+
+#results .dir { /* directory row above matched files */
+	background-color: #cccccc;
+}
+
+#results .dir td { /* directory link */
+	padding-left: 1em;
+}
+
+#results td.q { /* 1st column: H A D */
+	white-space: nowrap;
+	font-size: xx-small;
+	padding: 0 1ex;
+}
+
+#results td.f { /* 2nd column: filename */
+	min-width: 5em;
+	margin-left: 1em;
+	padding: 0 1ex;
+}
+
+#results .con { /* 3rd column: line number + matched line contents */
+	font-size: small;
+}
+
+#results .s, #more .s { /* matched line contents */
+	color: #000;
+}
+
+#results i { /* match type description (method, interface etc.) */ 
+	color: green;
+	font-weight: bold;
+}
+
+#results .sel { /* slider item for the shown search result page */
+	background-color: #e5e5e5;
+	border: 1px #998 solid;
+	padding: .5em;
+	margin: 1px;
+}
+
+#results .more { /* slider item for the n-th search result page */
+	border: 1px #bba solid;
+	padding: .3em;
+	margin: 1px;
+}
+
+/* ############### start of footer ############## */
+#footer {
+	color: #755;
+	font-size: small;
+	margin: 1ex 0;
+	border-top: 1px solid #bba;
+}
+
+#footer p { /* footer text */
+	padding: 0;
+	margin: 0.2em;
+	text-align: center;
+}
+
+#fti { /* servedby.png */
+	display: inline-block;
+	width: 177px;
+	height: 37px;
+	vertical-align: middle;
+	background-image: url(./img/combined.png);
+	background-repeat: no-repeat;
+	background-position: -255px 0;
+}
+#rssi { /* rss.png */
+	display: inline-block;
+	width: 80px;
+	height: 15px;
+	vertical-align: middle;
+	background-image: url(./img/combined.png);
+	background-repeat: no-repeat;
+	background-position: -432px 0;
+}
+/* ############### end of footer ############## */
\ No newline at end of file
diff -r 09f0768a7ec1 web/offwhite/style.css
--- a/web/offwhite/style.css	Fri May 06 21:41:59 2011 +0200
+++ b/web/offwhite/style.css	Sat May 07 06:44:23 2011 +0200
@@ -1,329 +1,668 @@
+/* common stuff */
 body {
 	background-color: #ededd5;
-/*	font-size: 100.01%; /* 12px [1] */
 	color: black;
-	font-family: arial, sans-serif;
+	font-family: "Liberation Sans", sans-serif;
+	margin: 1ex 1ex 0 1ex;
 }
 
-#page {
-	/*margin: 0.5em;*/
+a {
+	text-decoration: none;
 }
 
-#header {
-	min-height:40px;
-	height:40px;
-	display:block;
+a:link {
+	color: #2030A2;
 }
 
-#content {
-  position:absolute;  
-  bottom:0px;
-  left:0px;
-  right:0px;
-  padding-left: 1em;
-  padding-top:6px;
-  overflow:auto;
-  top:6em;
-  }
+a:visited, a:active, a:hover {
+	color: #202062;
+}
 
-#whole_header {
-  height:6em;
-  padding-left: 1em;
-  /*padding-right: 1em;*/
-  position:absolute;
-  top:0;
-  right:0px;
-  left:0px;
-  /*width:98%;*/
-  overflow:auto;
-  }  
+a:active, a:hover {
+	text-decoration: underline;
+}
+
+img, tt, form, pre {
+	border: 0;
+}
+
+del {
+	text-decoration: line-through;
+}
+
+caption {
+	caption-side:top;
+	margin: 1ex 0;
+	text-align: left;
+}
+
+thead {
+	background-color: #d6d6c0;
+}
+
+tbody tr:nth-child(EVEN) { /* alternate color for odd rows */
+	background-color: #e4e4cf;
+}
+
+input, button {
+	border: 1px solid #755;
+	border-radius: 0.75ex;
+	-moz-border-radius: 0.75ex;
+	background-color: #d6d6c0;
+}
+
+input:hover, input:active, button:hover, button:active {
+	background-color: #e0e0d0;
+}
+
+label {
+	font-weight: bold;
+}
+
+.pre { /* the diff content */
+	white-space: pre-wrap;
+	font-family: "Liberation Mono", monospace;
+	margin: 0;
+}
+
+#page { }
+
+.error { /* error messages */
+	color: #a52a2a;
+}
+
+.active {
+	font-weight: bold;
+	color: #c20097;
+}
+
+/* ############### start of header ############## */
+#whole_header { }
+
+/* *** banner/deco above navbar *** */
+#header { }
+
+#MastheadLogo {
+	width: 171px;
+	height: 40px;
+	float: right;
+	background-image: url(./img/combined.png);
+	background-repeat: no-repeat;
+	background-position: -84px 0;
+	margin: 0 0 1ex 0;
+}
+
+#pagetitle { /* short verbal summary/description of the shown content */
+}
+
+#filename { /* "Cross Reference: ..." */
+	font-size: xx-large;
+	font-weight: bold;
+	margin-right: 1em;
+}
 
 #Masthead {
-	display:block;
-/*	padding:3px;*/
-	border-bottom:1px solid #bba;
+	clear: left;
 }
 
-#Masthead tt {
+#Masthead tt { /* slashes in the xref: line */
+	color: #888;
+}
+
+#sbar, #bar { /* full search and default navbar */
+	border-bottom: 1px solid #bba;
+	border-top: 1px solid #bba;
+	background-color: #FFFFE5;
+	margin: 0;
+	clear: both;
+}
+
+/* *** full search navbar *** */
+#qtbl, #ptbl {
+	display: inline-block;
+	vertical-align: top;
+} 
+
+#qtbl tr {
+	background: none; /* remove alternating colors */
+}
+
+#ptbl > p {
+	text-align: center;
+	white-space: nowrap;
+	margin: 0.5ex 1ex;
+}
+
+#qtbl td:first-child {
+    width: 10ex;
+    text-align: right;
+}
+
+#qtbl td:nth-child(2) {
+	width: 45ex;
+}
+
+#qtbl input.q {
+	width: 100%;
+}
+
+#ptbl {
+	margin-left: 2em;
+}
+
+#ptbl button {
+	font-size: small;
+}	
+
+#ptbl button:first-of-type {
+	margin-left: 1em;
+}
+
+#ptbl select {
+	width: 100%;
+}
+
+#ptbl option {
+	padding: 0 1ex;
+}
+
+#sbox > p:last-of-type {
+	white-space: nowrap;
+	/* 11ex = width(#qtbl td:first-child) + margin-left(body) */
+	margin: 1ex 0 0.5ex 11ex;
+}
+
+#sbox > p:last-of-type > :nth-child(n+2) {
+	margin-left: 1ex;
+}
+
+/* *** default navbar *** */
+#bar {
+	padding: 0.2em 0.5em;
+}
+
+#bar ul { /* every list item is displayed as a "menu" item */
+	display: inline-block;
+	list-style: none outside none;
+	margin: 0;
+	padding: 0;
+	/* white-space: nowrap; */ /* hmm, sometimes good, sometimes not ;-) */
+}
+
+#bar li { /* menu item */
+	display: inline-block;
+	margin-right: 1ex;
+}
+
+#bar li:last-child { /* avoid early line wrap */
+	margin-right: 0;
+}
+
+#home, #history, #download { /* menu item icons */
+	display: inline-block;
+	width: 18px;
+	height: 18px;
+	vertical-align: middle;
+	background-image: url(./img/combined.png);
+	background-repeat: no-repeat;
+	margin-right: 0.25ex; /* distance between the icon and the label */
+}
+
+#home { /* h.gif */
+	background-position: 0 0;
+}
+
+#history { /* l.gif */
+	background-position: -18px 0;
+}
+
+#download { /* w.gif */
+	background-position: -36px 0;
+}
+
+#line, #defbox, #bar .annotate { /* no icon available yet */
+	width: 1px;
+	height: 15px;
+}
+#line::before, #defbox::before, #bar .annotate::before {
+	content: "|";
+	padding-right: 0.25ex; /* distance between the icon and the label */
+	color: black;
+	font-size: large;
+	font-weight: normal;
+}
+
+#search { /* q.gif */
+	background-image: url(./img/combined.png);
+	background-repeat: no-repeat;
+	background-position: -512px 2px;
+	padding-left: 19px;
+	min-height: 20px; /* 18px img + 2px padding */
+}
+
+#annotate.c, #history.c { /* indicate annotation/history available */
 	color: #666;
 }
 
-#MastheadLogo h1 {
+input.q { /* text input fields */
+	background-color: #ffffff;
+}
+
+input.submit { /* start search button */
+	font-weight: bold;
+}
+
+#sortfield {
+	display: inline-block;
+	margin-left: 6ex;
+}
+
+#sortfield label {
+	margin-right: 1ex;
+}
+#sortfield label:after {
+	content: ": ";
+}
+#sortby li:nth-child(n+2) :first-child::before {
+	content: "|";
+	padding: 0 1ex 0 0;
+	color: black;
+	font-size: large;
+	font-weight: normal;
+}
+/* ############### end of header ############## */
+
+
+/* ############### start of content ############## */
+#content {
+	position: fixed;
+	left: 0;
+	right: 0;
+	overflow: auto;
+	padding: 1ex; /* should be the same as body's margin */
+}
+
+
+/* *** help page *** */
+#help dfn { /* definitions */
+	text-decoration: underline;
+}
+
+#help .fields, #help .example {
+	margin-left: 3em;
+}
+
+#help dt {
+	font-weight: bold;
+}
+
+
+/* *** more page ***/
+#more {
+	line-height: 1.25em;
+}
+
+#more b { /* highlight matches */ 
+	background-color: #d6d6c0;
+}
+
+
+/* *** history page *** */
+table#revisions {
+	/* width: 100%; */ /* table with the history info for a file */
+	/* border-collapse: collapse; */ /* looks better with a small divider */
+}
+
+#revisions a.h	{ /* modified file list content */
+	font-size: small;
+	margin-left: 2em;
+}
+
+#revisions .filelist { /* "Show modified files" */
+	display: inline;
+}
+
+#revisions .filelist-hidden { /* "Hide modified files" */
 	display: none;
 }
 
-#MastheadLogo {
-	background-image: url(./img/Logo.png);
-	background-position: 2px 2px;
-	background-repeat: no-repeat;
-	float: right;
-	height: 43px;
-	width: 200px;
-	border: none;
-	text-decoration: none;
+#revisions tbody td:first-child {
+	/* rev number - git/mercurial revs numbers look bad with prop. fonts */
+	font-family: "Liberation Mono", monospace;
+	text-align: right;
 }
 
-#pagetitle {
-	float: left;
-	font-size: medium;
-	color:#755;
-	text-align:left;
-	padding:4px;
-	padding-right:2em;
+#revisions tbody td:nth-child(2), #revisions tbody td:nth-child(3) {
+	/* Compare and Date column */
+	text-align: center;
 }
 
-#filename {
-	font-size: large;
-	color:#000;
-	text-align:left;
-	padding-right:1em;
+#revisions tbody td:nth-child(4) { /* author column */
+	padding: 0 1ex;
+	text-align: center;
 }
 
-#bar {
-	padding-left: 0.5em;
-	padding-bottom:0.2em;
-	padding-top:0.2em;
-	border-bottom:1px solid #bba;
-	background-color:#FFFFE5;
+.rssbadge { /* RSS/XML Feed on history page */
+	text-align: right;
+	margin: 1ex 0;
 }
 
-#home {
-	padding-left:20px;
-	min-height:20px;
-	background-image: url(./img/h.gif);
-	background-repeat: no-repeat;
-	background-position: left;
+
+/* *** diff page *** */
+#diffbar { /* diff navbar: contains the tabs to select diff format */
+	margin-top: 1.5ex;
+	border-bottom: 1px solid #999;
+	white-space: nowrap;
 }
 
-#history {
-	padding-left:20px;
-	min-height:20px;
-	background-image: url(./img/l.gif);
-	background-repeat: no-repeat;
-	background-position: left;
+#diffbar .d, #difftable .d {
+	/* "Deleted" heading + highlight of deleted text in diff lines */
+	background-color: #ffcc40;
 }
 
-#download {
-	padding-left:20px;
-	min-height:20px;
-	background-image: url(./img/w.gif);
-	background-repeat: no-repeat;
-	background-position: left;
+#diffbar .a, #difftable .a {
+	/* "Added" heading + highlight of added text in diff lines */
+	background-color: #8bd98b;
 }
 
-#search {
-	padding-left:20px;
-	min-height:20px;
-	background-image: url(./img/q.gif);
-	background-repeat: no-repeat;
-	background-position: left;
+#diffbar .legend, #diffbar .tabs, #diffbar .ctype {
+	display: inline-block;
 }
 
-input.q {
-	background-color: #ffffff;
-	color: #000;
-	border: 1px solid #755;
-	font-weight: normal;
-	padding:3px;
+#diffbar .legend {
+	/* bottom must be the same as .tabs span(padding-bottom) */
+	margin: 0 3ex 0.75ex 1ex;
 }
 
-input.submit {
-	background-color:#d6d6c0;
-	color: #000;
-	padding: 2px;
-	border: 1px solid #755;
-	font-weight: bold;
-	min-width:4em;
-	text-align:center;
+#diffbar .legend span, #diffbar .ctype span {
+	padding: 0.2ex 1ex; /* bottom must be less than margin-bottom(.legend) */
 }
 
-input.submit:hover, input.submit:active {
-	color: #000;
-	background-color:#e0e0d0;
+#diffbar .tabs span {
+	padding: 0.75ex 1ex;
+	margin-left: 1ex;
+	border: 1px solid #999; /* should be the same as for #diffbar above */
+	border-radius: 0.75ex 0.75ex 0 00;
+	-moz-border-radius: 0.75ex 0.75ex 0 00;
+	background-color: #f5f5dc; /* navbar like */
 }
 
-.thead {
-	background-color:#d6d6c0;
-	font-weight:bold;
-	border:1px solid #755;
-	color:#000;
+#diffbar .tabs span.active, #diffbar .ctype span.active {
+	background-color: #d6d6c0; /* same as for table th */
 }
 
-.alt {
-	background-color: #e4e4c8;
-	border-top:1px solid #bba;
+#diffbar .tabs span.active {
+	border-bottom-style: dashed;
 }
 
-a:link			{color:#2030A2;text-decoration:none;}
-a:visited		{color:#202062;text-decoration:none;}
-a:active, a:hover	{color:#202062;text-decoration:underline;}
-img {border:0;}
-tt {margin:0;}
-form, pre {padding:0px;margin:0px;}
-
-#results, #src {
-
+#diffbar .ctype {
+	margin-left: 3ex; /* see margin-left .legend */
 }
 
-#src .l  {text-align:right;color:#888;background-color: #e4e4c8; border-right:1px solid #ddd;padding-right:.1em;margin-right:.2em;}
-#src .hl {text-align:right;color:#000;background-color: #e4e4c8; border-right:1px solid #ddd;padding-right:.1em;margin-right:.2em;}
-#src .l-hide  {display: none}
-#src .hl-hide {display: none}
-#src tt{padding-left:1em; padding-right:1em;}
-
-.sl {color:#999;text-decoration:underline;}
-td.a{color:#000}
-.n  {color:brown;} /* numbers */ 
-.s  {color:green;} /* strings */
-.c  {color:#666;} /* comments */
-.b  {color:#000; font-weight:bold;} /* comments */
-.k  {color:#000; font-family:monospace;} /* comments */
-
-a.s {color:#000;}  /* matched lines */
-a.f {color:#909;} /* file locals */
-div.a {color:#000}
-a.h {font-size:small; margin-left:2em;}
-
-a.d {color:#909; font-weight:bold; text-decoration:none;} /* definitions */
-
-a.xm {color:#c66; font-weight:bold; text-decoration:none;} /* macro */
-
-a.xa {color:#60c; font-weight:bold; text-decoration:none;} /* argument */
-a.xl {color:#963; font-weight:bold; text-decoration:none;} /* local */
-a.xv {color:#c30; font-weight:bold; text-decoration:none;} /* variable */
-
-a.xp {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* package */
-a.xc {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* class */
-a.xi {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* interface */
-a.xn {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* namespace */
-
-a.xe {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* enum */
-a.xer {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* enumerator */
-a.xs {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* struct */
-a.xt {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* typedef */
-a.xts {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* typedefs */
-a.xu {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* union */
-
-a.xfld {color:#090; font-weight:bold; text-decoration:none;} /* field */
-a.xmb {color:#090; font-weight:bold; text-decoration:none;} /* member */
-
-a.xf {color:#00f; font-weight:bold; text-decoration:none;} /* function */
-a.xmt {color:#00f; font-weight:bold; text-decoration:none;} /* method */
-a.xsr {color:#00f; font-weight:bold; text-decoration:none;} /* subroutine */
-
-#results {margin-top:.5em; padding-top:0.5em;}
-#results .con{font-size:small;color:#000;}
-#more .l, #results .l { color:#666; }
-#results .m {background-color:#ffb;}
-#results i {color: green; font-weight:bold;}
-#results .dir{
-	background-color:#d6d6c0;
-	padding-left:5px;
+#diffbar .ctype span {
+	border: 1px solid #755; /* same as for input */
+	border-radius: 0.75ex;
+	-moz-border-radius: 0.75ex;
+	background-color: #f5f5dc; /* navbar like */
+	margin-left: 1ex;
 }
 
-#dirlist a:link.r{ /* directory */
-	padding-left:19px;
-	background-image: url(./img/d.gif);
+#difftable {
+	font-size: small;
+}
+
+#difftable table { /* left side == prev. rev; right side "current" rev */
+	table-layout: fixed;
+	border-collapse: collapse;
+}
+
+#difftable table th { /* usually both rev. have changes: eq. space for both */
+	padding-top: 1ex;
+	width: 50%;
+}
+
+#difftable th:last-child, #difftable td:last-child {
+	border-left: 1px solid black;
+}
+
+#difftable .plain td {
+	padding: 2px;
+}
+
+#difftable .image td {
+	padding: 5px;
+}
+
+#difftable .k { /* border between the context and real diff lines */
+	border-bottom: 1px dashed #ccc;
+}
+
+
+/* *** list aka xref stuff *** */
+
+/* directory listing */
+table#dirlist { /* the "Name" column */
+	font-family:	"Liberation Mono", monospace;
+	border-style: none;
+	border-collapse: collapse;
+}
+
+#dirlist .r, #dirlist .p {
+	background-image: url(./img/combined.png);
 	background-repeat: no-repeat;
-	background-position:left;
+	width: 15px;
+	height: 15px;
+	padding: 0;
+	vertical-align: middle;
+	margin: 0 1ex 0 1em;
 }
-#dirlist a.r:visited,a.r:hover,a.r:active{ /* directory */
-	padding-left:19px;
-	background-image: url(./img/do.gif);
-	background-repeat: no-repeat;
-	background-position:left;
+
+#dirlist .r { /* directory name, d.gif */
+	background-position: -54px 0;
 }
-#dirlist tt{ margin-right:1em; margin-left:1em;}
-#dirlist .p{ /* page */
-	padding-left:19px;
-	background-image: url(./img/p.gif);
-	background-repeat: no-repeat;
-	background-position:left;
+
+#dirlist .p { /* file name, p.gif */
+	background-position: -69px 0;
 }
-#results td.q {white-space: nowrap;font-size: xx-small;width:3em;}
-#results td.f{
-	min-width:5em;
-	width:5em;
-	margin-left:1em;
-	padding-left:2em;
-	padding-right:.5em;
+
+#dirlist td:nth-child(n+2) { /* all but the first column */
+	padding-right: 1em;
 }
-#results p{padding:0.5em;}
 
-#more { line-height:1.25em;}
-#more b { background-color:#d6d6c0;}
+#dirlist tbody td:nth-child(4) {
+	text-align: right; /* CSS3 may allow " " (single space char) */
+}
 
-#diffbar {border-bottom: 1px solid #999; padding-left:2em;font-size:medium; }
-#difftable {border:#C5D5A9; border-collapse:collapse;font-size:small;}
-span.tab {
-	padding: 5px; padding-top:3px; padding-bottom: 0px;
-	margin-left: 2px; margin-right: 2px; margin-bottom:0px;
-	background-color:#d6d6c0;
-	border:1px solid #bba;
-	border-bottom:2px none #eee;
-	color:#fff;
+
+/* file display */
+#src {
 }
-span.tabsel {
-	padding: 6px;
-	padding-top:5px; 
-	padding-bottom: 1px; margin-left: 2px;
-	margin-right: 2px;
-	background-color:#ededd5;
-	border:1px solid #998;
-	border-bottom:2px solid #ededd5;
+
+#src pre {
+	margin: 0;
 }
-#difftable .d { background-color:#FFCC40;}
-#difftable .a { background-color:#8BD98B;}
-tr.k{border-bottom:1px dashed #ccc;}
-#difftable i  {color:#000;background-color:#d6d6c0;margin-right:.2em;padding-left:1em;padding-right:.5em;text-decoration:none; font-weight:normal;}
-#difftable i.a  {background-color:#FFDD80;color:#000;}
-strike.d{background-color:#bbddbb; margin-right:.2em;padding-left:1em;padding-right:.5em;}
-#difftable td.d { background-color:#eeeeee;}
-.grey{background-color:#eee;}
 
-#badge { padding:3px; }
+#src .l-hide, #src .hl-hide, .blame-hidden { /* hidden line number/annotation block */
+	display: none
+}
 
-.rssbadge { padding:3px; text-align:right; border:0px;}
+#src .l, #src .hl, .blame .r, .blame .a,
+#results .l, #more .l,
+#difftable i, del.d { /* line number/annotation block */
+	display: inline-block;
+	width: 6ex;
+	text-align: right;
+	padding: 0 1ex;
+	margin-right: .5ex;
+	background-color: #e4e4c8;
+	border-right: 1px solid #ddd;
+	color: #888;
+}
 
-#Footer {
+#src .hl { /* highlighted line number */
+	color: #000;
+}
+
+.blame .r { /* revision number "column" (annotation) */
+	text-align: right;
+}
+
+.blame .a { /* author name "column" (annotation) */
+	text-align: center;
+}
+
+/* source code highlighting - see org/opengrok/analysis/$lang/*Xref.lex */
+#src .n		{ /* numbers/label */	color: #a52a2a; } 
+#src .s		{ /* strings */			color: green; } 
+#src .c		{ /* comment */			color: #666; }
+#src .b		{ /* heading/title/bold */	color: #000; font-weight: bold; }
+#src .k		{ /* block display */ 	color: #000; font-family: "Liberation Mono", monospace; }
+#src a.d	{ /* symbol definition */	color: #909; font-weight: bold; }
+
+a.xm	{ /* macro */			color: #c66; font-weight: bold; }
+a.xa	{ /* argument */		color: #60c; font-weight: bold; }
+a.xl	{ /* local */			color: #963; font-weight: bold; }
+a.xv	{ /* variable */		color: #c30; font-weight: bold; }
+a.xc	{ /* class */			color: #909; font-weight: bold; font-style: italic; }
+a.xp	{ /* package */			color: #909; font-weight: bold; font-style: italic; }
+a.xi	{ /* interface */		color: #909; font-weight: bold; font-style: italic; }
+a.xn	{ /* namespace */		color: #909; font-weight: bold; font-style: italic; }
+a.xe	{ /* enum */			color: #909; font-weight: bold; font-style: italic; }
+a.xer	{ /* enumerator */		color: #909; font-weight: bold; font-style: italic; }
+a.xs	{ /* struct */			color: #909; font-weight: bold; font-style: italic; }
+a.xt	{ /* typedef */			color: #909; font-weight: bold; font-style: italic; }
+a.xts	{ /* typedefs */		color: #909; font-weight: bold; font-style: italic; }
+a.xu	{ /* union */			color: #909; font-weight: bold; font-style: italic; }
+a.xfld	{ /* field */			color: #090; font-weight: bold; }
+a.xmb	{ /* member */			color: #090; font-weight: bold; }
+a.xf	{ /* function */		color: #00f; font-weight: bold; }
+a.xmt	{ /* method */			color: #00f; font-weight: bold; }
+a.xsr	{ /* subroutine */		color: #00f; font-weight: bold; }
+
+#man table, #man td  { /* #man == troff src */
+	background-color: #ddddcc;
+	border: 1px;
+	padding: 2px;
+}
+
+#man p { /* a troff paragraph */
+	margin-top: 0.5em;
+	margin-bottom: 0;
+}
+
+#man div.b { /* man section headings etc. */
+	margin-top: 2em;
+}
+
+#man div.rs { /* a right-shifted block */
+	margin-left: 3em;
+	margin-bottom: 1em;
+}
+
+/* "Navigate" Popup */
+.sym_list_style {
+	position: absolute;
+	top: 100px;
+	left: 100px;
+	width: 100px;
+	height: 100px;
+	overflow: auto;
+	z-index: 10;
+	border: solid 1px #c0c0c0;
+	background-color: rgba(255,255,204,0.75);
+	color: #000;
+	font-size: 12px;
+	font-family: "Liberation Mono", monospace;
+	padding: 5px;
+}
+
+.sym_list_style_hide {
+	display: none;
+}
+
+/* search result page */
+#results {
+}
+
+#results p { /* pagetitle and slider */
+	padding: 0.5em;
+}
+
+#results .dir { /* directory row above matched files */
+	background-color: #d6d6c0;
+}
+
+#results .dir td { /* directory link */
+	padding-left: 1em;
+}
+
+#results td.q { /* 1st column: H A D */
+	white-space: nowrap;
+	font-size: xx-small;
+	padding: 0 1ex;
+}
+
+#results td.f { /* 2nd column: filename */
+	min-width: 5em;
+	padding: 0 1ex;
+}
+
+#results .con { /* 3rd column: line number + matched line contents */
+	font-size: small;
+}
+
+#results .s, #more .s { /* matched line contents */
+	color: #000;
+}
+
+#results i { /* match type description (method, interface etc.) */ 
+	color: green;
+	font-weight: bold;
+}
+
+#results .sel { /* slider item for the shown search result page */
+	background-color: #d6d6c0;
+	border: 1px #998 solid;
+	padding: .5em;
+	margin: 1px;
+}
+
+#results .more { /* slider item for the n-th search result page */
+	border: 1px #bba solid;
+	padding: .3em;
+	margin: 1px;
+}
+
+/* ############### start of footer ############## */
+#footer {
 	color: #755;
-	font-size: 95%;
-	padding-top: 1em;
+	font-size: small;
+	margin: 1ex 0;
 	border-top: 1px solid #bba;
 }
-#Footer p {
-	padding: 0.6em 0 1em 0;
-	margin:0;
-	text-align:center;
-}
-#Footer a {
-	color: #777;
+
+#footer p { /* footer text */
+	padding: 0;
+	margin: 0.2em;
+	text-align: center;
 }
 
-.more {border: 1px #bba solid;padding:.3em;margin:1px;}
-.sel {background-color:#d6d6c0;border: 1px #998 solid;padding:.5em;margin:1px;}
-.error {color: brown;}
-
-span.blame { }
-span.blame-hidden { display: none }
-
-.sym_list_style {
-    position:absolute;
-    top:100px;
-    left:100px;
-    width:100px;
-    height:100px;
-    overflow:auto;
-    z-index: 10;
-    border:solid 1px #c0c0c0;
-    background-color:#ffffcc;
-    color:#000;
-    font-size:12px;
-    font-family:monospace;
-    padding:5px;
-    opacity:0.9;
-    filter:alpha(opacity=90)
+#fti { /* servedby.png */
+	display: inline-block;
+	width: 177px;
+	height: 37px;
+	vertical-align: middle;
+	background-image: url(./img/combined.png);
+	background-repeat: no-repeat;
+	background-position: -255px 0;
 }
-.sym_list_style_hide {
-    display: none;
+#rssi { /* rss.png */
+	display: inline-block;
+	width: 80px;
+	height: 15px;
+	vertical-align: middle;
+	background-image: url(./img/combined.png);
+	background-repeat: no-repeat;
+	background-position: -432px 0;
 }
+/* ############### end of footer ############## */
\ No newline at end of file
diff -r 09f0768a7ec1 web/opensearch.jsp
--- a/web/opensearch.jsp	Fri May 06 21:41:59 2011 +0200
+++ b/web/opensearch.jsp	Sat May 07 06:44:23 2011 +0200
@@ -1,4 +1,6 @@
 <%-- 
+$Id$
+
 CDDL HEADER START
 
 The contents of this file are subject to the terms of the
@@ -19,53 +21,56 @@
 Copyright 2009 Sun Microsystems, Inc.  All rights reserved.
 Use is subject to license terms.
 
-ident	"%Z%%M% %I%     %E% SMI"
+Portions Copyright 2011 Jens Elkner.
 
---%><%@ page import = "java.util.List,
-javax.servlet.*,
-javax.servlet.http.*,java.util.Iterator,
-org.opensolaris.opengrok.configuration.RuntimeEnvironment,
-org.opensolaris.opengrok.configuration.Project,
-org.opensolaris.opengrok.web.*"
- session="false" errorPage="error.jsp" %><%@ include file="projects.jspf" %><% 
-String q    = request.getParameter("q");
-String defs = request.getParameter("defs");
-String refs = request.getParameter("refs");
-String hist = request.getParameter("hist");
-String path = request.getParameter("path");
-RuntimeEnvironment environment = RuntimeEnvironment.getInstance();
-String Context = request.getContextPath();
-String laf = environment.getWebappLAF();
-StringBuffer url = request.getRequestURL();
-url=url.delete(url.lastIndexOf("/"),url.length());
-/* TODO  Bug 11749
-String proj="project=";
- */
-String proj="";
-StringBuilder text = new StringBuilder();
-boolean firstIteration = true;
-if (project != null) {
-for (String tproj : project) {
-  if (!firstIteration) {
-    text.append(',');
-  }
-  text.append(tproj);
-/* TODO  Bug 11749
-   proj=proj + Util.URIEncode(tproj)+ ",";
- */
-  proj = proj + "project=" + Util.URIEncode(tproj)+ "&amp;";
-  firstIteration = false;
- }
-}
+--%><%@page  session="false" errorPage="error.jsp" import="
+java.util.Set,
 
-String projtext = text.toString();
+org.opensolaris.opengrok.web.Util"
+%><%@
 
+include file="pageconfig.jspf"
+
+%><%@
+
+include file="projects.jspf"
+
+%><%
+	/* ---------------------- opensearch.jsp start --------------------- */
+{
+	cfg = PageConfig.get(request);
+
+	StringBuilder url = new StringBuilder(128);
+	url.append("http://").append(request.getServerName());
+	int port = request.getServerPort();
+	if (port != 80) {
+		url.append(':').append(request.getServerPort());
+	}
+	port = url.length();	// mark
+	String img = url.append(cfg.getCssDir()).append("/img/icon.png").toString();
+	url.setLength(port);	// rewind
+
+	/* TODO  Bug 11749 ??? */
+	StringBuilder text = new StringBuilder();
+	url.append(request.getContextPath()).append(Prefix.SEARCH_P).append('?');
+	Set<String> projects = cfg.getRequestedProjects();
+	for (String name : projects) {
+		text.append(name).append(',');
+		Util.appendQuery(url, "project", name);
+	}
+	if (text.length() != 0) {
+		text.setLength(text.length()-1);
+	}
 %><?xml version="1.0" encoding="UTF-8"?>
 <OpenSearchDescription xmlns="http://a9.com/-/spec/opensearch/1.1/">
-<ShortName>OpenGrok <%=projtext%></ShortName>
-<Description>Search in OpenGrok <%=projtext%></Description>
-<InputEncoding>UTF-8</InputEncoding>
-<Image height="16" width="16" type="image/png"><%=url%>/<%=laf%>/img/icon.png</Image><%-- 
-<Url type="application/x-suggestions+json" template="suggestionURL"/>
---%><Url template="<%=url+Constants.searchP%>?<%=proj%>q={searchTerms}" type="text/html"/>
+	<ShortName>OpenGrok <%= text.toString() %></ShortName>
+	<Description>Search in OpenGrok <%= text.toString() %></Description>
+	<InputEncoding>UTF-8</InputEncoding>
+	<Image height="16" width="16" type="image/png"><%= img %></Image>
+<%-- <Url type="application/x-suggestions+json" template="suggestionURL"/>--%>
+	<Url template="<%= url.toString() %>q={searchTerms}" type="text/html"/>
 </OpenSearchDescription>
+<%
+}
+/* ---------------------- opensearch.jsp end --------------------- */
+%>
\ No newline at end of file
diff -r 09f0768a7ec1 web/pageheader.jspf
--- a/web/pageheader.jspf	Fri May 06 21:41:59 2011 +0200
+++ b/web/pageheader.jspf	Sat May 07 06:44:23 2011 +0200
@@ -18,7 +18,12 @@
 
 Copyright (c) 2007, 2010, Oracle and/or its affiliates. All rights reserved.
 
---%>
-<% String home = request.getContextPath() + "/";
+--%><% 
+/* ---------------------- pageheader.jspf start --------------------- */
+{
 %>
-<a href="<%=home%>"><span id="MastheadLogo"></span></a>
+<a href="<%= request.getContextPath() %>/"><span id="MastheadLogo"></span></a>
+<% 
+}
+/* ---------------------- pageheader.jspf start --------------------- */
+%>
diff -r 09f0768a7ec1 web/polished/jquery.tooltip.css
--- a/web/polished/jquery.tooltip.css	Fri May 06 21:41:59 2011 +0200
+++ b/web/polished/jquery.tooltip.css	Sat May 07 06:44:23 2011 +0200
@@ -2,8 +2,7 @@
 	position: absolute;
 	z-index: 3000;
 	border: 1px solid #111;
-	background-color: #eee;
+	background-color: rgba(238,238,238,0.75);
 	padding: 5px;
-        opacity: 0.90;
 }
 #tooltip h3, #tooltip div { margin: 0; font-size: small; }
diff -r 09f0768a7ec1 web/polished/print.css
--- a/web/polished/print.css	Fri May 06 21:41:59 2011 +0200
+++ b/web/polished/print.css	Sat May 07 06:44:23 2011 +0200
@@ -1,248 +1,484 @@
+/* common stuff */
 body {
-	background: none;
-	color: black;
-	font-family: arial, sans-serif;
-/*	padding: 1em;
-	margin: 0em;*/
-}
-#page {
-	background: none;
-	border: none;
-	/*margin:0;*/
+	font-family: "Liberation Sans", sans-serif;
+	margin: 1ex 1ex 0 1ex;
 }
 
-#Masthead {
-	background: none;
-	display:block;
-	border: none;
-	color:#000;
-	border-bottom: 1px solid #000;
-/*	padding-bottom:3px;
-	margin-bottom: 3px; */
-}
-#Masthead a{
-	color:#000;
-}
-#Masthead tt {
-	color:#000;
-}
-#header {
-	background:none;
-	min-height:40px;
-	height:40px;
-}
-
-#content {
-  position:absolute;
-  bottom:0px;
-  left:0px;
-  right:0px;
-  padding-left: 1em;  
-  padding-top:6px;
-  overflow:auto;
-  top:6em;
-  }
-
-#whole_header {
-  height:6em;
-  padding-left: 1em;  
-  position:absolute;
-  top:0;
-  right:0px;
-  left:0px;
-  /*width:98%;*/
-  overflow:auto;
-  }
-
-#MastheadLogo h1 {
-	display:inline;
-	font-size:medium;
-}
-
-#MastheadLogo {
-	background-color: white;
-	background-image: none;
-	float: left;
-	height: 48px;
-	width: 270px;
-	border: none;
+a {
 	text-decoration: none;
 }
 
-#pagetitle {
-	float: right;
-	font-size: medium;
-	text-align:right;
-	color:#000;
+a:link {
+	color: #2030A2;
 }
 
-#filename {
-	font-size: large;
-	text-align:right;
-	color:#000;
-	border: none;
+a:visited, a:active, a:hover {
+	color: #202062;
 }
 
-#bar {
-	padding-left: 0.5em;
-	margin-bottom:1em;
+a:active, a:hover {
+	text-decoration: underline;
+}
+
+img, tt, form, pre {
+	border: 0;
+}
+
+del {
+	text-decoration: line-through;
+}
+
+caption {
+	caption-side:top;
+	margin: 1ex 0;
+	text-align: left;
+}
+
+thead {
+	color: white;
+	background-color: #616ca7;
+}
+
+tbody tr:nth-child(EVEN) { /* alternate color for odd rows */
+	background-color: #e5e5e5;
+}
+
+input, button {
+	border: 1px solid #755;
+	border-radius: 0.75ex;
+	-moz-border-radius: 0.75ex;
+	background-color: #e5e5e5;
+}
+
+label {
+	font-weight: bold;
+}
+
+.pre { /* the diff content */
+	white-space: pre-wrap;
+	font-family: "Liberation Mono", monospace;
+	margin: 0;
+}
+
+#page { }
+
+.error { /* error messages */
+	color: #a52a2a;
+}
+
+/* ############### start of header ############## */
+#whole_header {
 	display: none;
 }
 
-input.q {
-	color: #000;
-	border: 1px solid #000;
-	font-weight: normal;
-	padding:2px;
+#pagetitle { /* short verbal summary/description of the shown content */
 }
 
-input.submit {
-	background-color: #ccc;
-	color: #000;
-	border: 1px solid #000;
-	padding: 0px;
-	font-weight: bold;
-	min-width:4em;
-	text-align:center;
+/* required for help page, only */
+#sbar { /* full search navbar */
+	border-bottom: 1px solid #bba;
+	border-top: 1px solid #bba;
+	background-color: #FFFFE5;
+	margin: 0;
+	clear: both;
 }
 
-input.submit:hover, input.submit:active {
-	background-color: #ddd;
-	color: #000;
-	border: 1px solid #000;
-	padding: 0px;
-	font-weight: bold;
-	min-width:4em;
-	text-align:center;
+/* *** full search navbar *** */
+#qtbl, #ptbl {
+	display: inline-block;
+	vertical-align: top;
+} 
+
+#qtbl tr {
+	background: none; /* remove alternating colors */
 }
 
-.thead {
-	background-image:none;
-	color:#000;
-	background-color:#ddd;
-	border-bottom:1px solid #000;
-	font-weight:bold;
+#ptbl > p {
+	text-align: center;
+	white-space: nowrap;
+	margin: 0.5ex 1ex;
 }
 
-.alt {
-	background:none;
+#qtbl td:first-child {
+    width: 10ex;
+    text-align: right;
 }
 
-a:link			{color:#000;text-decoration:none;}
-a:visited		{color:#000;text-decoration:none;}
-a:active, a:hover	{color:#000;text-decoration:underline;}
-img {border:0;}
+#qtbl td:nth-child(2) {
+	width: 45ex;
+}
 
-tt {margin:0;}
+#qtbl input.q {
+	width: 100%;
+}
 
+#ptbl {
+	margin-left: 2em;
+}
 
-form, pre {padding:0px;margin:0px;}
-#src {font-size:75%;}
-#src .l  {color:#000;border-right: 1px solid #000;background-color:#fff;margin-right:.5em;padding-right:.5em;text-decoration:none;}
-#src .hl {color:#000;border-right: 1px solid #000;background-color:#fff;margin-right:.5em;padding-right:.5em;text-decoration:none;font-weight:bold;}
-#src .l-hide  {display: none}
-#src .hl-hide {display: none}
-#src tt{padding-left:1em; padding-right:1em;}
-.sl {color:#999;text-decoration:underline;}
-td.a{color:#000}
-.n  {color:#000;}
-.s  {color:#000;}
-.c  {color:#000; font-style:italic;}
+#ptbl button {
+	font-size: small;
+}	
 
-a.s {color:#000;}  /* matched lines */
-a.f {color:#000;}
-div.a{color:#000}
+#ptbl button:first-of-type {
+	margin-left: 1em;
+}
 
-a.d {color:#000; font-weight:bold; text-decoration:none;} /* definitions */
+#ptbl select {
+	width: 100%;
+}
 
-a.xm {color:#c66; font-weight:bold; text-decoration:none;} /* macro */
+#ptbl option {
+	padding: 0 1ex;
+}
 
-a.xa {color:#60c; font-weight:bold; text-decoration:none;} /* argument */
-a.xl {color:#963; font-weight:bold; text-decoration:none;} /* local */
-a.xv {color:#c30; font-weight:bold; text-decoration:none;} /* variable */
+#sbox > p:last-of-type {
+	white-space: nowrap;
+	/* 11ex = width(#qtbl td:first-child) + margin-left(body) */
+	margin: 1ex 0 0.5ex 11ex;
+}
 
-a.xp {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* package */
-a.xc {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* class */
-a.xi {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* interface */
-a.xn {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* namespace */
+#sbox > p:last-of-type > :nth-child(n+2) {
+	margin-left: 1ex;
+}
 
-a.xe {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* enum */
-a.xer {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* enumerator */
-a.xs {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* struct */
-a.xt {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* typedef */
-a.xts {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* typedefs */
-a.xu {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* union */
+input.q { /* text input fields */
+	background-color: #ffffff;
+}
 
-a.xfld {color:#090; font-weight:bold; text-decoration:none;} /* field */
-a.xmb {color:#090; font-weight:bold; text-decoration:none;} /* member */
+input.submit { /* start search button */
+	font-weight: bold;
+}
+/* ############### end of header ############## */
 
-a.xf {color:#00f; font-weight:bold; text-decoration:none;} /* function */
-a.xmt {color:#00f; font-weight:bold; text-decoration:none;} /* method */
-a.xsr {color:#00f; font-weight:bold; text-decoration:none;} /* subroutine */
 
-#results .con{font-size:small;color:#000;}
-#more .l, #results .l { color:#888; }
-#results .m {background-color:#ffb;}
-#results i {color: #000; font-weight:bold;}
-#results tr.dir{background-color:#fff;border-top:3px solid #000;}
-#results td.q {visibility: hidden;}
-#results td.f{width:3em;padding-left:2em;padding-right:.5em;}
+/* ############### start of content ############## */
+#content {
+}
 
-#more { line-height:1.25em;}
-#more b { background-color:transparent;}
 
-#diffbar {border-bottom: 1px solid #000; padding-left:2em;font-size:medium; margin-top:1em;}
-#difftable {border:#000; border-collapse:collapse;font-size:small;}
-span.tab    { padding: 5px; padding-top:3px; padding-bottom: 0px; margin-left: 2px; margin-right: 2px; margin-bottom:0px ;background-color:#eee; border:1px solid #000;border-bottom:1px none;}
-span.tabsel { padding: 6px; padding-top:5px; padding-bottom: 1px; margin-left: 2px; margin-right: 2px; background-color:#fff; border:1px solid #000; border-bottom:2px solid #fff;}
-#difftable .d { background-color:#FFCC40;font-weight:bold;}
-#difftable .a { background-color:#8BD98B;font-weight:bold;}
-tr.k {border-bottom:1px dashed #000;}
-#difftable i  {color:#666;background-color:#ddd;margin-right:.2em;padding-left:1em;padding-right:.5em;text-decoration:none;}
-#difftable i.a  {background-color:#FFDD80;color:#666; font-weight:bold;}
-strike.d{background-color:#bbddbb; margin-right:.2em;padding-left:1em;padding-right:.5em;}
-#difftable td.d { background-color:#eeeeee;}
-.grey{background-color:#eee;}
+/* *** help page *** */
+#help dfn { /* definitions */
+	text-decoration: underline;
+}
 
-#badge img { display:none; }
+#help .fields, #help .example {
+	margin-left: 3em;
+}
 
-#Footer {
-	background: none;
-	color: #000;
-	font-size: 75%;
-	margin-top: 1em;
+#help dt {
+	font-weight: bold;
 }
-#Footer p {
-	margin: 0.6em 0 1em 0;
-	text-align:center;
+
+
+/* *** more page ***/
+#more {
+	line-height: 1.25em;
 }
-#Footer a {
+
+#more b { /* highlight matches */ 
+	background-color: #e5e5e5;
+}
+
+
+/* *** history page *** */
+table#revisions {
+	/* width: 100%; */ /* table with the history info for a file */
+	/* border-collapse: collapse; */ /* looks better with a small divider */
+}
+
+#revisions a.h	{ /* modified file list content */
+	font-size: small;
+	margin-left: 2em;
+}
+
+#revisions .filelist { /* "Show modified files" */
+	display: inline;
+}
+
+#revisions .filelist-hidden { /* "Hide modified files" */
+	display: none;
+}
+
+#revisions tbody td:first-child {
+	/* rev number - git/mercurial revs numbers look bad with prop. fonts */
+	font-family: "Liberation Mono", monospace;
+	text-align: right;
+}
+
+#revisions tbody td:nth-child(2), #revisions tbody td:nth-child(3) {
+	/* Compare and Date column */
+	text-align: center;
+}
+
+#revisions tbody td:nth-child(4) { /* author column */
+	padding: 0 1ex;
+	text-align: center;
+}
+
+.rssbadge { /* RSS/XML Feed on history page */
+	text-align: right;
+	margin: 1ex 0;
+}
+
+
+/* *** diff page *** */
+#diffbar { /* diff navbar: contains the tabs to select diff format */
+	display: none;
+}
+
+#difftable {
+	font-size: small;
+}
+
+#difftable .d {
+	/* "Deleted" heading + highlight of deleted text in diff lines */
+	background-color: #ffcc40;
+}
+
+#difftable .a {
+	/* "Added" heading + highlight of added text in diff lines */
+	background-color: #8bd98b;
+}
+
+#difftable table { /* left side == prev. rev; right side "current" rev */
+	table-layout: fixed;
+	border-collapse: collapse;
+}
+
+#difftable table th { /* usually both rev. have changes: eq. space for both */
+	padding-top: 1ex;
+	width: 50%;
+}
+
+#difftable th:last-child, #difftable td:last-child {
+	border-left: 1px solid black;
+}
+
+#difftable .plain td {
+	padding: 2px;
+}
+
+#difftable .image td {
+	padding: 5px;
+}
+
+#difftable .k { /* border between the context and real diff lines */
+	border-bottom: 1px dashed #ccc;
+}
+
+
+/* *** list aka xref stuff *** */
+
+/* directory listing */
+table#dirlist { /* the "Name" column */
+	font-family:	"Liberation Mono", monospace;
+	border-style: none;
+	border-collapse: collapse;
+}
+
+#dirlist .r, #dirlist .p {
+	background-image: url(./img/combined.png);
+	background-repeat: no-repeat;
+	width: 15px;
+	height: 15px;
+	padding: 0;
+	vertical-align: middle;
+	margin: 0 1ex 0 1em;
+}
+
+#dirlist .r { /* directory name, d.gif */
+	background-position: -54px 0;
+}
+
+#dirlist .p { /* file name, p.gif */
+	background-position: -69px 0;
+}
+
+#dirlist td:nth-child(n+2) { /* all but the first column */
+	padding-right: 1em;
+}
+
+#dirlist tbody td:nth-child(4) {
+	text-align: right; /* CSS3 may allow " " (single space char) */
+}
+
+
+/* file display */
+#src {
+}
+
+#src pre {
+	margin: 0;
+	font-size: small;
+}
+
+#src .l-hide, #src .hl-hide, .blame-hidden { /* hidden line number/annotation block */
+	display: none
+}
+
+#src .l, #src .hl, .blame .r, .blame .a,
+#results .l, #more .l,
+#difftable i, del.d { /* line number/annotation block */
+	display: inline-block;
+	width: 6ex;
+	text-align: right;
+	padding: 0 1ex;
+	margin-right: .5ex;
+	background-color: #ffffcc;
+	border-right: 1px solid #ddd;
+	color: #888;
+}
+
+#src .hl { /* highlighted line number */
 	color: #000;
 }
 
-.more {background-color:transparent;border: 1px #ccc solid;padding:.3em;margin:1px;}
-.sel {background-color:#ddd;border: 1px #000 solid;padding:.5em;margin:1px;}
+.blame .r { /* revision number "column" (annotation) */
+	text-align: right;
+}
 
-span.blame { }
-span.blame-hidden { display: none }
+.blame .a { /* author name "column" (annotation) */
+	text-align: center;
+}
 
-.sym_list_style {
-    position:absolute;
-    top:100px;
-    left:100px;
-    width:100px;
-    height:100px;
-    overflow:auto;
-    z-index: 10;
-    border:solid 1px #c0c0c0;
-    background-color:#ffffcc;
-    color:#000;
-    font-size:12px;
-    font-family:monospace;
-    padding:5px;
-    opacity:0.9;
-    filter:alpha(opacity=90)
+/* source code highlighting - see org/opengrok/analysis/$lang/*Xref.lex */
+#src .n		{ /* numbers/label */	color: #a52a2a; } 
+#src .s		{ /* strings */			color: green; } 
+#src .c		{ /* comment */			color: #666; }
+#src .b		{ /* heading/title/bold */	color: #000; font-weight: bold; }
+#src .k		{ /* block display */ 	color: #000; font-family: "Liberation Mono", monospace; }
+#src a.d	{ /* symbol definition */	color: #909; font-weight: bold; }
+
+a.xm	{ /* macro */			color: #c66; font-weight: bold; }
+a.xa	{ /* argument */		color: #60c; font-weight: bold; }
+a.xl	{ /* local */			color: #963; font-weight: bold; }
+a.xv	{ /* variable */		color: #c30; font-weight: bold; }
+a.xc	{ /* class */			color: #909; font-weight: bold; font-style: italic; }
+a.xp	{ /* package */			color: #909; font-weight: bold; font-style: italic; }
+a.xi	{ /* interface */		color: #909; font-weight: bold; font-style: italic; }
+a.xn	{ /* namespace */		color: #909; font-weight: bold; font-style: italic; }
+a.xe	{ /* enum */			color: #909; font-weight: bold; font-style: italic; }
+a.xer	{ /* enumerator */		color: #909; font-weight: bold; font-style: italic; }
+a.xs	{ /* struct */			color: #909; font-weight: bold; font-style: italic; }
+a.xt	{ /* typedef */			color: #909; font-weight: bold; font-style: italic; }
+a.xts	{ /* typedefs */		color: #909; font-weight: bold; font-style: italic; }
+a.xu	{ /* union */			color: #909; font-weight: bold; font-style: italic; }
+a.xfld	{ /* field */			color: #090; font-weight: bold; }
+a.xmb	{ /* member */			color: #090; font-weight: bold; }
+a.xf	{ /* function */		color: #00f; font-weight: bold; }
+a.xmt	{ /* method */			color: #00f; font-weight: bold; }
+a.xsr	{ /* subroutine */		color: #00f; font-weight: bold; }
+
+#man table, #man td  { /* #man == troff src */
+	background-color: #e5e5e5;
+	border: 1px;
+	padding: 2px;
 }
-.sym_list_style_hide {
-    display: none;
+
+#man p { /* a troff paragraph */
+	margin-top: 0.5em;
+	margin-bottom: 0;
 }
+
+#man div.b { /* man section headings etc. */
+	margin-top: 2em;
+}
+
+#man div.rs { /* a right-shifted block */
+	margin-left: 3em;
+	margin-bottom: 1em;
+}
+
+/* "Navigate" Popup */
+.sym_list_style_hide, .sym_list_style {
+	display: none;
+}
+
+/* search result page */
+#results {
+}
+
+#results p { /* pagetitle and slider */
+	padding: 0.5em;
+}
+
+#results .dir { /* directory row above matched files */
+	background-color: #cccccc;
+}
+
+#results .dir td { /* directory link */
+	padding-left: 1em;
+}
+
+#results td.q { /* 1st column: H A D */
+	white-space: nowrap;
+	font-size: xx-small;
+	padding: 0 1ex;
+}
+
+#results td.f { /* 2nd column: filename */
+	min-width: 5em;
+	margin-left: 1em;
+	padding: 0 1ex;
+}
+
+#results .con { /* 3rd column: line number + matched line contents */
+	font-size: small;
+}
+
+#results .s, #more .s { /* matched line contents */
+	color: #000;
+}
+
+#results i { /* match type description (method, interface etc.) */ 
+	color: green;
+	font-weight: bold;
+}
+
+#results .sel { /* slider item for the shown search result page */
+	background-color: #e5e5e5;
+	border: 1px #998 solid;
+	padding: .5em;
+	margin: 1px;
+}
+
+#results .more { /* slider item for the n-th search result page */
+	border: 1px #bba solid;
+	padding: .3em;
+	margin: 1px;
+}
+
+/* ############### start of footer ############## */
+#footer {
+	color: #755;
+	font-size: small;
+	margin: 1ex 0;
+	border-top: 1px solid #bba;
+}
+
+#footer p { /* footer text */
+	padding: 0;
+	margin: 0.2em;
+	text-align: center;
+}
+
+#fti { /* servedby.png */
+	display: inline-block;
+	width: 177px;
+	height: 37px;
+	vertical-align: middle;
+	background-image: url(./img/combined.png);
+	background-repeat: no-repeat;
+	background-position: -255px 0;
+}
+#rssi { /* rss.png */
+	display: inline-block;
+	width: 80px;
+	height: 15px;
+	vertical-align: middle;
+	background-image: url(./img/combined.png);
+	background-repeat: no-repeat;
+	background-position: -432px 0;
+}
+/* ############### end of footer ############## */
\ No newline at end of file
diff -r 09f0768a7ec1 web/polished/style.css
--- a/web/polished/style.css	Fri May 06 21:41:59 2011 +0200
+++ b/web/polished/style.css	Sat May 07 06:44:23 2011 +0200
@@ -1,376 +1,744 @@
+/* common stuff */
 body {
 	background-color: #d8dbd7;
-	/*font-size: 100.01%; /* 12px [1] */
 	color: black;
-	font-family: arial, sans-serif;
+	font-family: "Liberation Sans", sans-serif;
+	margin: 1ex 1ex 0 1ex;
 }
 
-#page {
-	/*background-color: #fff;*/
-/*	margin: 0.5em;
-	margin-top: 1em;
-	padding:1px;
-	border: 1px solid #bbb;
-	border-right: 1px solid #888;
-	border-bottom: 1px solid #666;*/
+a {
+	text-decoration: none;
 }
 
-#header {
-	min-height:40px;
-	height:40px;
-	display:block;
-	background-image: url(./img/t.gif);
-	background-position: 1px 0px;
-	background-repeat: repeat-x;
-	background-color:#fff;
+a:link {
+	color: #2030A2;
 }
 
-#content {
-  position:absolute;  
-  bottom:0px;
-  left:0px;
-  right:0px;
-  padding-left: 1em;  
-  padding-top:6px;
-  overflow:auto;
-  top:6em;
-  }
+a:visited, a:active, a:hover {
+	color: #202062;
+}
 
-#whole_header {
-  height:6em;
-  padding-left: 1em;
-/*padding-right: 1em;*/
-  position:absolute;
-  top:0;
-  right:0px;
-  left:0px;
-  /*width:98%;*/
-  overflow:auto;
-  }  
+a:active, a:hover {
+	text-decoration: underline;
+}
 
-#Masthead {
-	display:block;
-/*	padding:3px;*/
+img, tt, form, pre {
+	border: 0;
+}
+
+del {
+	text-decoration: line-through;
+}
+
+caption {
+	caption-side:top;
+	margin: 1ex 0;
+	text-align: left;
+}
+
+thead {
+	color: white;
 	background-color: #426477;
-	background-image: url(./img/b.gif);
-	background-repeat: repeat-x;
-	border:1px solid #bbb;
+}
+
+tbody tr:nth-child(EVEN) { /* alternate color for odd rows */
+	background-color: #e9ede8;
+}
+
+input, button {
+	border: 1px solid #bbb #755;
+	border-radius: 0.75ex;
+	-moz-border-radius: 0.75ex;
+	background-image: -webkit-gradient(
+		linear, left top, left bottom,
+	    color-stop(0.70, #ffffff),
+		color-stop(1, #e6e6e6)
+	);
+	background-image: -moz-linear-gradient(
+		center top,
+		#ffffff 70%,
+		#e0e0e0 100%
+	);
+}
+
+input:hover, input:active, button:hover, button:active {
+	color: #444444;
+	background-image: -webkit-gradient(
+		linear, left bottom, left top,
+	    color-stop(0.70, #fdfdfd),
+		color-stop(1, #e0e0e0)
+	);
+	background-image: -moz-linear-gradient(
+		center bottom,
+		#fdfdfd 70%,
+		#e0e0e0 100%
+	);
+}
+
+label {
+}
+
+.pre { /* the diff content */
+	white-space: pre-wrap;
+	font-family: "Liberation Mono", monospace;
+	margin: 0;
+}
+
+#page { }
+
+.error { /* error messages */
+	color: #a52a2a;
+}
+
+.active {
+	font-weight: bold;
+	color: #e08c00;
+}
+
+/* ############### start of header ############## */
+#whole_header { 
+	background-color: white;
+}
+
+/* *** banner/deco above navbar *** */
+#header { 
+	display: inline-block;
+	width: 100%;
+	background-image: -webkit-gradient(
+		linear, left bottom, left top,
+	    color-stop(0.70, #ffffff),
+		color-stop(1, #e6e6e6)
+	);
+	background-image: -moz-linear-gradient(
+		center bottom,
+		#fdfdfd 70%,
+		#e0e0e0 100%
+	);
+}
+
+#MastheadLogo {
+	width: 167px;
+	height: 43px;
+	float: right;
+	background-image: url(./img/combined.png);
+	background-repeat: no-repeat;
+	background-position: -81px 0;
+	margin: 0;
+}
+
+#pagetitle { /* short verbal summary/description of the shown content */
+}
+
+#filename { /* "Cross Reference: ..." */
+	font-size: x-large;
+	font-weight: bold;
+	margin-right: 1em;
+}
+
+#Masthead { /* breadcrumb */
+	clear: left;
+	background-color: #426477;
+	border: 1px solid #bbb;
+}
+
+#Masthead tt { /* slashes in the xref: line */
+	color: #eee;
 }
 
 #Masthead a {
-	color: #fff;
-}
-#Masthead tt {
-	color: #eee;
+	color: white;
 }
 
-#MastheadLogo h1 {
+#sbar, #bar { /* full search and default navbar */
+	border-bottom: 1px solid #bba;
+	border-top: 1px solid #bba;
+	background-color: #e9ede8;
+	margin: 0;
+	padding: 1ex 0;
+	clear: both;
+}
+
+/* *** full search navbar *** */
+#qtbl, #ptbl {
+	display: inline-block;
+	vertical-align: top;
+} 
+
+#qtbl tr {
+	background: none; /* remove alternating colors */
+}
+
+#ptbl > p {
+	text-align: center;
+	white-space: nowrap;
+	margin: 0.5ex 1ex;
+}
+
+#qtbl td:first-child {
+    width: 10ex;
+    text-align: right;
+}
+
+#qtbl td:nth-child(2) {
+	width: 45ex;
+}
+
+#qtbl input.q {
+	width: 100%;
+}
+
+#ptbl {
+	margin-left: 2em;
+}
+
+#ptbl button {
+	font-size: small;
+}	
+
+#ptbl button:first-of-type {
+	margin-left: 1em;
+}
+
+#ptbl select {
+	width: 100%;
+}
+
+#ptbl option {
+	padding: 0 1ex;
+}
+
+#sbox {
+	padding: 1ex 0;
+	background-color: #D8DBD7;
+}
+
+#sbox > p:last-of-type {
+	white-space: nowrap;
+	/* 11ex = width(#qtbl td:first-child) + margin-left(body) */
+	margin: 1ex 0 0.5ex 11ex;
+}
+
+#sbox > p:last-of-type > :nth-child(n+2) {
+	margin-left: 1ex;
+}
+
+/* *** default navbar *** */
+#bar {
+	padding: 0.2em 0.5em;
+}
+
+#bar ul { /* every list item is displayed as a "menu" item */
+	display: inline-block;
+	list-style: none outside none;
+	margin: 0;
+	padding: 0;
+	/* white-space: nowrap; */ /* hmm, sometimes good, sometimes not ;-) */
+}
+
+#bar li { /* menu item */
+	display: inline-block;
+	/* distance between label end and the icon of the next item */
+	margin-right: 1ex;
+}
+
+#home, #history, #download { /* menu item icons */
+	display: inline-block;
+	width: 18px;
+	height: 18px;
+	vertical-align: middle;
+	background-image: url(./img/combined.png);
+	background-repeat: no-repeat;
+	margin-right: 0.25ex; /* distance between the icon and the label */
+}
+
+#home { /* h.gif */
+	background-position: 0 0;
+}
+
+#history { /* l.gif */
+	background-position: -18px 0;
+}
+
+#download { /* w.gif */
+	background-position: -36px 0;
+}
+
+#line, #defbox, #bar .annotate { /* no icon available yet */
+	width: 1px;
+	height: 15px;
+}
+
+#line::before, #defbox::before, #bar .annotate::before {
+	content: "|";
+	padding-right: 0.25ex; /* distance between the icon and the label */
+	color: black;
+	font-size: large;
+	font-weight: normal;
+}
+
+#search { /* q.gif */
+	background-image: url(./img/combined.png);
+	background-repeat: no-repeat;
+	background-position: -505px 2px;
+	padding-left: 19px;
+	min-height: 20px; /* 18px img + 2px padding */
+}
+
+#annotate.c, #history.c { /* indicate annotation/history available */
+	color: #666;
+}
+
+input.q { /* text input fields */
+	background-color: #fdfdfd;
+	background-image: none;
+}
+
+input.submit { /* start search button */
+	font-weight: bold;
+	padding: 0.25ex;
+}
+
+button.help {
+	padding: 0.25ex;
+}
+
+#sortfield {
+	display: inline-block;
+	margin-left: 6ex;
+}
+
+#sortfield label {
+	margin-right: 1ex;
+}
+#sortfield label:after {
+	content: ": ";
+}
+
+#sortby li:nth-child(n+2) :first-child::before {
+	content: "|";
+	padding: 0 1ex 0 0;
+	color: black;
+	font-size: large;
+	font-weight: normal;
+}
+/* ############### end of header ############## */
+
+
+/* ############### start of content ############## */
+#content {
+	position: fixed;
+	left: 0;
+	right: 0;
+	overflow: auto;
+	padding: 1ex; /* should be the same as body's margin */
+}
+
+
+/* *** help page *** */
+#help dfn { /* definitions */
+	text-decoration: underline;
+}
+
+#help .fields, #help .example {
+	margin-left: 3em;
+}
+
+#help dt {
+	font-weight: bold;
+}
+
+
+/* *** more page ***/
+#more {
+	line-height: 1.25em;
+	background-color: white;
+}
+
+#more b { /* highlight matches */ 
+	background-color: #ffff99;
+}
+
+
+/* *** history page *** */
+table#revisions {
+	/* width: 100%; */ /* table with the history info for a file */
+	/* border-collapse: collapse; */ /* looks better with a small divider */
+}
+
+#revisions a.h	{ /* modified file list content */
+	font-size: small;
+	margin-left: 2em;
+}
+
+#revisions .filelist { /* "Show modified files" */
+	display: inline;
+	color: #ffdd80;
+}
+
+#revisions .filelist-hidden { /* "Hide modified files" */
 	display: none;
 }
 
-#MastheadLogo {
-	background-image: url(./img/Logo.png);
-	background-position: 2px 2px;
-	background-repeat: no-repeat;
-	float: right;
-	height: 43px;
-	width: 200px;
-	border: none;
-	text-decoration: none;
+#revisions tbody td:first-child {
+	/* rev number - git/mercurial revs numbers look bad with prop. fonts */
+	font-family: "Liberation Mono", monospace;
+	text-align: right;
 }
 
-#pagetitle {
-	float: left;
-	font-size: medium;
-	color:#5382a1;
-	text-align:left;
-	padding:4px;
-	padding-right:2em;
+#revisions tbody td:nth-child(2), #revisions tbody td:nth-child(3) {
+	/* Compare and Date column */
+	text-align: center;
 }
 
-#filename {
-	font-size: large;
-	color:#000;
-	text-align:left;
-	padding-right:1em;
+#revisions tbody td:nth-child(4) { /* author column */
+	padding: 0 1ex;
+	text-align: center;
 }
 
-#bar {
-	padding-left: 0.5em;
-	padding-bottom:0.2em;
-	padding-top:0.2em;
-	background-color: #e9ede8;
-	background-image: url(./img/r.gif);
-	background-repeat: repeat-x;
-	border-bottom:1px solid #ccc;
+.rssbadge { /* RSS/XML Feed on history page */
+	text-align: right;
+	margin: 1ex 0;
 }
 
-#home {
-	padding-left:20px;
-	min-height:20px;
-	background-image: url(./img/h.gif);
-	background-repeat: no-repeat;
-	background-position: left;
+
+/* *** diff page *** */
+#diffbar { /* diff navbar: contains the tabs to select diff format */
+	margin-top: 1.5ex;
+	border-bottom: 1px solid #999;
+	white-space: nowrap;
 }
 
-#history {
-	padding-left:20px;
-	min-height:20px;
-	background-image: url(./img/l.gif);
-	background-repeat: no-repeat;
-	background-position: left;
+#diffbar .d, #difftable .d {
+	/* "Deleted" heading + highlight of deleted text in diff lines */
+	background-color: #ffcc40;
 }
 
-#download {
-	padding-left:20px;
-	min-height:20px;
-	background-image: url(./img/w.gif);
-	background-repeat: no-repeat;
-	background-position: left;
+#diffbar .a, #difftable .a {
+	/* "Added" heading + highlight of added text in diff lines */
+	background-color: #8bd98b;
 }
 
-#search {
-	padding-left:20px;
-	min-height:20px;
-	background-image: url(./img/q.gif);
-	background-repeat: no-repeat;
-	background-position: left;
+#diffbar .legend, #diffbar .tabs, #diffbar .ctype {
+	display: inline-block;
 }
 
-input.q {
-	background-color: #ffffff;
-	color: #000;
-	border-left: 1px solid #777;
-	border-top: 1px solid #666;
-	border-right: 1px solid #bbb;
-	border-bottom: 1px solid #ccc;
-	font-weight: normal;
-	padding:3px;
+#diffbar .legend {
+	/* bottom must be the same as .tabs span(padding-bottom) */
+	margin: 0 3ex 0.75ex 1ex;
 }
 
-input.submit {
-	background-image: url(./img/f.gif);
-	background-position:bottom;
-	background-repeat: repeat-x;
-	background-color:#fff;
-	color: #000;
-	padding: 2px;
-	border-left: 1px solid #bbb;
-	border-top: 1px solid #bbb;
-	border-right: 1px solid #888;
-	border-bottom: 1px solid #666;
-	font-weight: bold;
-	min-width:4em;
-	text-align:center;
+#diffbar .legend span, #diffbar .ctype span {
+	padding: 0.2ex 1ex; /* bottom must be less than margin-bottom(.legend) */
 }
 
-input.submit:hover, input.submit:active {
-	background-image: url(./img/t.gif);
-	background-position: 1px 1px;
-	background-repeat: repeat-x;
-	background-color:#fff;
-	color: #444;
-	padding: 2px;
-	border-left: 1px solid #aaa;
-	border-top: 1px solid #aaa;
-	border-right: 1px solid #666;
-	border-bottom: 1px solid #444;
-	font-weight: bold;
-	min-width:4em;
-	text-align:center;
+#diffbar .tabs span {
+	padding: 0.75ex 1ex;
+	margin-left: 1ex;
+	border: 1px solid #999; /* should be the same as for #diffbar above */
+	border-radius: 0.75ex 0.75ex 0 00;
+	-moz-border-radius: 0.75ex 0.75ex 0 00;
+	background-color: #f5f5dc; /* navbar like */
 }
 
-.thead {
-	background-color:#426477;
-	font-weight:bold;
-	background-image: url(./img/b.gif);
-	background-repeat: repeat-x;
-	border:1px solid #bbb;
-	color:#fff;
+#diffbar .tabs span.active, #diffbar .ctype span.active {
+	background-color: #426477; /* same as for table th */
 }
 
-.alt {
-	background-color: #e9ede8;
+#diffbar .tabs span.active {
+	border-bottom-style: dashed;
 }
 
-a:link			{color:#2030A2;text-decoration:none;}
-a:visited		{color:#202062;text-decoration:none;}
-a:active, a:hover	{color:#202062;text-decoration:underline;}
-img {border:0;}
-tt {margin:0;}
-form, pre {padding:0px;margin:0px;}
-
-#results, #src {
-	background-color:#fff;
+#diffbar .ctype {
+	margin-left: 3ex; /* see margin-left .legend */
 }
 
-#src .l  {text-align:right;color:#888;background-color: #e9ede8; border-right:1px solid #ddd;padding-right:.1em;margin-right:.2em;}
-#src .hl {text-align:right;color:#000;background-color: #e9ede8; border-right:1px solid #ddd;padding-right:.1em;margin-right:.2em;}
-#src .l-hide  {display: none}
-#src .hl-hide {display: none}
-#src tt{padding-left:1em; padding-right:1em;}
-
-.sl {color:#999;text-decoration:underline;}
-td.a{color:#000}
-.n  {color:brown;} /* numbers */ 
-.s  {color:green;} /* strings */
-.c  {color:#666;} /* comments */
-.b  {color:#000; font-weight:bold;} /* comments */
-.k  {color:#000; font-family:monospace;} /* comments */
-
-a.s {color:#000;}  /* matched lines */
-a.f {color:#909;} /* file locals */
-div.a {color:#000}
-a.h {font-size:small; margin-left:2em;}
-
-
-a.d {color:#909; font-weight:bold; text-decoration:none;} /* definitions */
-
-a.xm {color:#c66; font-weight:bold; text-decoration:none;} /* macro */
-
-a.xa {color:#60c; font-weight:bold; text-decoration:none;} /* argument */
-a.xl {color:#963; font-weight:bold; text-decoration:none;} /* local */
-a.xv {color:#c30; font-weight:bold; text-decoration:none;} /* variable */
-
-a.xp {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* package */
-a.xc {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* class */
-a.xi {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* interface */
-a.xn {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* namespace */
-
-a.xe {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* enum */
-a.xer {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* enumerator */
-a.xs {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* struct */
-a.xt {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* typedef */
-a.xts {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* typedefs */
-a.xu {color:#909; font-weight:bold; font-style:italic; text-decoration:none;} /* union */
-
-a.xfld {color:#090; font-weight:bold; text-decoration:none;} /* field */
-a.xmb {color:#090; font-weight:bold; text-decoration:none;} /* member */
-
-a.xf {color:#00f; font-weight:bold; text-decoration:none;} /* function */
-a.xmt {color:#00f; font-weight:bold; text-decoration:none;} /* method */
-a.xsr {color:#00f; font-weight:bold; text-decoration:none;} /* subroutine */
-
-#results {margin-top:.5em; padding-top:0.5em;}
-#results .con{font-size:small;color:#000;}
-#more .l, #results .l { color:#666; }
-#results .m {background-color:#ffb;}
-#results i {color: green; font-weight:bold;}
-#results .dir{
-	background-color:#CDCECD;
-	padding-left:5px;
+#diffbar .ctype span {
+	border: 1px solid #755; /* same as for input */
+	border-radius: 0.75ex;
+	-moz-border-radius: 0.75ex;
+	background-color: #f5f5dc; /* navbar like */
+	margin-left: 1ex;
 }
 
-#dirlist a:link.r{ /* directory */
-	padding-left:19px;
-	background-image: url(./img/d.gif);
-	background-repeat: no-repeat;
-	background-position:left;
-}
-#dirlist a.r:visited,a.r:hover,a.r:active{ /* directory */
-	padding-left:19px;
-	background-image: url(./img/do.gif);
-	background-repeat: no-repeat;
-	background-position:left;
-}
-#dirlist tt{ margin-right:1em; margin-left:1em;}
-#dirlist .p{ /* page */
-	padding-left:19px;
-	background-image: url(./img/p.gif);
-	background-repeat: no-repeat;
-	background-position:left;
-}
-#results td.q {white-space: nowrap;font-size: xx-small;width:3em;}
-#results td.f{
-	min-width:5em;
-	width:5em;
-	margin-left:1em;
-	padding-left:2em;
-	padding-right:.5em;
-}
-#results p{padding:0.5em;}
-
-#more { line-height:1.25em;}
-#more b { background-color:#ffff99;}
-
-#diffbar {border-bottom: 1px solid #999; padding-left:2em;font-size:medium; }
-#difftable {border:#C5D5A9; border-collapse:collapse;font-size:small;}
-span.tab {
-	padding: 5px; padding-top:3px; padding-bottom: 0px;
-	margin-left: 2px; margin-right: 2px; margin-bottom:0px;
-	background-color:#ddd;
-	border:1px solid #999;
-	border-bottom:2px none #eee;
-	color:#fff;
-}
-span.tabsel {
-	padding: 6px;
-	padding-top:5px; 
-	padding-bottom: 1px; margin-left: 2px;
-	margin-right: 2px;
-	background-image: url(./img/t.gif);
-	background-position: 1px 1px;
-	background-repeat: repeat-x;
-	background-color:#fff;
-	border:1px solid #999;        
-	border-bottom:2px solid #fff;
-}
-#difftable .d { background-color:#FFCC40;}
-#difftable .a { background-color:#8BD98B;}
-tr.k{border-bottom:1px dashed #ccc;}
-#difftable i  {color:#666;background-color:#ddd;margin-right:.2em;padding-left:1em;padding-right:.5em;text-decoration:none; font-weight:normal;}
-#difftable i.a  {background-color:#FFDD80;color:#666;}
-strike.d{background-color:#bbddbb; margin-right:.2em;padding-left:1em;padding-right:.5em;}
-#difftable td.d { background-color:#eeeeee;}
-.grey{background-color:#eee;}
-
-#badge { padding:3px; }
-
-.rssbadge { padding:3px; text-align:right; border:0px;}
-
-#Footer {
-	background-color: white;
-	color: #777;
-	font-size: 95%;
-	padding-top: 1em;
-	border-top: 1px solid #ddd;
-	background-image: url(./img/f.gif);
-	background-position: bottom;
-	background-repeat: repeat-x;
-}
-#Footer p {
-	padding: 0.6em 0 1em 0;
-	margin:0;
-	text-align:center;
-}
-#Footer a {
-	color: #555;
+#difftable {
+	font-size: small;
 }
 
-.more {background-color:#fff;border: 1px #ccc solid;padding:.3em;margin:1px;}
-.sel {background-color:#A3B8CB;border: 1px #336 solid;padding:.5em;margin:1px;}
-.error {color: brown;}
+#difftable table { /* left side == prev. rev; right side "current" rev */
+	table-layout: fixed;
+	border-collapse: collapse;
+}
 
-span.blame { }
-span.blame-hidden { display: none }
+#difftable table th { /* usually both rev. have changes: eq. space for both */
+	padding-top: 1ex;
+	width: 50%;
+}
 
+#difftable th:last-child, #difftable td:last-child {
+	border-left: 1px solid black;
+}
+
+#difftable .plain td {
+	padding: 2px;
+}
+
+#difftable .image td {
+	padding: 5px;
+}
+
+#difftable .k { /* border between the context and real diff lines */
+	border-bottom: 1px dashed #ccc;
+}
+
+
+/* *** list aka xref stuff *** */
+
+/* directory listing */
+table#dirlist { /* the "Name" column */
+	font-family:	"Liberation Mono", monospace;
+	border-style: none;
+	border-collapse: collapse;
+}
+
+#dirlist .r, #dirlist .p {
+	background-image: url(./img/combined.png);
+	background-repeat: no-repeat;
+	width: 15px;
+	height: 15px;
+	padding: 0;
+	vertical-align: middle;
+	margin: 0 1ex 0 1em;
+}
+
+#dirlist .r { /* directory name, d.gif */
+	background-position: -54px 0;
+}
+
+#dirlist .p { /* file name, p.gif */
+	background-position: -69px 0;
+}
+
+#dirlist td:nth-child(n+2) { /* all but the first column */
+	padding-right: 1em;
+}
+
+#dirlist tbody td:nth-child(4) {
+	text-align: right; /* CSS3 may allow " " (single space char) */
+}
+
+
+/* file display */
+#src {
+	background: white;
+}
+
+#src pre {
+	margin: 0;
+}
+
+#src .l-hide, #src .hl-hide, .blame-hidden { /* hidden line number/annotation block */
+	display: none
+}
+
+#src .l, #src .hl, .blame .r, .blame .a,
+#results .l, #more .l,
+#difftable i, del.d { /* line number/annotation block */
+	display: inline-block;
+	width: 6ex;
+	text-align: right;
+	padding: 0 1ex;
+	margin-right: .5ex;
+	background-color: #e9ede8;
+	border-right: 1px solid #ddd;
+	color: #888;
+}
+
+#src .hl { /* highlighted line number */
+	color: #000;
+}
+
+.blame .r { /* revision number "column" (annotation) */
+	text-align: right;
+}
+
+.blame .a { /* author name "column" (annotation) */
+	text-align: center;
+}
+
+/* source code highlighting - see org/opengrok/analysis/$lang/*Xref.lex */
+#src .n		{ /* numbers/label */	color: #a52a2a; } 
+#src .s		{ /* strings */			color: green; } 
+#src .c		{ /* comment */			color: #666; }
+#src .b		{ /* heading/title/bold */	color: #000; font-weight: bold; }
+#src .k		{ /* block display */ 	color: #000; font-family: "Liberation Mono", monospace; }
+#src a.d	{ /* symbol definition */	color: #909; font-weight: bold; }
+
+a.xm	{ /* macro */			color: #c66; font-weight: bold; }
+a.xa	{ /* argument */		color: #60c; font-weight: bold; }
+a.xl	{ /* local */			color: #963; font-weight: bold; }
+a.xv	{ /* variable */		color: #c30; font-weight: bold; }
+a.xc	{ /* class */			color: #909; font-weight: bold; font-style: italic; }
+a.xp	{ /* package */			color: #909; font-weight: bold; font-style: italic; }
+a.xi	{ /* interface */		color: #909; font-weight: bold; font-style: italic; }
+a.xn	{ /* namespace */		color: #909; font-weight: bold; font-style: italic; }
+a.xe	{ /* enum */			color: #909; font-weight: bold; font-style: italic; }
+a.xer	{ /* enumerator */		color: #909; font-weight: bold; font-style: italic; }
+a.xs	{ /* struct */			color: #909; font-weight: bold; font-style: italic; }
+a.xt	{ /* typedef */			color: #909; font-weight: bold; font-style: italic; }
+a.xts	{ /* typedefs */		color: #909; font-weight: bold; font-style: italic; }
+a.xu	{ /* union */			color: #909; font-weight: bold; font-style: italic; }
+a.xfld	{ /* field */			color: #090; font-weight: bold; }
+a.xmb	{ /* member */			color: #090; font-weight: bold; }
+a.xf	{ /* function */		color: #00f; font-weight: bold; }
+a.xmt	{ /* method */			color: #00f; font-weight: bold; }
+a.xsr	{ /* subroutine */		color: #00f; font-weight: bold; }
+
+#man table, #man td  { /* #man == troff src */
+	background-color: #ddddcc;
+	border: 1px;
+	padding: 2px;
+}
+
+#man p { /* a troff paragraph */
+	margin-top: 0.5em;
+	margin-bottom: 0;
+}
+
+#man div.b { /* man section headings etc. */
+	margin-top: 2em;
+}
+
+#man div.rs { /* a right-shifted block */
+	margin-left: 3em;
+	margin-bottom: 1em;
+}
+
+/* "Navigate" Popup */
 .sym_list_style {
-    position:absolute;
-    top:100px;
-    left:100px;
-    width:100px;
-    height:100px;
-    overflow:auto;
-    z-index: 10;
-    border:solid 1px #c0c0c0;
-    background-color:#ffffcc;
-    color:#000;
-    font-size:12px;
-    font-family:monospace;
-    padding:5px;
-    opacity:0.9;
-    filter:alpha(opacity=90)
+	position: absolute;
+	top: 100px;
+	left: 100px;
+	width: 100px;
+	height: 100px;
+	overflow: auto;
+	z-index: 10;
+	border: solid 1px #c0c0c0;
+	background-color: rgba(255,255,204,0.75);
+	color: #000;
+	font-size: 12px;
+	font-family: "Liberation Mono", monospace;
+	padding: 5px;
 }
+
 .sym_list_style_hide {
-    display: none;
+	display: none;
 }
+
+/* search result page */
+#results {
+	background: white;
+	padding: 1ex 0;
+}
+
+#results p { /* pagetitle and slider */
+	padding: 0.5em;
+}
+
+#results table {
+	border-collapse: collapse;
+	width: 100%;
+}
+
+#results .dir { /* directory row above matched files */
+	background-color: #cdcecd;
+}
+
+#results .dir td { /* directory link */
+	padding-left: 1em;
+}
+
+#results td.q { /* 1st column: H A D */
+	white-space: nowrap;
+	font-size: xx-small;
+	padding: 3px;
+	width: 3em;
+}
+
+#results td.f { /* 2nd column: filename */
+	width: 3em;
+	padding: 3px 0.5em 3px 2em;
+}
+
+#results .con { /* 3rd column: line number + matched line contents */
+	font-size: small;
+}
+
+#results .con .all {
+	margin-left: 6ex; /* width(#src .l) + 1ex */ 
+}
+
+#results .s, #more .s { /* matched line contents */
+	color: #000;
+}
+
+#results i { /* match type description (method, interface etc.) */ 
+	color: green;
+	font-weight: bold;
+}
+
+#results .sel { /* slider item for the shown search result page */
+	background-color: #a3b8cb;
+	border: 1px solid #333366;
+	padding: .5em;
+	margin: 1px;
+}
+
+#results .more { /* slider item for the n-th search result page */
+	border: 1px #ccc solid;
+	padding: .3em;
+	margin: 1px;
+}
+
+/* ############### start of footer ############## */
+#footer {
+	color: #777777;
+	font-size: small;
+	margin: 0 0 1ex 0;
+	border-top: 1px solid #dddddd;
+	background-image: -webkit-gradient(
+		linear, left top, left bottom,
+	    color-stop(0.70, #ffffff),
+		color-stop(1, #e6e6e6)
+	);
+	background-image: -moz-linear-gradient(
+		center top,
+		#ffffff 70%,
+		#e6e6e6 100%
+	);
+}
+
+#footer p { /* footer text */
+	padding: 0;
+	margin: 0.2em;
+	text-align: center;
+}
+
+#fti { /* servedby.png */
+	display: inline-block;
+	width: 177px;
+	height: 37px;
+	vertical-align: middle;
+	background-image: url(./img/combined.png);
+	background-repeat: no-repeat;
+	background-position: -248px 0;
+}
+#rssi { /* rss.png */
+	display: inline-block;
+	width: 80px;
+	height: 15px;
+	vertical-align: middle;
+	background-image: url(./img/combined.png);
+	background-repeat: no-repeat;
+	background-position: -425px 0;
+}
+/* ############### end of footer ############## */
\ No newline at end of file
diff -r 09f0768a7ec1 web/projects.jspf
--- a/web/projects.jspf	Fri May 06 21:41:59 2011 +0200
+++ b/web/projects.jspf	Sat May 07 06:44:23 2011 +0200
@@ -1,4 +1,6 @@
 <%-- 
+$Id$
+
 CDDL HEADER START
 
 The contents of this file are subject to the terms of the
@@ -17,72 +19,30 @@
 CDDL HEADER END
 
 Copyright (c) 2007, 2010, Oracle and/or its affiliates. All rights reserved.
+Portions Copyright 2011 Jens Elkner.
 
---%><%@ page import="org.opensolaris.opengrok.configuration.*,
-java.util.ArrayList,java.util.List,java.util.Iterator" %><%
+--%><%@page import="
+java.util.TreeSet,
 
-// Use UTF-8 if no encoding is specified in the request
-if (request.getCharacterEncoding() == null) {
-    request.setCharacterEncoding("UTF-8");
+org.opensolaris.opengrok.web.Prefix,
+org.opensolaris.opengrok.web.PageConfig,
+org.opensolaris.opengrok.configuration.Project
+"%><%
+/* ---------------------- projects.jspf start --------------------- */
+{
+	// Use UTF-8 if no encoding is specified in the request
+	if (request.getCharacterEncoding() == null) {
+		request.setCharacterEncoding("UTF-8");
+	}
+
+	cfg = PageConfig.get(request);
+	cfg.getEnv().setUrlPrefix(request.getContextPath() + Prefix.SEARCH_R + "?");
+	
+	String projects = cfg.getRequestedProjectsAsString();
+	if (projects.length() != 0) {
+		Cookie cookie = new Cookie("OpenGrokProject", projects);
+		response.addCookie(cookie);
+	}
 }
-
-boolean hasProjects = false;
-// watch for iterators for below in case you will want to change it to List<Project>
-//TODO also deduplication at this point might be nice
-List<String> project = new ArrayList<String>();
-List<Project> projects;
-String context = request.getContextPath();
-RuntimeEnvironment env = RuntimeEnvironment.getInstance();
-env.setUrlPrefix(context + "/s?");
-env.register();
-StringBuffer sproject=new StringBuffer("");
-
-if (env.hasProjects()) {
-    hasProjects = true;
-    projects = env.getProjects();
-       
-    String pr[] = request.getParameterValues("project");
-    // see if a new parameter(s) is passed...
-    // code bellow will accept more parameters project= and their format is either one by one, or separated by "," in one parameter
-    if (pr != null && pr[0].length() > 0) {
-       for (int midx = 0; midx < pr.length; midx++) {
-        //NOTE this means project name CANNOT have a "," char in it !!!
-        String p[] = pr[midx].split(",");
-        for (int idx = 0; idx < p.length; idx++) {
-            if (Project.getByDescription(p[idx]) != null) {
-                project.add(p[idx]);
-            }
-        }
-       }
-    } else { //fill in from cookies        
-        Cookie[] cookies = request.getCookies();
-        if (cookies != null) {
-            for (Cookie cookie : cookies) {
-                if (cookie.getName().equals("OpenGrokProject")) {
-                    for (String proj : cookie.getValue().split(",")) {
-                        if (proj != "") {
-                            if (Project.getByDescription(proj) != null) {
-                            project.add(proj);
-                            }
-                        }
-                    }
-                }
-            }
-        }        
-    }
-
-    //default project is only shown when no other project there (no cookie, empty project list)
-    Project defaultProject = env.getDefaultProject();
-    if (defaultProject != null && project.isEmpty()) {
-       project.add(defaultProject.getDescription());
-    }
-
-    //only save found projects into cookies
-    for (Iterator it = project.iterator(); it.hasNext();) {
-        sproject.append((String) it.next() + ",");
-    }
-    // update the cookie
-    Cookie cookie = new Cookie("OpenGrokProject", sproject.toString());
-    response.addCookie(cookie);
-}
+/* ---------------------- projects.jspf end --------------------- */
 %>
\ No newline at end of file
diff -r 09f0768a7ec1 web/raw.jsp
--- a/web/raw.jsp	Fri May 06 21:41:59 2011 +0200
+++ b/web/raw.jsp	Sat May 07 06:44:23 2011 +0200
@@ -1,4 +1,6 @@
 <%--
+$Id$
+
 CDDL HEADER START
 
 The contents of this file are subject to the terms of the
@@ -18,69 +20,78 @@
 
 Copyright 2008 Sun Microsystems, Inc.  All rights reserved.
 Use is subject to license terms.
---%><%@page import="java.io.File,
+
+Portions Copyright 2011 Jens Elkner.
+
+--%><%@page import="
+java.io.File,
+java.io.FileInputStream,
+java.io.FileNotFoundException,
 java.io.InputStream,
 java.io.OutputStream,
-java.io.FileInputStream,
-java.io.FileNotFoundException,
+
 org.opensolaris.opengrok.configuration.RuntimeEnvironment,
-org.opensolaris.opengrok.history.HistoryGuru"%><%
-String path = request.getPathInfo();
-if (path == null) {
-  path = "";
+org.opensolaris.opengrok.history.HistoryGuru,
+org.opensolaris.opengrok.web.PageConfig"
+%><%@
+
+include file="pageconfig.jspf"
+
+%><%
+/* ---------------------- raw.jsp start --------------------- */
+{
+	cfg = PageConfig.get(request);
+	String redir = cfg.canProcess();
+	if (redir == null || redir.length() > 0) {
+		if (redir != null) {
+			response.sendRedirect(redir);
+		} else {
+			response.sendError(HttpServletResponse.SC_NOT_FOUND);
+		}
+		return;
+	}
+	
+	File f = cfg.getResourceFile();
+	String revision = cfg.getRequestedRevision();
+	if (revision.length() == 0) {
+		revision = null;
+	}
+	InputStream in = null;
+	try {
+		if (revision != null) {
+			in = HistoryGuru.getInstance().getRevision(f.getParent(), 
+				f.getName(), revision.substring(2));
+		} else {
+			long flast = cfg.getLastModified();
+			if (request.getDateHeader("If-Modified-Since") >= flast) {
+				response.setStatus(HttpServletResponse.SC_NOT_MODIFIED);
+				return;
+			}
+			in = new FileInputStream(f);
+			response.setContentLength((int) f.length());
+			response.setDateHeader("Last-Modified", f.lastModified());
+		}
+	} catch (Exception e) {
+		response.sendError(HttpServletResponse.SC_NOT_FOUND);
+		return ;
+	}	
+	String mimeType = getServletContext().getMimeType(f.getAbsolutePath());
+	response.setContentType(mimeType);
+
+	try {
+		response.setHeader("content-disposition", "attachment; filename=" 
+			+ f.getName());
+		OutputStream o = response.getOutputStream();
+		byte[] buffer = new byte[8192];
+		int nr;
+		while ((nr = in.read(buffer)) > 0) {
+			o.write(buffer, 0, nr);
+		}
+		o.flush();
+		o.close();
+	} finally {
+		in.close();
+	}
 }
-RuntimeEnvironment env = RuntimeEnvironment.getInstance();
-File file = new File(env.getSourceRootPath(), path);
-try {
-  path = env.getPathRelativeToSourceRoot(file, 0);
-} catch (FileNotFoundException e) {
-  response.sendError(response.SC_NOT_FOUND);
-  return;
-}
-
-if (!file.exists() || !file.canRead() || RuntimeEnvironment.getInstance().getIgnoredNames().ignore(file)) {
-  response.sendError(response.SC_NOT_FOUND);
-  return;
-} else if (file.isDirectory()) {
-  response.sendError(response.SC_NOT_FOUND, "Can't download a directory");
-  return;
-}
-
-String mimeType = getServletContext().getMimeType(file.getAbsolutePath());
-response.setContentType(mimeType);
-
-String revision = request.getParameter("r");
-if (revision != null && revision.length() == 0) {
-  revision = null;
-}
-
-InputStream in = null;
-
-if (revision != null) {
-  try{
-    in = HistoryGuru.getInstance().getRevision(file.getParent(), file.getName(), revision);
-  } catch (Exception e) {
-    response.sendError(404, "Revision not found");
-    return ;
-  }
-} else {
-  response.setContentLength((int)file.length());
-  response.setDateHeader("Last-Modified", file.lastModified());
-  in = new FileInputStream(file);
-}
-
-try {
-  response.setHeader("content-disposition", "attachment; filename=" + file.getName());
-
-  OutputStream o = response.getOutputStream();
-  byte[] buffer = new byte[8192];
-  int nr;
-  while ((nr = in.read(buffer)) > 0) {
-    o.write(buffer, 0, nr);
-  }
-  o.flush();
-  o.close();
-} finally {
-  in.close();
-}
-%>
+/* ---------------------- raw.jsp end-------------------- */
+%>
\ No newline at end of file
diff -r 09f0768a7ec1 web/rss.jsp
--- a/web/rss.jsp	Fri May 06 21:41:59 2011 +0200
+++ b/web/rss.jsp	Sat May 07 06:44:23 2011 +0200
@@ -1,4 +1,6 @@
 <%-- 
+$Id$
+
 CDDL HEADER START
 
 The contents of this file are subject to the terms of the
@@ -19,138 +21,98 @@
 Copyright 2005 Sun Microsystems, Inc.  All rights reserved.
 Use is subject to license terms.
 
-ident	"@(#)rss.jsp 1.2     05/12/02 SMI"
+Portions Copyright 2011 Jens Elkner.
 
---%><%@ page import = "javax.servlet.*,
-java.lang.*,
-javax.servlet.http.*,
-java.util.*,
-java.io.*,
-org.opensolaris.opengrok.analysis.*,
-org.opensolaris.opengrok.web.*,
-org.opensolaris.opengrok.history.*,
-org.opensolaris.opengrok.index.IgnoredNames,
-org.opensolaris.opengrok.configuration.*,
-org.apache.lucene.analysis.*,
-org.apache.lucene.document.*,
-org.apache.lucene.index.*,
-org.apache.lucene.search.*,
-org.apache.lucene.queryParser.*,
-java.text.*"
-%><%@ page session="false" %><%@ page errorPage="error.jsp"%><%
-String context = request.getContextPath();
-String servlet = request.getServletPath();
-String reqURI = request.getRequestURI();
-String path = request.getPathInfo();
-if(path == null) path = "";
-RuntimeEnvironment env = RuntimeEnvironment.getInstance();
-env.setUrlPrefix(context + Constants.searchR+"?");
-env.register();
-String rawSource = env.getSourceRootPath();
-String resourcePath = rawSource + path;
-File resourceFile = new File(resourcePath);
-resourcePath = resourceFile.getAbsolutePath();
-boolean valid;
-String basename = resourceFile.getName();
-if("/".equals(path)) {
-    basename = "Cross Reference";
-}
-boolean isDir = false;
-String parent = null;
-String parentBasename = resourceFile.getParentFile().getName();
-IgnoredNames ignoredNames = env.getIgnoredNames();
-if (resourcePath.length() < rawSource.length()
-|| !resourcePath.startsWith(rawSource)
-|| !resourceFile.canRead()
-|| ignoredNames.ignore(basename) || ignoredNames.ignore(parentBasename)) {
-    valid = false;
-    response.sendError(404);
-    return;
-} else {
-    valid = true;
-    path = resourcePath.substring(rawSource.length());
-    if (File.separatorChar == '\\') {
-        path = path.replace('\\','/');
-    }
-    isDir = resourceFile.isDirectory();
-    if (isDir && !reqURI.endsWith("/")) {
-        response.sendRedirect(context + servlet + path +"/");
-    } else {
-        String dtag = "";
-        
-        try {
-            EftarFileReader ef = new EftarFileReader(env.getDataRootPath() + "/index/dtags.eftar");
-            dtag = ef.get(path);
-	    ef.close();
-        } catch (Exception e) {
-            dtag = "";
-        }
-        int lastSlash = path.lastIndexOf('/');
-        parent = (lastSlash != -1) ? path.substring(0, lastSlash) : "";
-        int pLastSlash = parent.lastIndexOf('/');
-        parentBasename = pLastSlash != -1 ? parent.substring(pLastSlash+1) : parent;
-        response.setContentType("text/xml");
-        Date start = new Date();
+--%><%@page import="
+java.io.File,
+java.text.SimpleDateFormat,
+java.util.Set,
+
+org.opensolaris.opengrok.history.DirectoryHistoryReader,
+org.opensolaris.opengrok.history.History,
+org.opensolaris.opengrok.history.HistoryEntry,
+org.opensolaris.opengrok.history.HistoryGuru,
+org.opensolaris.opengrok.web.Util,
+org.opensolaris.opengrok.web.Prefix,
+org.opensolaris.opengrok.web.PageConfig"
+%><%@ page session="false" errorPage="error.jsp"%><%@
+
+include file="pageconfig.jspf"
+
+%><%
+/* ---------------------- rss.jsp start --------------------- */
+{
+	cfg = PageConfig.get(request);
+	String redir = cfg.canProcess();
+	if (redir == null || redir.length() > 0) {
+		if (redir != null) {
+			response.sendRedirect(redir);
+		} else {
+			response.sendError(HttpServletResponse.SC_NOT_FOUND);
+		}
+		return;
+	}
+	cfg.getEnv().setUrlPrefix(request.getContextPath() + Prefix.SEARCH_R + '?');
+	String path = cfg.getPath();
+	String dtag = cfg.getDefineTagsIndex();
+	response.setContentType("text/xml");
 %><?xml version="1.0"?>
-<?xml-stylesheet type="text/xsl" href="<%=context%>/rss.xsl.xml"?>
+<?xml-stylesheet type="text/xsl" href="<%= request.getContextPath() 
+	%>/rss.xsl.xml"?>
 <rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/">
 <channel>
-    <title>Changes in <%=Util.htmlize(basename)%></title>
-    <link><%=Util.htmlize(request.getRequestURL())%></link>
-    <description><%=Util.htmlize(dtag)%></description>
-    <language>en</language>
-    <copyright>Copyright 2005</copyright>
-    <generator>Java</generator>
-    <%
-    Format df = new SimpleDateFormat("dd-MMM-yyyy");
-    History hist = null;
-    if(isDir) {
-        String[] apaths = request.getParameterValues("also");
-        String apath = path;
-        if (apaths!= null && apaths.length>0) {
-            StringBuilder paths = new StringBuilder(path);
-            for(int i=0; i< apaths.length; i++) {
-                paths.append(' ');
-                paths.append(apaths[i]);
-            }
-            apath = paths.toString();
-        }
-        hist = new DirectoryHistoryReader(apath).getHistory();
-    } else {
-        File f = new File(rawSource + parent, basename);
-        hist = HistoryGuru.getInstance().getHistory(f);
-    }
-    if (hist != null) {
-        int i = 20;
-        for (HistoryEntry entry : hist.getHistoryEntries()) {
-            if (i-- <= 0) break;
-            String rev = entry.getRevision();
-            if (entry.isActive()) {
+	<title>Changes in <%= path.length() == 0 
+		? "Cross Reference" 
+		: Util.htmlize(cfg.getResourceFile().getName()) %></title>
+	<link><%= Util.htmlize(request.getRequestURL()) %></link>
+	<description><%= Util.htmlize(dtag) %></description>
+	<language>en</language>
+	<copyright>Copyright 2005</copyright>
+	<generator>Java</generator><%
+	History hist = null;
+	if(cfg.isDir()) {
+		hist = new DirectoryHistoryReader(cfg.getHistoryDirs()).getHistory();
+	} else {
+		hist = HistoryGuru.getInstance().getHistory(cfg.getResourceFile());
+	}
+	if (hist != null) {
+		int i = 20;
+		for (HistoryEntry entry : hist.getHistoryEntries()) {
+			if (i-- <= 0) {
+				break;
+			}
+			if (entry.isActive()) {
+	%>
+	<item>
+		<title><%= Util.htmlize(entry.getMessage()) %></title>
+		<description><%
+				if (cfg.isDir()) {
+					Set<String> files = entry.getFiles();
+					if (files != null) {
+						for (String ifile : files) {
+			%><%= Util.htmlize(ifile) %><%
+						}
+					}
+				} else {
+			%><%= Util.htmlize(path) %> - <%= 
+				Util.htmlize(entry.getRevision()) %><%
+				}
+		%></description>
+		<pubDate><%
+				SimpleDateFormat df = 
+					new SimpleDateFormat("EEE, dd MMM yyyy HH:mm:ss Z");
+				Util.htmlize(df.format(entry.getDate()));
+		%></pubDate>
+		<dc:creator><%= Util.htmlize(entry.getAuthor()) %></dc:creator>
+	</item>
+<%
+			}
+		}
+	}
 %>
-<item>
-    <title><%=Util.htmlize(entry.getMessage())%></title>
-    <description><%
-    if(isDir) {
-        Set<String> files = entry.getFiles();
-        if(files != null) {
-            for (String ifile : files) {
-    %><%=Util.htmlize(ifile)%>
+</channel>
+</rss>
 <%
-            }
-        }
-    } else {
-    %><%=Util.htmlize(path)%> - <%=Util.htmlize(entry.getRevision())%><%
-    }
-    %></description>
-    <pubDate><%=Util.htmlize(entry.getDate().toString())%></pubDate>
-    <dc:creator><%=Util.htmlize(entry.getAuthor())%></dc:creator>
-</item>
-<%
-            }
-        }
-    }
-%></channel></rss>
-<%
-    }
 }
+/* ---------------------- rss.jsp end --------------------- */
 %>
diff -r 09f0768a7ec1 web/search.jsp
--- a/web/search.jsp	Fri May 06 21:41:59 2011 +0200
+++ b/web/search.jsp	Sat May 07 06:44:23 2011 +0200
@@ -1,4 +1,6 @@
 <%-- 
+$Id$
+
 CDDL HEADER START
 
 The contents of this file are subject to the terms of the
@@ -17,474 +19,212 @@
 CDDL HEADER END
 
 Copyright (c) 2005, 2011, Oracle and/or its affiliates. All rights reserved.
+Portions Copyright 2011 Jens Elkner.
 
---%><%@ page import = "javax.servlet.*,
-java.lang.Integer,
-javax.servlet.http.*,
-java.util.Hashtable,
-java.util.Vector,
-java.util.Date,
-java.util.ArrayList,
-java.util.List,
-java.lang.*,
-java.io.*,
-java.io.StringReader,
-org.opensolaris.opengrok.analysis.*,
-org.opensolaris.opengrok.index.IndexDatabase,
-org.opensolaris.opengrok.search.*,
-org.opensolaris.opengrok.web.*,
-org.opensolaris.opengrok.search.context.*,
-org.opensolaris.opengrok.configuration.*,
-org.apache.lucene.search.spell.LuceneDictionary,
-org.apache.lucene.search.spell.SpellChecker,
-org.apache.lucene.search.SortField,
-org.apache.lucene.store.FSDirectory,
-org.apache.lucene.analysis.*,
-org.apache.lucene.document.*,
-org.apache.lucene.search.*,
-org.apache.lucene.queryParser.*"
-%><%@ page session="false" %><%@ page errorPage="error.jsp" %><%--
---%><%@ include file="projects.jspf" %><%
-Date starttime = new Date();
-String q    = request.getParameter("q");
-String defs = request.getParameter("defs");
-String refs = request.getParameter("refs");
-String hist = request.getParameter("hist");
-String path = request.getParameter("path");
+--%><%@page session="false" errorPage="error.jsp" import="
+org.opensolaris.opengrok.search.Results,
+org.opensolaris.opengrok.web.SearchHelper,
+org.opensolaris.opengrok.web.SortOrder,
+org.opensolaris.opengrok.web.Suggestion"
+%><%@
 
-String sort = null;
+include file="projects.jspf"
 
-final String LASTMODTIME = "lastmodtime";
-final String RELEVANCY = "relevancy";
-final String BY_PATH = "fullpath";
-final SortField S_BY_PATH = new SortField(BY_PATH,SortField.STRING);
+%><%!
+	private StringBuilder createUrl(SearchHelper sh, boolean menu) {
+		StringBuilder url = new StringBuilder(64);
+		QueryBuilder qb = sh.builder;
+		if (menu) {
+			url.append("search?");
+		} else {
+			Util.appendQuery(url, "sort", sh.order.toString());
+		}
+		if (qb != null) {
+			Util.appendQuery(url, "q", qb.getFreetext());
+			Util.appendQuery(url, "defs", qb.getDefs());
+			Util.appendQuery(url, "refs", qb.getRefs());
+			Util.appendQuery(url, "path", qb.getPath());
+			Util.appendQuery(url, "hist", qb.getHist());
+		}
+		if (sh.projects != null && sh.projects.size() != 0) {
+			Util.appendQuery(url, "project", cfg.getRequestedProjectsAsString());
+		}
+		return url;
+	}
+%><%
+/* ---------------------- search.jsp start --------------------- */
+{
+	cfg = PageConfig.get(request);
 
-Cookie[] cookies = request.getCookies();
-if (cookies != null) {
-    for (Cookie cookie : cookies) {
-        if (cookie.getName().equals("OpenGrokSorting")) {
-            sort = cookie.getValue();
-            if (!LASTMODTIME.equals(sort) && !RELEVANCY.equals(sort) && !BY_PATH.equals(sort)) {
-                sort = RELEVANCY;
-            }
-            break;
-        }
-    }
+	long starttime = System.currentTimeMillis();
+
+	SearchHelper searchHelper = cfg.prepareSearch()
+		.prepareExec(cfg.getRequestedProjects()).executeQuery().prepareSummary();
+	if (searchHelper.redirect != null) {
+		response.sendRedirect(searchHelper.redirect);
+	}
+	if (searchHelper.errorMsg != null
+		&& searchHelper.errorMsg.startsWith(SearchHelper.PARSE_ERROR_MSG)) 
+	{
+		searchHelper.errorMsg = SearchHelper.PARSE_ERROR_MSG 
+			+ "<br/>You might try to enclose your search term in quotes, "
+			+ "<a href=\"help.jsp#escaping\">escape special characters</a> "
+			+ "with <b>\\</b>, or read the <a href=\"help.jsp\">Help</a> "
+			+ "on the query language."
+			+ "Error message from parser:<br/>" + searchHelper.errorMsg
+				.substring(SearchHelper.PARSE_ERROR_MSG.length());
+	}
+	if (searchHelper.errorMsg != null) {
+		cfg.setTitle("Search Error");
+	} else {
+		cfg.setTitle("Search");
+	}
+	response.addCookie(new Cookie("OpenGrokSorting", searchHelper.order.toString()));
+%><%@
+
+include file="httpheader.jspf"
+
+%><body>
+<div id="page">
+	<div id="whole_header">
+		<div id="header"><%@
+
+include file="pageheader.jspf"
+
+%>
+		</div>
+		<div id="Masthead"></div>
+		<div id="bar">
+			<ul>
+				<li><a href="<%= request.getContextPath()
+					%>/"><span id="home"></span>Home</a></li>
+			</ul>
+			<%-- TODO: jel: IMHO it should be move to menu.jspf as combobox --%>
+			<div id="sortfield">
+				<label for="sortby">Sort by</label> 
+				<ul id="sortby"><%
+	StringBuilder url = createUrl(searchHelper, true).append("&amp;sort=");
+	for (SortOrder o : SortOrder.values()) {
+		if (searchHelper.order == o) {
+					%><li><span class="active"><%= o.getDesc() %></span></li><% 
+		} else {
+					%><li><a href="<%= url %><%= o %>"><%= o.getDesc() %></a></li><%
+		}
+	}
+				%></ul>
+			</div>
+		</div>
+		<div id="menu"><%@ 
+	
+include file="menu.jspf"
+
+%>
+		</div>
+	</div>
+	<div id="results"><%
+	// TODO spellchecking cycle below is not that great and we only create 
+	// suggest links for every token in query, not for a query as whole
+	if (searchHelper.errorMsg != null) {
+		%><h3>Error</h3>
+		<p><%= Util.htmlize(searchHelper.errorMsg) %></p><%
+	} else if (searchHelper.hits == null) {
+		%><p>No hits</p><%
+	} else if (searchHelper.hits.length == 0) {
+		List<Suggestion> hints = searchHelper.getSuggestions();
+		for (Suggestion hint : hints) {
+		%><p><font color="#cc0000">Did you mean (for <%= hint.name %>)</font>:<%
+			for (String word : hint.freetext) {
+			%> <a href=search?q=<%= word %>><%= word %></a> &nbsp;  <%
+			}
+			for (String word : hint.refs) {
+			%> <a href=search?refs=<%= word %>><%= word %></a> &nbsp;  <%
+			}
+			for (String word : hint.defs) {
+			%> <a href=search?defs=<%= word %>><%= word %></a> &nbsp;  <%
+			}
+		%></p><%
+		}
+		%>
+		<p> Your search <b><%= searchHelper.query %></b> did not match any files.
+			<br/> Suggestions:<br/>
+		</p>
+		<ul>
+			<li>Make sure all terms are spelled correctly.</li>
+			<li>Try different keywords.</li>
+			<li>Try more general keywords.</li>
+			<li>Use 'wil*' cards if you are looking for partial match.</li>
+		</ul><%
+	} else {
+		// We have a lots of results to show: create a slider for
+		String slider = "";
+		int thispage;	// number of items to display on the current page
+		int start = searchHelper.start;
+		int max = searchHelper.maxItems;
+		int totalHits = searchHelper.totalHits;
+		if (searchHelper.maxItems < searchHelper.totalHits) {
+			StringBuilder buf = new StringBuilder(4096);
+			thispage = (start + max) < totalHits ? max : totalHits - start;
+			StringBuilder urlp = createUrl(searchHelper, false);
+			int labelStart = 1;
+			int sstart = start - max * (start / max % 10 + 1) ;
+			if (sstart < 0) {
+				sstart = 0;
+				labelStart = 1;
+			} else {
+				labelStart = sstart / max + 1;
+			}
+			int label = labelStart;
+			int labelEnd = label + 11;
+			for (int i = sstart; i < totalHits && label <= labelEnd; i+= max) {
+				if (i <= start && start < i + max) {
+					buf.append("<span class=\"sel\">").append(label).append("</span>");
+				} else {
+					buf.append("<a class=\"more\" href=\"s?n=").append(max)
+						.append("&amp;start=").append(i).append(urlp).append("\">");
+					if (label == labelStart && label != 1) {
+						buf.append("&lt;&lt");
+					} else if (label == labelEnd && i < totalHits) {
+						buf.append("&gt;&gt;");
+					} else {
+						buf.append(label);
+					}
+					buf.append("</a>");
+				}
+				label++;
+			}
+			slider = buf.toString();
+		} else {
+			// set the max index to max or last
+			thispage = totalHits - start;
+		}
+		%>
+		<p class="pagetitle">Searched <b><%= searchHelper.query 
+			%></b> (Results <b> <%= start + 1 %> - <%= thispage + start 
+			%></b> of <b><%= totalHits %></b>) sorted by <%= 
+			searchHelper.order %></p><% 
+		if (slider.length() > 0) {
+		%>
+		<p class="slider"><%= slider %></p><%
+		}
+		%>
+		<table><%
+		Results.prettyPrint(out, searchHelper, start, start + thispage);
+		%>
+		</table>
+		<p><b>Completed in <%= System.currentTimeMillis() - starttime 
+			%> milliseconds</b></p><%
+		if (slider.length() > 0) {
+		%>
+		<p class="slider"><%= slider %></p><%
+		}
+		%>
+	</div><%
+	}
+	searchHelper.destroy();
 }
+/* ---------------------- search.jsp end --------------------- */
+%><%@
 
-String sortParam = request.getParameter("sort");
-if (sortParam != null) {
-    if (LASTMODTIME.equals(sortParam)) {
-        sort = LASTMODTIME;
-    } else if (RELEVANCY.equals(sortParam)) {
-        sort = RELEVANCY;
-    } else if (BY_PATH.equals(sortParam)) {
-        sort = BY_PATH;
-    }
-    if (sort != null) {
-        Cookie cookie = new Cookie("OpenGrokSorting", sort);
-        response.addCookie(cookie);
-    }
-} else { sort = RELEVANCY; }
+include file="foot.jspf"
 
-//List<org.apache.lucene.document.Document> docs=new ArrayList<org.apache.lucene.document.Document>();
-String errorMsg = null;
-
-if( q!= null && q.equals("")) q = null;
-if( defs != null && defs.equals("")) defs = null;
-if( refs != null && refs.equals("")) refs = null;
-if( hist != null && hist.equals("")) hist = null;
-if( path != null && path.equals("")) path = null;
-if (project != null && project.size()<1) project = null;
-
-if (q != null || defs != null || refs != null || hist != null || path != null) {
-    Searcher searcher = null;		    //the searcher used to open/search the index
-    ScoreDoc[] hits = null;                 // list of documents which result from the query
-    Query query = null;         //the Query created by the QueryBuilder
-    int totalHits=0;
-    
-    int start = 0;		       //the first index displayed on this page
-    //TODO deprecate max this and merge with paging and param n - TEST needed
-    //int max    = 25;			//the maximum items displayed on this page
-    int max=RuntimeEnvironment.getInstance().getHitsPerPage();
-
-    int thispage = 0;			    //used for the for/next either max or
-
-    QueryBuilder queryBuilder =
-            new QueryBuilder()
-            .setFreetext(q).setDefs(defs).setRefs(refs)
-            .setPath(path).setHist(hist);
-
-    try {
-        String DATA_ROOT = env.getDataRootPath();
-        if(DATA_ROOT.equals("")) {
-            throw new Exception("DATA_ROOT parameter is not configured in web.xml!");
-        }
-        File data_root = new File(DATA_ROOT);
-        if(!data_root.isDirectory()) {
-            throw new Exception("DATA_ROOT parameter in web.xml does not exist or is not a directory!");
-        }
-        //String date = request.getParameter("date");
-        try {
-            start = Integer.parseInt(request.getParameter("start"));	//parse the max results first
-            max = Integer.parseInt(request.getParameter("n"));      //then the start index
-            if(max < 0 || (max % 10 != 0) || max > 50) max = 25;
-            if(start < 0 ) start = 0;
-        } catch (Exception e) {  }
-
-        query = queryBuilder.build();
-        
-        File root = new File(RuntimeEnvironment.getInstance().getDataRootFile(),
-                "index");
-
-        if (RuntimeEnvironment.getInstance().hasProjects()) {
-            if (project == null) {
-                errorMsg = "<b>Error:</b> You must select a project!";
-            } else {
-                if (project.size() > 1) { //more projects
-                    IndexSearcher[] searchables = new IndexSearcher[project.size()];
-                    File droot = new File(RuntimeEnvironment.getInstance().getDataRootFile(), "index");
-                    int ii = 0;
-                    //TODO might need to rewrite to Project instead of String , need changes in projects.jspf too
-                    for (String proj : project) {
-                        FSDirectory dir = FSDirectory.open(new File(droot, proj));
-                        searchables[ii++] = new IndexSearcher(dir);
-                    }
-                    if (Runtime.getRuntime().availableProcessors() > 1) {
-                        searcher = new ParallelMultiSearcher(searchables);
-                    } else {
-                        searcher = new MultiSearcher(searchables);
-                    }
-                } else { // just 1 project selected
-                    root = new File(root, project.get(0));
-                    FSDirectory dir = FSDirectory.open(root);
-                    searcher = new IndexSearcher(dir);
-                }
-            }
-        } else { //no project setup
-            FSDirectory dir = FSDirectory.open(root);
-            searcher = new IndexSearcher(dir);
-            }
-
-        //TODO check if below is somehow reusing sessions so we don't requery again and again, I guess 2min timeout sessions could be usefull, since you click on the next page within 2mins, if not, then wait ;)
-        if (errorMsg == null) {
-            Sort sortf;
-            if (LASTMODTIME.equals(sort)) {
-                sortf = new Sort(new SortField("date", SortField.STRING, true));
-            } else if (BY_PATH.equals(sort)) {
-                sortf = new Sort(S_BY_PATH);
-            } else {
-                sortf = Sort.RELEVANCE;
-            }
-
-            TopFieldDocs fdocs = searcher.search(query, null, start + max, sortf);
-            totalHits = fdocs.totalHits;
-            hits = fdocs.scoreDocs;
-
-        }
-        thispage = max;
-    } catch (BooleanQuery.TooManyClauses e) {
-        errorMsg = "<b>Error:</b> Too many results for wildcard!";
-    } catch (ParseException e) {
-        errorMsg = "<b>Error parsing your query</b>" +
-                "<p/>You might try to enclose your search term in quotes, " +
-                "<a href=\"help.jsp#escaping\">escape special characters</a> " +
-                "with <b>\\</b>, or read the <a href=\"help.jsp\">Help</a> " +
-                "on the query language.<p/>" +
-                "Error message from parser:<br/>" + Util.htmlize(e.getMessage());
-    } catch (FileNotFoundException e) {
-        errorMsg = "<b>Error:</b> Index database not found";
-    } catch (Exception e) {
-        errorMsg = "<b>Error:</b> " + Util.htmlize(e.getMessage());
-    }
-
-    // Bug #3900: Check if this is a search for a single term, and that term
-    // is a definition. If that's the case, and we only have one match, we'll
-    // generate a direct link instead of a listing.
-    boolean isSingleDefinitionSearch =
-            (query instanceof TermQuery) && (defs != null);
-
-    // Attempt to create a direct link to the definition if we search for one
-    // single definition term AND we have exactly one match AND there is only
-    // one definition of that symbol in the document that matches.
-    boolean uniqueDefinition = false;
-    if (isSingleDefinitionSearch && hits != null && hits.length == 1) {
-        Document doc = searcher.doc(hits[0].doc);
-        if (doc.getFieldable("tags")!=null) {
-         byte[] rawTags = doc.getFieldable("tags").getBinaryValue();
-         Definitions tags = Definitions.deserialize(rawTags);
-         String symbol = ((TermQuery) query).getTerm().text();
-         if (tags.occurrences(symbol) == 1) {
-            uniqueDefinition = true;
-         }
-        }
-    }
-
-    // @TODO fix me. I should try to figure out where the exact hit is instead
-    // of returning a page with just _one_ entry in....
-    if (uniqueDefinition && request.getServletPath().equals(Constants.searchR)) {
-        String preFragmentPath = Util.URIEncodePath(context + Constants.xrefP + searcher.doc(hits[0].doc).get("path"));
-        String fragment = Util.URIEncode(((TermQuery)query).getTerm().text());
-        
-        StringBuilder url = new StringBuilder(preFragmentPath);
-        url.append("#");
-        url.append(fragment);
-
-        response.sendRedirect(url.toString());
-    } else {
-         String pageTitle = "Search";
-         RuntimeEnvironment environment = RuntimeEnvironment.getInstance();
-         environment.register();
-	    %><%@ include file="httpheader.jspf" %>
-<body>
-<div id="page">
-    <div id="header"><%@ include file="pageheader.jspf" %></div>
-<div id="Masthead"></div>
-<div id="bar">
-    <table border="0" width="100%"><tr><td><a href="<%=context%>/" id="home">Home</a></td><td align="right"><%
-     {
-        String url = "search?";
-                url = url + (q == null ? "" : "&amp;q=" + Util.URIEncode(q)) +
-                 (defs == null ? "" : "&amp;defs=" + Util.URIEncode(defs)) +
-                 (refs == null ? "" : "&amp;refs=" + Util.URIEncode(refs)) +
-                 (path == null ? "" : "&amp;path=" + Util.URIEncode(path)) +
-                 (hist == null ? "" : "&amp;hist=" + Util.URIEncode(hist));
-         if (hasProjects) {
-             if (project!=null) {
-              url = url + "&amp;project=";
-              for (Iterator it = project.iterator(); it.hasNext();) {
-                  url = url + (project == null ? "" : Util.URIEncode((String) it.next()) + ",");
-              }
-             }
-        }
-         
-        %>Sort by: <%        
-        url=url+("&amp;sort=");
-        
-        if (sort == null || RELEVANCY.equals(sort)) {
-        %><b>relevance</b> | <a href="<%=url+LASTMODTIME%>">last modified time</a> | <a href="<%=url+BY_PATH%>">path</a><%
-        } else if (LASTMODTIME.equals(sort)) {
-           %><a href="<%=url+RELEVANCY%>">relevance</a> | <b>last modified time</b> | <a href="<%=url+BY_PATH%>">path</a><%
-        } else if (BY_PATH.equals(sort)) {
-           %><a href="<%=url+RELEVANCY%>">relevance</a> | <a href="<%=url+LASTMODTIME%>">last modified time</a> | <b>path</b><%
-        } else {
-           %><a href="<%=url+RELEVANCY%>">relevance</a> | <a href="<%=url+LASTMODTIME%>">last modified time</a> | <a href="<%=url+BY_PATH%>">path</a><%
-        }
-      } %></td></tr></table>
-</div>
-<div id="menu">
-   <%@ include file="menu.jspf"%>
-</div>
-<div id="results">
-<%
-//TODO spellchecking cycle below is not that great and we only create suggest links for every token in query, not for a query as whole
-if( hits == null || errorMsg != null) {
-	    	%><%=errorMsg%><%
-            } else if (hits.length == 0) {
-                File spellIndex = new File(env.getDataRootPath(), "spellIndex");
-                File[] spellIndexes=null;
-
-                if (RuntimeEnvironment.getInstance().hasProjects()) {
-                 if (project.size() > 1) { //more projects
-                    spellIndexes = new File[project.size()];                    
-                    int ii = 0;
-                    //TODO might need to rewrite to Project instead of String , need changes in projects.jspf too
-                    for (String proj : project) {                        
-                        spellIndexes[ii++] = new File(spellIndex,proj);
-                    }
-                 } else { // just 1 project selected
-                    spellIndex = new File(spellIndex, project.get(0));                    
-                 }
-                }
-
-                int count=1;
-                if (spellIndexes!=null) {count=spellIndexes.length;}                
-
-                for (int idx = 0; idx < count; idx++) {
-   
-                if (spellIndexes!=null) spellIndex = spellIndexes[idx];
-                
-                 if (spellIndex.exists()) {
-                    FSDirectory spellDirectory = FSDirectory.open(spellIndex);
-                    SpellChecker checker = new SpellChecker(spellDirectory);
-
-                    Date sstart = new Date();
-                    boolean printHeader = true;
-                        String[] toks;
-                        if(q != null) {
-                            toks = q.split("[\t ]+");
-                            if(toks != null){
-                                for(int j=0; j<toks.length; j++) {
-                                    if(toks[j].length() > 3) {
-                                        String[] ret = checker.suggestSimilar(toks[j].toLowerCase(), 5);
-                                        for(int i = 0;i < ret.length; i++) {
-                                            if (printHeader) {
-                                                %><p><font color="#cc0000">Did you mean(for <%=spellIndex.getName()%>)</font>:<%
-                                                printHeader = false;
-                                            }
-                                            %> <a href=search?q=<%=ret[i]%>><%=ret[i]%></a> &nbsp; <%
-                                        }
-                                    }
-                                }
-                            }
-                        }
-                        if(refs != null) {
-                            toks = refs.split("[\t ]+");
-                            if(toks != null){
-                                for(int j=0; j<toks.length; j++) {
-                                    if(toks[j].length() > 3) {
-                                        String[] ret = checker.suggestSimilar(toks[j].toLowerCase(), 5);
-                                        for(int i = 0;i < ret.length; i++) {
-                                            if (printHeader) {
-                                                %><p><font color="#cc0000">Did you mean(for <%=spellIndex.getName()%>)</font>:<%
-                                                printHeader = false;
-                                            }
-					%> <a href=search?refs=<%=ret[i]%>><%=ret[i]%></a> &nbsp;  <%
-                                }
-                                }
-                        }
-                        }
-                        }
-                        //TODO it seems the only true spellchecker is for below field, see IndexDatabase createspellingsuggestions ...
-                        if(defs != null) {
-                            toks = defs.split("[\t ]+");
-                            if(toks != null){
-                                for(int j=0; j<toks.length; j++) {
-                                    if(toks[j].length() > 3) {
-                                        String[] ret = checker.suggestSimilar(toks[j].toLowerCase(), 5);
-                                        for(int i = 0;i < ret.length; i++) {
-                                            if (printHeader) {
-                                                %><p><font color="#cc0000">Did you mean(for <%=spellIndex.getName()%>)</font>:<%
-                                                printHeader = false;
-                                            }
-					%> <a href=search?defs=<%=ret[i]%>><%=ret[i]%></a> &nbsp;  <%
-                                        }
-                                    }
-                                }
-                            }
-                        }
-                        if (printHeader) {
-                            %></p><%                          
-                        }
-                        spellDirectory.close();
-                        checker.close();
-                 }
-
-                }
-                
-		%><p> Your search  <b><%=query.toString()%></b> did not match any files.
-                    <br />
-                    Suggestions:<br/><blockquote>- Make sure all terms are spelled correctly.<br/>
-                        - Try different keywords.<br/>
-                        - Try more general keywords.<br/>
-                        - Use 'wil*' cards if you are looking for partial match.
-                    </blockquote>
-		</p><%
-            } else { // We have a lots of results to show
-                StringBuilder slider = null;
-                if ( max < totalHits) {
-                    if((start + max) < totalHits) {
-                        thispage = max;
-                    } else {
-                        thispage = totalHits - start;
-                    }
-                    String urlp = (q == null ? "" : "&amp;q=" + Util.URIEncode(q)) +
-                            (defs == null ? "" : "&amp;defs=" + Util.URIEncode(defs)) +
-                            (refs == null ? "" : "&amp;refs=" + Util.URIEncode(refs)) +
-                            (path == null ? "" : "&amp;path=" + Util.URIEncode(path)) +
-                            (hist == null ? "" : "&amp;hist=" + Util.URIEncode(hist)) +
-                            (sort == null ? "" : "&amp;sort=" + Util.URIEncode(sort));
-                    if (hasProjects) {
-                        urlp = urlp + "&amp;project=";
-                        for (Iterator it = project.iterator(); it.hasNext();) {
-                            urlp = urlp + (project == null ? "" : Util.URIEncode((String) it.next()) + ",");
-                        }
-                    }
-                    slider = new StringBuilder();
-                    int labelStart =1;
-                    int sstart = start - max* (start / max % 10 + 1) ;
-                    if(sstart < 0) {
-                        sstart = 0;
-                        labelStart = 1;
-                    } else {
-                        labelStart = sstart/max + 1;
-                    }
-                    int label = labelStart;
-                    int labelEnd = label + 11;
-                    String arr;
-                    for(int i=sstart; i<totalHits && label <= labelEnd; i+= max) {
-                        if (i <= start && start < i+ max) {
-                            slider.append("<span class=\"sel\">" + label + "</span>");
-                        } else {
-                            if(label == labelStart && label != 1) {
-                                arr = "&lt;&lt";
-                            } else if(label == labelEnd && i < totalHits) {
-                                arr = "&gt;&gt;";
-                            } else {
-                                arr = label < 10 ? " " + label : String.valueOf(label);
-                            }
-                            slider.append("<a class=\"more\" href=\"s?n=" + max + "&amp;start=" + i + urlp + "\">"+
-                                    arr + "</a>");
-                        }
-                        label++;
-                    }
-                } else {
-                    thispage = totalHits - start;      // set the max index to max or last
-                }
-		%>&nbsp; &nbsp; Searched <b><%=query.toString()%></b> (Results <b><%=start+1%> -
-		<%=thispage+start%></b> of <b><%=totalHits%></b>) sorted by <%=sort%> <p><%=slider != null ?
-                    slider.toString(): ""%></p>
-		<table width="100%" cellpadding="3" cellspacing="0" border="0"><%
-                
-                Context sourceContext = null;
-                Summarizer summer = null;
-                if (query != null) {
-                    try{
-                        sourceContext =
-                                new Context(query, queryBuilder.getQueries());
-                        if(sourceContext != null)
-                            summer = new Summarizer(query,
-                                                    new CompatibleAnalyser());
-                    } catch (Exception e) {
-                        
-                    }
-                }
-                
-                HistoryContext historyContext = null;
-                try {
-                    historyContext = new HistoryContext(query);
-                } catch (Exception e) {
-                }
-                EftarFileReader ef = null;
-                try{
-                    ef = new EftarFileReader(env.getDataRootPath() + "/index/dtags.eftar");
-                } catch (Exception e) {
-                }
-                //TODO also fix the way what and how it is passed to prettyprint, can improve performance! SearchEngine integration is really needed here.
-                Results.prettyPrintHTML(searcher,hits, start, start+thispage,
-                        out,
-                        sourceContext, historyContext, summer,
-                        context,
-                        env.getSourceRootPath(),
-                        env.getDataRootPath(),
-                        ef);
-                if(ef != null) {
-                    try{
-                    ef.close();
-                    } catch (IOException e) {
-                    }
-                }
-		%></table><br/>
-		<b> Completed in <%=(new Date()).getTime() - starttime.getTime()%> milliseconds </b> <br/>
-		<%=slider != null ? "<p>" + slider + "</p>" : ""%>
-		<%
-            }
-	    %><br/></div><%@include file="foot.jspf"%><%
-    }
-    if (searcher != null) {
-        searcher.close();
-    }
-} else { // Entry page show the map
-    response.sendRedirect(context + "/index.jsp");
-}
-%>
+%>
\ No newline at end of file
diff -r 09f0768a7ec1 web/status.jsp
--- a/web/status.jsp	Fri May 06 21:41:59 2011 +0200
+++ b/web/status.jsp	Sat May 07 06:44:23 2011 +0200
@@ -1,4 +1,6 @@
 <%-- 
+$Id$
+
 CDDL HEADER START
 
 The contents of this file are subject to the terms of the
@@ -17,36 +19,56 @@
 CDDL HEADER END
 
 Copyright (c) 2009, 2010, Oracle and/or its affiliates. All rights reserved.
+Portions Copyright 2011 Jens Elkner.
 
---%><%@ page import = "java.util.List,
-javax.servlet.*,
-javax.servlet.http.*,
+--%><%@page session="false" errorPage="error.jsp" import="
 org.opensolaris.opengrok.configuration.RuntimeEnvironment,
-org.opensolaris.opengrok.configuration.Project,
-org.opensolaris.opengrok.web.*"
- session="false" errorPage="error.jsp" %><%@ include file="projects.jspf" %><%
-RuntimeEnvironment environment = RuntimeEnvironment.getInstance();
-environment.register();
-String pageTitle = "Status";
- %><%@ include file="httpheader.jspf" %>
+org.opensolaris.opengrok.web.Util"
+%><%@
+
+include file="projects.jspf"
+
+%><%
+/* ---------------------- status.jsp start --------------------- */
+{
+	cfg = PageConfig.get(request);
+	cfg.setTitle("Status");
+%><%@
+
+include file="httpheader.jspf" 
+
+%>
 <body>
-<div id="page">
-<div id="header"><%@ include file="pageheader.jspf" %></div>
-<div id="Masthead"></div>
-<div id="bar">
-    <h1>OpenGrok status page</h1>
-    <p>
-        This page is only used for testing purposes to dump some of the
-        internal settings on your OpenGrok server.
-    </p>
-    <%
-    if (environment.isChattyStatusPage()) {
-        Util.dumpConfiguration(out);
-    } else {%>
-    <p>
-        For security reasons, printing of internal settings is not enabled by
-        default. To enable, set the property <tt>chattyStatusPage</tt> to
-        <tt>true</tt> in <tt>configuration.xml</tt>.
-    </p><%}%>
-</div>
-<%@include file="foot.jspf"%>
+	<div id="page">
+		<div id="whole_header">
+			<div id="header"><%@
+
+include file="pageheader.jspf"
+
+			%>
+			</div>
+			<div id="Masthead"></div>
+		</div>
+		<div id="status">
+			<h1>OpenGrok status page</h1>
+			<p>
+This page is only used for testing purposes to dump some of the
+internal settings on your OpenGrok server.</p><%
+		if (cfg.getEnv().isChattyStatusPage()) {
+			Util.dumpConfiguration(out);
+		} else {
+		%><p>
+For security reasons, printing of internal settings is not enabled by
+default. To enable, set the property <tt>chattyStatusPage</tt> to
+<tt>true</tt> in <tt>configuration.xml</tt>.</p><%
+		}
+		%>
+		</div>
+<%
+}
+/* ---------------------- status.jsp start --------------------- */
+%><%@
+
+include file="foot.jspf"
+
+%>
\ No newline at end of file
