<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "http://defect.opensolaris.org/bz/bugzilla.dtd">

<bugzilla version="3.6.5"
          urlbase="http://defect.opensolaris.org/bz/"
          
          maintainer="website-admin@opensolaris.org"
>

    <bug>
          <bug_id>15858</bug_id>
          
          <creation_ts>2010-05-04 11:04:00 +0000</creation_ts>
          <short_desc>String index out of range: -8161 from Summarizer</short_desc>
          <delta_ts>2010-05-10 09:44:34 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Development</classification>
          <product>opengrok</product>
          <component>analyzer</component>
          <version>unspecified</version>
          <rep_platform>ANY/Generic</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>minor</bug_severity>
          <target_milestone>0.9</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Lubos Kosco">Lubos.Kosco</reporter>
          <assigned_to name="Knut Anders Hatlen">knut.hatlen</assigned_to>
          <cc>jakub.jirsa</cc>
    
    <cc>knut.hatlen</cc>
    
    <cc>opengrok-dev</cc>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>72472</commentid>
            <who name="Lubos Kosco">Lubos.Kosco</who>
            <bug_when>2010-05-04 11:04:38 +0000</bug_when>
            <thetext>try to search for:
http://grok.czech.sun.com:8080/source/search?q=java.security&amp;project=sg-firmware-5.20-patchdev&amp;defs=&amp;refs=&amp;path=&amp;hist=

you end up with a stack trace and included page :(</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>72706</commentid>
            <who name="Knut Anders Hatlen">knut.hatlen</who>
            <bug_when>2010-05-09 19:32:56 +0000</bug_when>
            <thetext>I have added a JUnit test case that reproduces this bug (changeset 1003:f251ce56cf3b). See the test case bug15858 in SummarizerTest. It is disabled for now.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>72708</commentid>
            <who name="Knut Anders Hatlen">knut.hatlen</who>
            <bug_when>2010-05-09 22:04:27 +0000</bug_when>
            <thetext>The problem is this line in PlainFullAnalyzer.lex (similar problems exist in most the other analyzers too, by the way):

setAttribs(yytext().toLowerCase(Locale.getDefault()), zzStartRead, zzMarkedPos);

zzStartRead and zzMarkedPos hold the offsets inside the analyzer&apos;s buffer, not the offset in the document itself. Also, fields starting with zz are JFlex-internal and should not be used by us.

We should add the %char directive to the analyzers and use yychar and yychar+yylength() instead of the internal fields.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>72718</commentid>
            <who name="Knut Anders Hatlen">knut.hatlen</who>
            <bug_when>2010-05-10 09:44:34 +0000</bug_when>
            <thetext>All of the tokenizers had this bug. I&apos;ve cleaned them up and added unit tests for each one of them.

Fixed in changeset 1004:f289325c4416.</thetext>
          </long_desc>
      
      

    </bug>

</bugzilla>