<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "http://defect.opensolaris.org/bz/bugzilla.dtd">

<bugzilla version="3.6.5"
          urlbase="http://defect.opensolaris.org/bz/"
          
          maintainer="website-admin@opensolaris.org"
>

    <bug>
          <bug_id>16334</bug_id>
          
          <creation_ts>2010-06-20 03:45:00 +0000</creation_ts>
          <short_desc>Indexer hangs when files contain 0x1A characters</short_desc>
          <delta_ts>2010-09-17 11:51:22 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Development</classification>
          <product>opengrok</product>
          <component>indexer</component>
          <version>unspecified</version>
          <rep_platform>i86pc/amd64</rep_platform>
          <op_sys>Windows</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>major</bug_severity>
          <target_milestone>0.10</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="seadog">seadog1234567890</reporter>
          <assigned_to name="seadog">seadog1234567890</assigned_to>
          <cc>knut.hatlen</cc>
    
    <cc>opengrok-dev</cc>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>74570</commentid>
              <attachid>4132</attachid>
            <who name="seadog">seadog1234567890</who>
            <bug_when>2010-06-20 03:45:03 +0000</bug_when>
            <thetext>Created attachment 4132
File has 0x1A characters in it that causes indexer to hang

The indexer hangs when a file contains invalid characters such as 0x1A. CTags
5.8 can created tags for the file without hanging.

I&apos;ve tested on x64 Server 2008, x64 Server 2008 R2, x86 Vista SP2 and x86
Windows 7. I&apos;ve tested with Java 6 Update 20 x64 and x86 JVMs.


I attached a file that contains 3 0x1A characters after: static void Hi()

See referenced discussion.
http://www.opensolaris.org/jive/thread.jspa?threadID=130711&amp;tstart=0</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>74571</commentid>
              <attachid>4133</attachid>
            <who name="seadog">seadog1234567890</who>
            <bug_when>2010-06-20 03:46:34 +0000</bug_when>
            <thetext>Created attachment 4133
jstack -l output when run against the process while it is hung</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>74589</commentid>
            <who name="Knut Anders Hatlen">knut.hatlen</who>
            <bug_when>2010-06-21 14:28:46 +0000</bug_when>
            <thetext>I managed to index the file just fine on OpenSolaris, but I see the same hang if I try it on Windows, so it seems we have a problem.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>74670</commentid>
              <attachid>4142</attachid>
            <who name="seadog">seadog1234567890</who>
            <bug_when>2010-06-23 10:59:06 +0000</bug_when>
            <thetext>Created attachment 4142
Tag file generated by Ctags when the source file contains no bad characters</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>74671</commentid>
              <attachid>4143</attachid>
            <who name="seadog">seadog1234567890</who>
            <bug_when>2010-06-23 10:59:53 +0000</bug_when>
            <thetext>Created attachment 4143
 Tag file generated by Ctags when the source file does contain bad characters</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>74679</commentid>
            <who name="seadog">seadog1234567890</who>
            <bug_when>2010-06-23 11:49:37 +0000</bug_when>
            <thetext>The bad characters happen right after the parens in static void Hi()

You can see that CTags stops in its tracks once it hits those bad characters. Diff the two tag files I attached today to see the difference.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>74683</commentid>
            <who name="Knut Anders Hatlen">knut.hatlen</who>
            <bug_when>2010-06-23 12:50:48 +0000</bug_when>
            <thetext>What&apos;s odd is that it only seems to happen when using the --filter=yes option. When running ctags without that option, all the characters are written out. And when running ctags on OpenSolaris, it behaves as expected both with and without the filter option. Perhaps it&apos;s worth a try to use ctags from cygwin to see if it handles these characters better?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>74725</commentid>
            <who name="seadog">seadog1234567890</who>
            <bug_when>2010-06-24 02:31:50 +0000</bug_when>
            <thetext>(In reply to comment #6)
&gt; What&apos;s odd is that it only seems to happen when using the --filter=yes option.
&gt; When running ctags without that option, all the characters are written out. And
&gt; when running ctags on OpenSolaris, it behaves as expected both with and without
&gt; the filter option. Perhaps it&apos;s worth a try to use ctags from cygwin to see if
&gt; it handles these characters better?

Once I get my debugging set up for CTags, I will see what I can find out with the filter open. I&apos;m glad you mentioned the filter yes part. I forgot to mention this previously.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>74733</commentid>
            <who name="Knut Anders Hatlen">knut.hatlen</who>
            <bug_when>2010-06-24 08:18:52 +0000</bug_when>
            <thetext>I tried ctags from cygwin and it worked somewhat better, in the sense that it didn&apos;t skip all the characters after 0x1a. But it still hung because it for some reason didn&apos;t print a newline character after the filter terminator.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>75056</commentid>
            <who name="seadog">seadog1234567890</who>
            <bug_when>2010-07-03 23:27:03 +0000</bug_when>
            <thetext>(In reply to comment #8)
&gt; I tried ctags from cygwin and it worked somewhat better, in the sense that it
&gt; didn&apos;t skip all the characters after 0x1a. But it still hung because it for
&gt; some reason didn&apos;t print a newline character after the filter terminator.

Modify catFile in sort.c of CTags. Change the fopen call to be &quot;rb&quot; instead of just &quot;r&quot;. Binary mode works for Windows (it is ignored on POSIX platforms). This way cygwin won&apos;t be required.

CTags will no longer skip the rest of the file. It will still output the weird characters to the console but at least it doesn&apos;t stop mid file.

readTags in CTags.java needs to be modified also. It looks like the Java IO stream treats the weird characters as whitespaces. At least that what I&apos;ve seen during debugging. Whenever defs.addTaf is called, all the string parameters should have trim() called on them especially the match variable. It will randomly have one trailing or one leading whitespace character. It will have more whitespace characters when it encounters the bad characters scenario.

The proper fix for catFile in CTags should filter out and only print printable characters but just changing the fopen call is sufficient as a minimum change. With the proper fix in catFile, the match variable inside readTags in OpenGrok sill has misc trailing/leading white space characters so a trim call is still needed. trim() should probably be called on all the string variables (this requires renaming &apos;string&apos; on line 220 to something else like &apos;name&apos;). 

I&apos;ve made all the changes to CTags and OpenGrok described here plus the extra check I mentioned in the forum thread. With all these changes I am able to index without problems. I will submit a patch when I can.

I also noticed the ctags process never exits once it is done. It only behaves like this when filter is set to yes as it is used in OpenGrok. OpenGrok will also keep an orphaned reference to the CTags process.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>77522</commentid>
              <attachid>4294</attachid>
            <who name="seadog">seadog1234567890</who>
            <bug_when>2010-09-12 18:39:42 +0000</bug_when>
            <thetext>Created attachment 4294
Proposed patch

Here&apos;s my proposed patch. This should warn if this case is ever hit again and prevent a hang. I&apos;ll be submitting a patch to ctags as well to fix the root issue. Contributor ID is OS0471.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>77551</commentid>
            <who name="Knut Anders Hatlen">knut.hatlen</who>
            <bug_when>2010-09-13 13:21:06 +0000</bug_when>
            <thetext>Thanks for the patch!

The only problem I can see with the patch, is that OpenGrok will now give up tagging its own Ctags.java file when it gets to the definition of CTAGS_FILTER_TERMINATOR because it sees what it believes is a terminator token. Perhaps we can work around that by adding some random number or System.currentTimeMillis() to CTAGS_FILTER_TERMINATOR when the constant is initialized?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>77579</commentid>
            <who name="seadog">seadog1234567890</who>
            <bug_when>2010-09-13 23:56:50 +0000</bug_when>
            <thetext>(In reply to comment #11)
&gt; Thanks for the patch!
&gt; 
&gt; The only problem I can see with the patch, is that OpenGrok will now give up
&gt; tagging its own Ctags.java file when it gets to the definition of
&gt; CTAGS_FILTER_TERMINATOR because it sees what it believes is a terminator token.
&gt; Perhaps we can work around that by adding some random number or
&gt; System.currentTimeMillis() to CTAGS_FILTER_TERMINATOR when the constant is
&gt; initialized?

I&apos;ll try it out on my computer to see what but I don&apos;t think it will be a problem. The temp tags file thatCctags.java is reading shouldn&apos;t contain the actual value of the variable (the terminator). At most I thought it would contain the variable name. I&apos;ll find out!</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>77582</commentid>
            <who name="seadog">seadog1234567890</who>
            <bug_when>2010-09-14 01:52:30 +0000</bug_when>
            <thetext>(In reply to comment #11)
&gt; Thanks for the patch!
&gt; 
&gt; The only problem I can see with the patch, is that OpenGrok will now give up
&gt; tagging its own Ctags.java file when it gets to the definition of
&gt; CTAGS_FILTER_TERMINATOR because it sees what it believes is a terminator token.
&gt; Perhaps we can work around that by adding some random number or
&gt; System.currentTimeMillis() to CTAGS_FILTER_TERMINATOR when the constant is
&gt; initialized?

You were right. I don&apos;t know the tags format that well. Not a big deal though I went back and looked at my previous testing. It seems like there are three cases:
1. valid case where everything is ok. tagLine = terminator
2. bad characters case. tagLine = partial output + terminator (endswith)
3. patched case. tagLine =  actual output which contains terminator (not endswith)

basically a fixed patch would be:

if (tagLine.equals(CTAGS_TERMINATOR)) {
   return;
}

if (tagLine.endsWith(CTAGS_TERMINATOR)) {
   log.warn(&quot;blah&quot;);
   return;
}

I test the changed code against the old bug and against an updated version of Ctags.java. It worked correctly in both cases. I&apos;ll attach a new patch for you to review.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>77585</commentid>
              <attachid>4298</attachid>
            <who name="seadog">seadog1234567890</who>
            <bug_when>2010-09-14 02:04:52 +0000</bug_when>
            <thetext>Created attachment 4298
new proposed patch

Here&apos;s the new proposed patch for review.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>77735</commentid>
            <who name="Knut Anders Hatlen">knut.hatlen</who>
            <bug_when>2010-09-17 11:51:22 +0000</bug_when>
            <thetext>Thanks! I&apos;ve checked in the fix.

changeset:   1104:cadcc22cf4e6</thetext>
          </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
              isurl="0"
          >
            <attachid>4132</attachid>
            <date>2010-06-20 03:45:00 +0000</date>
            <delta_ts>2010-06-20 03:45:03 +0000</delta_ts>
            <desc>File has 0x1A characters in it that causes indexer to hang</desc>
            <filename>Program.cs</filename>
            <type>text/plain</type>
            <size>232</size>
            <attacher>seadog1234567890</attacher>
            
              <data encoding="base64">77u/dXNpbmcgU3lzdGVtOw0KDQpuYW1lc3BhY2UgdGVzdGFwcA0Kew0KICAgIGNsYXNzIFByb2dy
YW0NCiAgICB7DQogICAgICAgIHN0YXRpYyB2b2lkIE1haW4oc3RyaW5nW10gYXJncykNCiAgICAg
ICAgew0KICAgICAgICB9DQoNCiAgICAgICAgc3RhdGljIHZvaWQgSGkoKRoaGg0KICAgICAgICB7
DQogICAgICAgICAgICBDb25zb2xlLldyaXRlTGluZSgiSGkiKTsNCiAgICAgICAgfQ0KICAgIH0N
Cn0NCg==
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
              isurl="0"
          >
            <attachid>4133</attachid>
            <date>2010-06-20 03:46:00 +0000</date>
            <delta_ts>2010-06-20 03:46:34 +0000</delta_ts>
            <desc>jstack -l output when run against the process while it is hung</desc>
            <filename>jstack.txt</filename>
            <type>text/plain</type>
            <size>5564</size>
            <attacher>seadog1234567890</attacher>
            
              <data encoding="base64">MjAxMC0wNi0xOSAyMzoyMDo1NwpGdWxsIHRocmVhZCBkdW1wIEphdmEgSG90U3BvdChUTSkgQ2xp
ZW50IFZNICgxNi4zLWIwMSBtaXhlZCBtb2RlLCBzaGFyaW5nKToKCiJUaHJlYWQtMiIgZGFlbW9u
IHByaW89NiB0aWQ9MHgwMTljYmMwMCBuaWQ9MHhiZjggcnVubmFibGUgWzB4MDQxZmYwMDBdCiAg
IGphdmEubGFuZy5UaHJlYWQuU3RhdGU6IFJVTk5BQkxFCglhdCBqYXZhLmlvLkZpbGVJbnB1dFN0
cmVhbS5yZWFkQnl0ZXMoTmF0aXZlIE1ldGhvZCkKCWF0IGphdmEuaW8uRmlsZUlucHV0U3RyZWFt
LnJlYWQoVW5rbm93biBTb3VyY2UpCglhdCBzdW4ubmlvLmNzLlN0cmVhbURlY29kZXIucmVhZEJ5
dGVzKFVua25vd24gU291cmNlKQoJYXQgc3VuLm5pby5jcy5TdHJlYW1EZWNvZGVyLmltcGxSZWFk
KFVua25vd24gU291cmNlKQoJYXQgc3VuLm5pby5jcy5TdHJlYW1EZWNvZGVyLnJlYWQoVW5rbm93
biBTb3VyY2UpCgktIGxvY2tlZCA8MHgyM2NhMWExMD4gKGEgamF2YS5pby5JbnB1dFN0cmVhbVJl
YWRlcikKCWF0IGphdmEuaW8uSW5wdXRTdHJlYW1SZWFkZXIucmVhZChVbmtub3duIFNvdXJjZSkK
CWF0IGphdmEuaW8uQnVmZmVyZWRSZWFkZXIuZmlsbChVbmtub3duIFNvdXJjZSkKCWF0IGphdmEu
aW8uQnVmZmVyZWRSZWFkZXIucmVhZExpbmUoVW5rbm93biBTb3VyY2UpCgktIGxvY2tlZCA8MHgy
M2NhMWExMD4gKGEgamF2YS5pby5JbnB1dFN0cmVhbVJlYWRlcikKCWF0IGphdmEuaW8uQnVmZmVy
ZWRSZWFkZXIucmVhZExpbmUoVW5rbm93biBTb3VyY2UpCglhdCBvcmcub3BlbnNvbGFyaXMub3Bl
bmdyb2suYW5hbHlzaXMuQ3RhZ3MkMS5ydW4oQ3RhZ3MuamF2YTo5MykKCWF0IGphdmEubGFuZy5U
aHJlYWQucnVuKFVua25vd24gU291cmNlKQoKICAgTG9ja2VkIG93bmFibGUgc3luY2hyb25pemVy
czoKCS0gTm9uZQoKInBvb2wtMS10aHJlYWQtMSIgcHJpbz02IHRpZD0weDAxOWNiNDAwIG5pZD0w
eDMzYyBydW5uYWJsZSBbMHgwNDBlZjAwMF0KICAgamF2YS5sYW5nLlRocmVhZC5TdGF0ZTogUlVO
TkFCTEUKCWF0IGphdmEuaW8uRmlsZUlucHV0U3RyZWFtLnJlYWRCeXRlcyhOYXRpdmUgTWV0aG9k
KQoJYXQgamF2YS5pby5GaWxlSW5wdXRTdHJlYW0ucmVhZChVbmtub3duIFNvdXJjZSkKCWF0IGph
dmEuaW8uQnVmZmVyZWRJbnB1dFN0cmVhbS5yZWFkMShVbmtub3duIFNvdXJjZSkKCWF0IGphdmEu
aW8uQnVmZmVyZWRJbnB1dFN0cmVhbS5yZWFkKFVua25vd24gU291cmNlKQoJLSBsb2NrZWQgPDB4
MjNjOWIxNzg+IChhIGphdmEuaW8uQnVmZmVyZWRJbnB1dFN0cmVhbSkKCWF0IHN1bi5uaW8uY3Mu
U3RyZWFtRGVjb2Rlci5yZWFkQnl0ZXMoVW5rbm93biBTb3VyY2UpCglhdCBzdW4ubmlvLmNzLlN0
cmVhbURlY29kZXIuaW1wbFJlYWQoVW5rbm93biBTb3VyY2UpCglhdCBzdW4ubmlvLmNzLlN0cmVh
bURlY29kZXIucmVhZChVbmtub3duIFNvdXJjZSkKCS0gbG9ja2VkIDwweDIzYzlmNzI4PiAoYSBq
YXZhLmlvLklucHV0U3RyZWFtUmVhZGVyKQoJYXQgamF2YS5pby5JbnB1dFN0cmVhbVJlYWRlci5y
ZWFkKFVua25vd24gU291cmNlKQoJYXQgamF2YS5pby5CdWZmZXJlZFJlYWRlci5maWxsKFVua25v
d24gU291cmNlKQoJYXQgamF2YS5pby5CdWZmZXJlZFJlYWRlci5yZWFkTGluZShVbmtub3duIFNv
dXJjZSkKCS0gbG9ja2VkIDwweDIzYzlmNzI4PiAoYSBqYXZhLmlvLklucHV0U3RyZWFtUmVhZGVy
KQoJYXQgamF2YS5pby5CdWZmZXJlZFJlYWRlci5yZWFkTGluZShVbmtub3duIFNvdXJjZSkKCWF0
IG9yZy5vcGVuc29sYXJpcy5vcGVuZ3Jvay5hbmFseXNpcy5DdGFncy5yZWFkVGFncyhDdGFncy5q
YXZhOjE0NykKCWF0IG9yZy5vcGVuc29sYXJpcy5vcGVuZ3Jvay5hbmFseXNpcy5DdGFncy5kb0N0
YWdzKEN0YWdzLmphdmE6MTM4KQoJYXQgb3JnLm9wZW5zb2xhcmlzLm9wZW5ncm9rLmFuYWx5c2lz
LnBsYWluLlBsYWluQW5hbHl6ZXIuYW5hbHl6ZShQbGFpbkFuYWx5emVyLmphdmE6OTApCglhdCBv
cmcub3BlbnNvbGFyaXMub3Blbmdyb2suYW5hbHlzaXMuYy5DQW5hbHl6ZXIuYW5hbHl6ZShDQW5h
bHl6ZXIuamF2YTo1OSkKCWF0IG9yZy5vcGVuc29sYXJpcy5vcGVuZ3Jvay5hbmFseXNpcy5UZXh0
QW5hbHl6ZXIuYW5hbHl6ZShUZXh0QW5hbHl6ZXIuamF2YTo2MCkKCWF0IG9yZy5vcGVuc29sYXJp
cy5vcGVuZ3Jvay5hbmFseXNpcy5BbmFseXplckd1cnUuZ2V0RG9jdW1lbnQoQW5hbHl6ZXJHdXJ1
LmphdmE6MjUxKQoJYXQgb3JnLm9wZW5zb2xhcmlzLm9wZW5ncm9rLmluZGV4LkluZGV4RGF0YWJh
c2UuYWRkRmlsZShJbmRleERhdGFiYXNlLmphdmE6NTcxKQoJYXQgb3JnLm9wZW5zb2xhcmlzLm9w
ZW5ncm9rLmluZGV4LkluZGV4RGF0YWJhc2UuaW5kZXhEb3duKEluZGV4RGF0YWJhc2UuamF2YTo3
MjMpCglhdCBvcmcub3BlbnNvbGFyaXMub3Blbmdyb2suaW5kZXguSW5kZXhEYXRhYmFzZS51cGRh
dGUoSW5kZXhEYXRhYmFzZS5qYXZhOjMzNSkKCWF0IG9yZy5vcGVuc29sYXJpcy5vcGVuZ3Jvay5p
bmRleC5JbmRleERhdGFiYXNlJDEucnVuKEluZGV4RGF0YWJhc2UuamF2YToxNDkpCglhdCBqYXZh
LnV0aWwuY29uY3VycmVudC5FeGVjdXRvcnMkUnVubmFibGVBZGFwdGVyLmNhbGwoVW5rbm93biBT
b3VyY2UpCglhdCBqYXZhLnV0aWwuY29uY3VycmVudC5GdXR1cmVUYXNrJFN5bmMuaW5uZXJSdW4o
VW5rbm93biBTb3VyY2UpCglhdCBqYXZhLnV0aWwuY29uY3VycmVudC5GdXR1cmVUYXNrLnJ1bihV
bmtub3duIFNvdXJjZSkKCWF0IGphdmEudXRpbC5jb25jdXJyZW50LlRocmVhZFBvb2xFeGVjdXRv
ciRXb3JrZXIucnVuVGFzayhVbmtub3duIFNvdXJjZSkKCWF0IGphdmEudXRpbC5jb25jdXJyZW50
LlRocmVhZFBvb2xFeGVjdXRvciRXb3JrZXIucnVuKFVua25vd24gU291cmNlKQoJYXQgamF2YS5s
YW5nLlRocmVhZC5ydW4oVW5rbm93biBTb3VyY2UpCgogICBMb2NrZWQgb3duYWJsZSBzeW5jaHJv
bml6ZXJzOgoJLSA8MHgyM2ZiYzc3MD4gKGEgamF2YS51dGlsLmNvbmN1cnJlbnQubG9ja3MuUmVl
bnRyYW50TG9jayROb25mYWlyU3luYykKCiJMb3cgTWVtb3J5IERldGVjdG9yIiBkYWVtb24gcHJp
bz02IHRpZD0weDAxOWNiMDAwIG5pZD0weGU5YyBydW5uYWJsZSBbMHgwMDAwMDAwMF0KICAgamF2
YS5sYW5nLlRocmVhZC5TdGF0ZTogUlVOTkFCTEUKCiAgIExvY2tlZCBvd25hYmxlIHN5bmNocm9u
aXplcnM6CgktIE5vbmUKCiJDb21waWxlclRocmVhZDAiIGRhZW1vbiBwcmlvPTEwIHRpZD0weDAx
OWQ3ODAwIG5pZD0weGViMCB3YWl0aW5nIG9uIGNvbmRpdGlvbiBbMHgwMDAwMDAwMF0KICAgamF2
YS5sYW5nLlRocmVhZC5TdGF0ZTogUlVOTkFCTEUKCiAgIExvY2tlZCBvd25hYmxlIHN5bmNocm9u
aXplcnM6CgktIE5vbmUKCiJBdHRhY2ggTGlzdGVuZXIiIGRhZW1vbiBwcmlvPTEwIHRpZD0weDAx
OWNhODAwIG5pZD0weDU5NCB3YWl0aW5nIG9uIGNvbmRpdGlvbiBbMHgwMDAwMDAwMF0KICAgamF2
YS5sYW5nLlRocmVhZC5TdGF0ZTogUlVOTkFCTEUKCiAgIExvY2tlZCBvd25hYmxlIHN5bmNocm9u
aXplcnM6CgktIE5vbmUKCiJTaWduYWwgRGlzcGF0Y2hlciIgZGFlbW9uIHByaW89MTAgdGlkPTB4
MDE5Y2EwMDAgbmlkPTB4ZDJjIHJ1bm5hYmxlIFsweDAwMDAwMDAwXQogICBqYXZhLmxhbmcuVGhy
ZWFkLlN0YXRlOiBSVU5OQUJMRQoKICAgTG9ja2VkIG93bmFibGUgc3luY2hyb25pemVyczoKCS0g
Tm9uZQoKIkZpbmFsaXplciIgZGFlbW9uIHByaW89OCB0aWQ9MHgwMTljNTAwMCBuaWQ9MHhlYTgg
aW4gT2JqZWN0LndhaXQoKSBbMHgwM2QwZjAwMF0KICAgamF2YS5sYW5nLlRocmVhZC5TdGF0ZTog
V0FJVElORyAob24gb2JqZWN0IG1vbml0b3IpCglhdCBqYXZhLmxhbmcuT2JqZWN0LndhaXQoTmF0
aXZlIE1ldGhvZCkKCS0gd2FpdGluZyBvbiA8MHgyM2ZhMjQ1OD4gKGEgamF2YS5sYW5nLnJlZi5S
ZWZlcmVuY2VRdWV1ZSRMb2NrKQoJYXQgamF2YS5sYW5nLnJlZi5SZWZlcmVuY2VRdWV1ZS5yZW1v
dmUoVW5rbm93biBTb3VyY2UpCgktIGxvY2tlZCA8MHgyM2ZhMjQ1OD4gKGEgamF2YS5sYW5nLnJl
Zi5SZWZlcmVuY2VRdWV1ZSRMb2NrKQoJYXQgamF2YS5sYW5nLnJlZi5SZWZlcmVuY2VRdWV1ZS5y
ZW1vdmUoVW5rbm93biBTb3VyY2UpCglhdCBqYXZhLmxhbmcucmVmLkZpbmFsaXplciRGaW5hbGl6
ZXJUaHJlYWQucnVuKFVua25vd24gU291cmNlKQoKICAgTG9ja2VkIG93bmFibGUgc3luY2hyb25p
emVyczoKCS0gTm9uZQoKIlJlZmVyZW5jZSBIYW5kbGVyIiBkYWVtb24gcHJpbz0xMCB0aWQ9MHgw
MTljMDgwMCBuaWQ9MHg5OGMgaW4gT2JqZWN0LndhaXQoKSBbMHgwM2NiZjAwMF0KICAgamF2YS5s
YW5nLlRocmVhZC5TdGF0ZTogV0FJVElORyAob24gb2JqZWN0IG1vbml0b3IpCglhdCBqYXZhLmxh
bmcuT2JqZWN0LndhaXQoTmF0aXZlIE1ldGhvZCkKCS0gd2FpdGluZyBvbiA8MHgyM2ZhMDIwMD4g
KGEgamF2YS5sYW5nLnJlZi5SZWZlcmVuY2UkTG9jaykKCWF0IGphdmEubGFuZy5PYmplY3Qud2Fp
dChPYmplY3QuamF2YTo0ODUpCglhdCBqYXZhLmxhbmcucmVmLlJlZmVyZW5jZSRSZWZlcmVuY2VI
YW5kbGVyLnJ1bihVbmtub3duIFNvdXJjZSkKCS0gbG9ja2VkIDwweDIzZmEwMjAwPiAoYSBqYXZh
LmxhbmcucmVmLlJlZmVyZW5jZSRMb2NrKQoKICAgTG9ja2VkIG93bmFibGUgc3luY2hyb25pemVy
czoKCS0gTm9uZQoKIm1haW4iIHByaW89NiB0aWQ9MHgwMGQ4OTgwMCBuaWQ9MHhlNjggd2FpdGlu
ZyBvbiBjb25kaXRpb24gWzB4MDAyY2YwMDBdCiAgIGphdmEubGFuZy5UaHJlYWQuU3RhdGU6IFRJ
TUVEX1dBSVRJTkcgKHBhcmtpbmcpCglhdCBzdW4ubWlzYy5VbnNhZmUucGFyayhOYXRpdmUgTWV0
aG9kKQoJLSBwYXJraW5nIHRvIHdhaXQgZm9yICA8MHgyM2ZhMjRlOD4gKGEgamF2YS51dGlsLmNv
bmN1cnJlbnQubG9ja3MuQWJzdHJhY3RRdWV1ZWRTeW5jaHJvbml6ZXIkQ29uZGl0aW9uT2JqZWN0
KQoJYXQgamF2YS51dGlsLmNvbmN1cnJlbnQubG9ja3MuTG9ja1N1cHBvcnQucGFya05hbm9zKFVu
a25vd24gU291cmNlKQoJYXQgamF2YS51dGlsLmNvbmN1cnJlbnQubG9ja3MuQWJzdHJhY3RRdWV1
ZWRTeW5jaHJvbml6ZXIkQ29uZGl0aW9uT2JqZWN0LmF3YWl0TmFub3MoVW5rbm93biBTb3VyY2Up
CglhdCBqYXZhLnV0aWwuY29uY3VycmVudC5UaHJlYWRQb29sRXhlY3V0b3IuYXdhaXRUZXJtaW5h
dGlvbihVbmtub3duIFNvdXJjZSkKCWF0IG9yZy5vcGVuc29sYXJpcy5vcGVuZ3Jvay5pbmRleC5J
bmRleGVyLmRvSW5kZXhlckV4ZWN1dGlvbihJbmRleGVyLmphdmE6NjIyKQoJYXQgb3JnLm9wZW5z
b2xhcmlzLm9wZW5ncm9rLmluZGV4LkluZGV4ZXIubWFpbihJbmRleGVyLmphdmE6NDI5KQoKICAg
TG9ja2VkIG93bmFibGUgc3luY2hyb25pemVyczoKCS0gTm9uZQoKIlZNIFRocmVhZCIgcHJpbz0x
MCB0aWQ9MHgwMTliZjQwMCBuaWQ9MHhiN2MgcnVubmFibGUgCgoiVk0gUGVyaW9kaWMgVGFzayBU
aHJlYWQiIHByaW89MTAgdGlkPTB4MDE5ZTk4MDAgbmlkPTB4ODhjIHdhaXRpbmcgb24gY29uZGl0
aW9uIAoKSk5JIGdsb2JhbCByZWZlcmVuY2VzOiAxMDM5Cgo=
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
              isurl="0"
          >
            <attachid>4142</attachid>
            <date>2010-06-23 10:59:00 +0000</date>
            <delta_ts>2010-06-23 10:59:06 +0000</delta_ts>
            <desc>Tag file generated by Ctags when the source file contains no bad characters</desc>
            <filename>tags_ok.txt</filename>
            <type>text/plain</type>
            <size>536</size>
            <attacher>seadog1234567890</attacher>
            
              <data encoding="base64">dGVzdGFwcAlDOlxVc2Vyc1xzZWFkb2dcRGVza3RvcFx0ZXN0XHNvdXJjZVx0ZXN0YXBwXFByb2dy
YW0uY3MJL15uYW1lc3BhY2UgdGVzdGFwcCQvOyIJbmFtZXNwYWNlCWxpbmU6Mw0KUHJvZ3JhbQlD
OlxVc2Vyc1xzZWFkb2dcRGVza3RvcFx0ZXN0XHNvdXJjZVx0ZXN0YXBwXFByb2dyYW0uY3MJL14g
ICAgY2xhc3MgUHJvZ3JhbSQvOyIJY2xhc3MJbGluZTo1CW5hbWVzcGFjZTp0ZXN0YXBwDQpNYWlu
CUM6XFVzZXJzXHNlYWRvZ1xEZXNrdG9wXHRlc3Rcc291cmNlXHRlc3RhcHBcUHJvZ3JhbS5jcwkv
XiAgICAgICAgc3RhdGljIHZvaWQgTWFpbihzdHJpbmdbXSBhcmdzKSQvOyIJbWV0aG9kCWxpbmU6
NwljbGFzczp0ZXN0YXBwLlByb2dyYW0Jc2lnbmF0dXJlOihzdHJpbmdbXSBhcmdzKQ0KSGkJQzpc
VXNlcnNcc2VhZG9nXERlc2t0b3BcdGVzdFxzb3VyY2VcdGVzdGFwcFxQcm9ncmFtLmNzCS9eICAg
ICAgICBzdGF0aWMgdm9pZCBIaSgpICAgJC87IgltZXRob2QJbGluZToxMQljbGFzczp0ZXN0YXBw
LlByb2dyYW0Jc2lnbmF0dXJlOigpDQo=
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
              isurl="0"
          >
            <attachid>4143</attachid>
            <date>2010-06-23 10:59:00 +0000</date>
            <delta_ts>2010-06-23 10:59:53 +0000</delta_ts>
            <desc> Tag file generated by Ctags when the source file does contain bad characters</desc>
            <filename>tags_not_ok.txt</filename>
            <type>text/plain</type>
            <size>477</size>
            <attacher>seadog1234567890</attacher>
            
              <data encoding="base64">dGVzdGFwcAlDOlxVc2Vyc1xzZWFkb2dcRGVza3RvcFx0ZXN0XHNvdXJjZVx0ZXN0YXBwXFByb2dy
YW0uY3MJL15uYW1lc3BhY2UgdGVzdGFwcCQvOyIJbmFtZXNwYWNlCWxpbmU6Mw0KUHJvZ3JhbQlD
OlxVc2Vyc1xzZWFkb2dcRGVza3RvcFx0ZXN0XHNvdXJjZVx0ZXN0YXBwXFByb2dyYW0uY3MJL14g
ICAgY2xhc3MgUHJvZ3JhbSQvOyIJY2xhc3MJbGluZTo1CW5hbWVzcGFjZTp0ZXN0YXBwDQpNYWlu
CUM6XFVzZXJzXHNlYWRvZ1xEZXNrdG9wXHRlc3Rcc291cmNlXHRlc3RhcHBcUHJvZ3JhbS5jcwkv
XiAgICAgICAgc3RhdGljIHZvaWQgTWFpbihzdHJpbmdbXSBhcmdzKSQvOyIJbWV0aG9kCWxpbmU6
NwljbGFzczp0ZXN0YXBwLlByb2dyYW0Jc2lnbmF0dXJlOihzdHJpbmdbXSBhcmdzKQ0KSGkJQzpc
VXNlcnNcc2VhZG9nXERlc2t0b3BcdGVzdFxzb3VyY2VcdGVzdGFwcFxQcm9ncmFtLmNzCS9eICAg
ICAgICBzdGF0aWMgdm9pZCBIaSgp
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
              isurl="0"
          >
            <attachid>4294</attachid>
            <date>2010-09-12 18:39:00 +0000</date>
            <delta_ts>2010-09-14 02:04:52 +0000</delta_ts>
            <desc>Proposed patch</desc>
            <filename>16334.patch.txt</filename>
            <type>text/plain</type>
            <size>3228</size>
            <attacher>seadog1234567890</attacher>
            
              <data encoding="base64">77u/IyBUaGlzIHBhdGNoIGZpbGUgd2FzIGdlbmVyYXRlZCBieSBOZXRCZWFucyBJREUKIyBJdCB1
c2VzIHBsYXRmb3JtIG5ldXRyYWwgVVRGLTggZW5jb2RpbmcgYW5kIFxuIG5ld2xpbmVzLgotLS0g
QmFzZSAoQkFTRSkKKysrIExvY2FsbHkgTW9kaWZpZWQgKEJhc2VkIE9uIExPQ0FMKQpAQCAtNDMs
NiArNDMsNyBAQAogICAgIHByaXZhdGUgT3V0cHV0U3RyZWFtV3JpdGVyIGN0YWdzSW47CiAgICAg
cHJpdmF0ZSBCdWZmZXJlZFJlYWRlciBjdGFnc091dDsKICAgICBwcml2YXRlIHN0YXRpYyBmaW5h
bCBMb2dnZXIgbG9nID0gTG9nZ2VyLmdldExvZ2dlcihDdGFncy5jbGFzcy5nZXROYW1lKCkpOwor
ICAgIHByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBDVEFHU19GSUxURVJfVEVSTUlOQVRPUiA9
ICJfX2N0YWdzX2RvbmVfd2l0aF9maWxlX18iOwogICAgIHByaXZhdGUgU3RyaW5nIGJpbmFyeTsK
ICAgICBwcml2YXRlIFByb2Nlc3NCdWlsZGVyIHByb2Nlc3NCdWlsZGVyOwogCkBAIC03MSw3ICs3
Miw3IEBACiAgICAgICAgICAgICBjb21tYW5kLmFkZCgiLS1maWxlLXNjb3BlPXllcyIpOwogICAg
ICAgICAgICAgY29tbWFuZC5hZGQoIi11Iik7CiAgICAgICAgICAgICBjb21tYW5kLmFkZCgiLS1m
aWx0ZXI9eWVzIik7Ci0gICAgICAgICAgICBjb21tYW5kLmFkZCgiLS1maWx0ZXItdGVybWluYXRv
cj1fX2N0YWdzX2RvbmVfd2l0aF9maWxlX19cbiIpOworICAgICAgICAgICAgY29tbWFuZC5hZGQo
Ii0tZmlsdGVyLXRlcm1pbmF0b3I9IiArIENUQUdTX0ZJTFRFUl9URVJNSU5BVE9SICsgIlxuIik7
CiAgICAgICAgICAgICBjb21tYW5kLmFkZCgiLS1maWVsZHM9LWFuZitpS25TIik7CiAgICAgICAg
ICAgICBjb21tYW5kLmFkZCgiLS1leGNtZD1wYXR0ZXJuIik7CiAgICAgICAgICAgICBjb21tYW5k
LmFkZCgiLS1yZWdleC1Bc209L15bIFxcdF0qKEVOVFJZfEVOVFJZMnxBTFRFTlRSWSlbIFxcdF0q
XFwoKFthLXpBLVowLTlfXSspL1xcMi9mLGZ1bmN0aW9uLyIpOyAgLy8gZm9yIGFzc21lYmx5IGRl
ZmluaXRpb25zCkBAIC0xNTgsOSArMTU5LDE1IEBACiAgICAgICAgICAgICAgICAgICAgIHJldHVy
bjsKICAgICAgICAgICAgICAgICB9CiAKLSAgICAgICAgICAgICAgICBpZiAoIl9fY3RhZ3NfZG9u
ZV93aXRoX2ZpbGVfXyIuZXF1YWxzKHRhZ0xpbmUpKSB7CisgICAgICAgICAgICAgICAgaWYgKENU
QUdTX0ZJTFRFUl9URVJNSU5BVE9SLmVxdWFscyh0YWdMaW5lKSkgewogICAgICAgICAgICAgICAg
ICAgICByZXR1cm47CiAgICAgICAgICAgICAgICAgfQorCisgICAgICAgICAgICAgICAgaWYgKHRh
Z0xpbmUuY29udGFpbnMoQ1RBR1NfRklMVEVSX1RFUk1JTkFUT1IpKSB7CisgICAgICAgICAgICAg
ICAgICAgIGxvZy5sb2coTGV2ZWwuV0FSTklORywgImN0YWdzIGVuY291bnRlcmVkIGEgcHJvYmxl
bSB3aGlsZSBnZW5lcmF0aW5nIHRhZ3MgZm9yIHRoZSBmaWxlLiBUaGUgaW5kZXggd2lsbCBiZSBp
bmNvbXBsZXRlLiIpOworICAgICAgICAgICAgICAgICAgICByZXR1cm47CisgICAgICAgICAgICAg
ICAgfQorCiAgICAgICAgICAgICAgICAgaW50IHAgPSB0YWdMaW5lLmluZGV4T2YoJ1x0Jyk7CiAg
ICAgICAgICAgICAgICAgaWYgKHAgPD0gMCkgewogICAgICAgICAgICAgICAgICAgICAvL2xvZy5m
aW5lKCJTS0lQUElORyBMSU5FIC0gTk8gVEFCIik7CkBAIC0yMDMsNyArMjEwLDcgQEAKIAogICAg
ICAgICAgICAgICAgIGZpbmFsIFN0cmluZyB0eXBlID0KICAgICAgICAgICAgICAgICAgICAgICAg
IGluaGVyID09IG51bGwgPyBraW5kIDoga2luZCArICIgaW4gIiArIGluaGVyOwotICAgICAgICAg
ICAgICAgIGRlZnMuYWRkVGFnKEludGVnZXIucGFyc2VJbnQobG51bSksIGRlZiwgdHlwZSwgbWF0
Y2gpOworICAgICAgICAgICAgICAgIGRlZnMuYWRkVGFnKEludGVnZXIucGFyc2VJbnQobG51bSks
IGRlZi50cmltKCksIHR5cGUudHJpbSgpLCBtYXRjaC50cmltKCkpOwogICAgICAgICAgICAgICAg
IGlmIChzaWduYXR1cmUgIT0gbnVsbCkgeyAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAg
ICAgICAgICAvL1RPRE8gaWYgc29tZSBsYW5ndWFnZXMgdXNlIGRpZmZlcmVudCBjaGFyYWN0ZXIg
Zm9yIHNlcGFyYXRpbmcgYXJndW1lbnRzLCBiZWxvdyBuZWVkcyB0byBiZSBhZGp1c3RlZAogICAg
ICAgICAgICAgICAgICAgICBTdHJpbmdbXSBhcmdzID0gc2lnbmF0dXJlLnNwbGl0KCIsIik7CkBA
IC0yMTMsMTEgKzIyMCwxMSBAQAogICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHNwYWNlID4g
MCAmJiBzcGFjZSA8IGFyZy5sZW5ndGgoKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAg
IFN0cmluZyBhZnRlcnM9YXJnLnN1YnN0cmluZyhzcGFjZSsxKTsKICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICBTdHJpbmdbXSBuYW1lcz1hZnRlcnMuc3BsaXQoIltcXFddIik7IC8vdGhpcyBz
aG91bGQganVzdCBwYXJzZSBvdXQgdmFyaWFibGVzLCB3ZSBhc3N1bWUgZmlyc3Qgbm9uIGVtcHR5
IHRleHQgaXMgdGhlIGFyZ3VtZW50IG5hbWUKLSAgICAgICAgICAgICAgICAgICAgICAgICAgICBm
b3IgKFN0cmluZyBzdHJpbmcgOiBuYW1lcykgewotICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICBpZiAoc3RyaW5nLmxlbmd0aCgpPjApIHsKKyAgICAgICAgICAgICAgICAgICAgICAgICAgICBm
b3IgKFN0cmluZyBuYW1lIDogbmFtZXMpIHsKKyAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
aWYgKG5hbWUubGVuZ3RoKCk+MCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9s
b2cuZmluZSgiUGFyYW0gRGVmID0gIisgc3RyaW5nKTsKLSAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgIGRlZnMuYWRkVGFnKEludGVnZXIudmFsdWVPZihsbnVtKSwgc3RyaW5nLAotICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImFyZ3VtZW50IiwgZGVmICsgc2lnbmF0dXJl
KTsKKyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZnMuYWRkVGFnKEludGVnZXIudmFs
dWVPZihsbnVtKSwgbmFtZS50cmltKCksCisgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAiYXJndW1lbnQiLCBkZWYudHJpbSgpICsgc2lnbmF0dXJlLnRyaW0oKSk7CiAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0K
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
              isurl="0"
          >
            <attachid>4298</attachid>
            <date>2010-09-14 02:04:00 +0000</date>
            <delta_ts>2010-09-14 02:04:52 +0000</delta_ts>
            <desc>new proposed patch</desc>
            <filename>16334.patch-2.txt</filename>
            <type>text/plain</type>
            <size>3266</size>
            <attacher>seadog1234567890</attacher>
            
              <data encoding="base64">77u/IyBUaGlzIHBhdGNoIGZpbGUgd2FzIGdlbmVyYXRlZCBieSBOZXRCZWFucyBJREUKIyBJdCB1
c2VzIHBsYXRmb3JtIG5ldXRyYWwgVVRGLTggZW5jb2RpbmcgYW5kIFxuIG5ld2xpbmVzLgotLS0g
QmFzZSAoQkFTRSkKKysrIExvY2FsbHkgTW9kaWZpZWQgKEJhc2VkIE9uIExPQ0FMKQpAQCAtNDMs
NiArNDMsNyBAQAogICAgIHByaXZhdGUgT3V0cHV0U3RyZWFtV3JpdGVyIGN0YWdzSW47CiAgICAg
cHJpdmF0ZSBCdWZmZXJlZFJlYWRlciBjdGFnc091dDsKICAgICBwcml2YXRlIHN0YXRpYyBmaW5h
bCBMb2dnZXIgbG9nID0gTG9nZ2VyLmdldExvZ2dlcihDdGFncy5jbGFzcy5nZXROYW1lKCkpOwor
ICAgIHByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBDVEFHU19GSUxURVJfVEVSTUlOQVRPUiA9
ICJfX2N0YWdzX2RvbmVfd2l0aF9maWxlX18iOwogICAgIHByaXZhdGUgU3RyaW5nIGJpbmFyeTsK
ICAgICBwcml2YXRlIFByb2Nlc3NCdWlsZGVyIHByb2Nlc3NCdWlsZGVyOwogCkBAIC03MSw3ICs3
Miw3IEBACiAgICAgICAgICAgICBjb21tYW5kLmFkZCgiLS1maWxlLXNjb3BlPXllcyIpOwogICAg
ICAgICAgICAgY29tbWFuZC5hZGQoIi11Iik7CiAgICAgICAgICAgICBjb21tYW5kLmFkZCgiLS1m
aWx0ZXI9eWVzIik7Ci0gICAgICAgICAgICBjb21tYW5kLmFkZCgiLS1maWx0ZXItdGVybWluYXRv
cj1fX2N0YWdzX2RvbmVfd2l0aF9maWxlX19cbiIpOworICAgICAgICAgICAgY29tbWFuZC5hZGQo
Ii0tZmlsdGVyLXRlcm1pbmF0b3I9IiArIENUQUdTX0ZJTFRFUl9URVJNSU5BVE9SICsgIlxuIik7
CiAgICAgICAgICAgICBjb21tYW5kLmFkZCgiLS1maWVsZHM9LWFuZitpS25TIik7CiAgICAgICAg
ICAgICBjb21tYW5kLmFkZCgiLS1leGNtZD1wYXR0ZXJuIik7CiAgICAgICAgICAgICBjb21tYW5k
LmFkZCgiLS1yZWdleC1Bc209L15bIFxcdF0qKEVOVFJZfEVOVFJZMnxBTFRFTlRSWSlbIFxcdF0q
XFwoKFthLXpBLVowLTlfXSspL1xcMi9mLGZ1bmN0aW9uLyIpOyAgLy8gZm9yIGFzc21lYmx5IGRl
ZmluaXRpb25zCkBAIC0xNTgsOSArMTU5LDE2IEBACiAgICAgICAgICAgICAgICAgICAgIHJldHVy
bjsKICAgICAgICAgICAgICAgICB9CiAKLSAgICAgICAgICAgICAgICBpZiAoIl9fY3RhZ3NfZG9u
ZV93aXRoX2ZpbGVfXyIuZXF1YWxzKHRhZ0xpbmUpKSB7CisgICAgICAgICAgICAgICAgaWYgKENU
QUdTX0ZJTFRFUl9URVJNSU5BVE9SLmVxdWFscyh0YWdMaW5lKSkgewogICAgICAgICAgICAgICAg
ICAgICByZXR1cm47CiAgICAgICAgICAgICAgICAgfQorCisgICAgICAgICAgICAgICAgLy9maXgg
Zm9yIGJ1ZyAjMTYzMzQKKyAgICAgICAgICAgICAgICBpZiAodGFnTGluZS5lbmRzV2l0aChDVEFH
U19GSUxURVJfVEVSTUlOQVRPUikpIHsKKyAgICAgICAgICAgICAgICAgICAgbG9nLmxvZyhMZXZl
bC5XQVJOSU5HLCAiY3RhZ3MgZW5jb3VudGVyZWQgYSBwcm9ibGVtIHdoaWxlIGdlbmVyYXRpbmcg
dGFncyBmb3IgdGhlIGZpbGUuIFRoZSBpbmRleCB3aWxsIGJlIGluY29tcGxldGUuIik7CisgICAg
ICAgICAgICAgICAgICAgIHJldHVybjsKKyAgICAgICAgICAgICAgICB9CisKICAgICAgICAgICAg
ICAgICBpbnQgcCA9IHRhZ0xpbmUuaW5kZXhPZignXHQnKTsKICAgICAgICAgICAgICAgICBpZiAo
cCA8PSAwKSB7CiAgICAgICAgICAgICAgICAgICAgIC8vbG9nLmZpbmUoIlNLSVBQSU5HIExJTkUg
LSBOTyBUQUIiKTsKQEAgLTIwMyw3ICsyMTEsNyBAQAogCiAgICAgICAgICAgICAgICAgZmluYWwg
U3RyaW5nIHR5cGUgPQogICAgICAgICAgICAgICAgICAgICAgICAgaW5oZXIgPT0gbnVsbCA/IGtp
bmQgOiBraW5kICsgIiBpbiAiICsgaW5oZXI7Ci0gICAgICAgICAgICAgICAgZGVmcy5hZGRUYWco
SW50ZWdlci5wYXJzZUludChsbnVtKSwgZGVmLCB0eXBlLCBtYXRjaCk7CisgICAgICAgICAgICAg
ICAgZGVmcy5hZGRUYWcoSW50ZWdlci5wYXJzZUludChsbnVtKSwgZGVmLnRyaW0oKSwgdHlwZS50
cmltKCksIG1hdGNoLnRyaW0oKSk7CiAgICAgICAgICAgICAgICAgaWYgKHNpZ25hdHVyZSAhPSBu
dWxsKSB7ICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgIC8vVE9ETyBpZiBz
b21lIGxhbmd1YWdlcyB1c2UgZGlmZmVyZW50IGNoYXJhY3RlciBmb3Igc2VwYXJhdGluZyBhcmd1
bWVudHMsIGJlbG93IG5lZWRzIHRvIGJlIGFkanVzdGVkCiAgICAgICAgICAgICAgICAgICAgIFN0
cmluZ1tdIGFyZ3MgPSBzaWduYXR1cmUuc3BsaXQoIiwiKTsKQEAgLTIxMywxMSArMjIxLDExIEBA
CiAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoc3BhY2UgPiAwICYmIHNwYWNlIDwgYXJnLmxl
bmd0aCgpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU3RyaW5nIGFmdGVycz1hcmcu
c3Vic3RyaW5nKHNwYWNlKzEpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgIFN0cmluZ1td
IG5hbWVzPWFmdGVycy5zcGxpdCgiW1xcV10iKTsgLy90aGlzIHNob3VsZCBqdXN0IHBhcnNlIG91
dCB2YXJpYWJsZXMsIHdlIGFzc3VtZSBmaXJzdCBub24gZW1wdHkgdGV4dCBpcyB0aGUgYXJndW1l
bnQgbmFtZQotICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoU3RyaW5nIHN0cmluZyA6
IG5hbWVzKSB7Ci0gICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzdHJpbmcubGVuZ3Ro
KCk+MCkgeworICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoU3RyaW5nIG5hbWUgOiBu
YW1lcykgeworICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAobmFtZS5sZW5ndGgoKT4w
KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL2xvZy5maW5lKCJQYXJhbSBEZWYg
PSAiKyBzdHJpbmcpOwotICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmcy5hZGRUYWco
SW50ZWdlci52YWx1ZU9mKGxudW0pLCBzdHJpbmcsCi0gICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAiYXJndW1lbnQiLCBkZWYgKyBzaWduYXR1cmUpOworICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgZGVmcy5hZGRUYWcoSW50ZWdlci52YWx1ZU9mKGxudW0pLCBuYW1lLnRy
aW0oKSwKKyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJhcmd1bWVudCIsIGRl
Zi50cmltKCkgKyBzaWduYXR1cmUudHJpbSgpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgIGJyZWFrOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgfQo=
</data>

          </attachment>
      

    </bug>

</bugzilla>