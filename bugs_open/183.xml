<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "http://defect.opensolaris.org/bz/bugzilla.dtd">

<bugzilla version="3.6.5"
          urlbase="http://defect.opensolaris.org/bz/"
          
          maintainer="website-admin@opensolaris.org"
>

    <bug>
          <bug_id>183</bug_id>
          
          <creation_ts>2007-11-07 17:18:00 +0000</creation_ts>
          <short_desc>Caching webapp pages, especially listings</short_desc>
          <delta_ts>2008-08-31 02:43:52 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Development</classification>
          <product>opengrok</product>
          <component>webapp</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>ACCEPTED</bug_status>
          
          
          
          
          
          
          <priority>P4</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Leo Davis">ldavis</reporter>
          <assigned_to name="Trond Norbye">trond.norbye</assigned_to>
          
          

      

      

      

          <long_desc isprivate="0">
            <commentid>463</commentid>
            <who name="Leo Davis">ldavis</who>
            <bug_when>2007-11-07 17:18:03 +0000</bug_when>
            <thetext>It might be nice to have memory and disk cached output, especially for list.jsp.  I may try an experiment with ehcache if I have time.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>11516</commentid>
            <who name="Trond Norbye">trond.norbye</who>
            <bug_when>2008-08-31 02:43:52 +0000</bug_when>
            <thetext>If we choose to add a caching layer (we should probably do some analysis first to see if this is a bottleneck), and create a general object caching layer various parts of the system may use.</thetext>
          </long_desc>
      
      

    </bug>

</bugzilla>